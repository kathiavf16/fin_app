[{"/Users/kathiavargas/Desktop/dataStudio/my_app/src/index.js":"1","/Users/kathiavargas/Desktop/dataStudio/my_app/src/App.js":"2","/Users/kathiavargas/Desktop/dataStudio/my_app/src/serviceWorker.js":"3","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/BarChartCus.js":"4","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Linechart.js":"5","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/MapChart.js":"6","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Section.js":"7","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Navbar.js":"8","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Card.js":"9","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Dropdown.js":"10","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Piech.js":"11","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/CustomBar.js":"12","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/CustomBar2.js":"13"},{"size":451,"mtime":1540426084000,"results":"14","hashOfConfig":"15"},{"size":9921,"mtime":1607447862983,"results":"16","hashOfConfig":"15"},{"size":4812,"mtime":1540426084000,"results":"17","hashOfConfig":"15"},{"size":645,"mtime":1607128322653,"results":"18","hashOfConfig":"15"},{"size":1222,"mtime":1607391334628,"results":"19","hashOfConfig":"15"},{"size":4379,"mtime":1607440796563,"results":"20","hashOfConfig":"15"},{"size":1326,"mtime":1607447891361,"results":"21","hashOfConfig":"15"},{"size":2577,"mtime":1606949026680,"results":"22","hashOfConfig":"15"},{"size":206,"mtime":1606489196801,"results":"23","hashOfConfig":"15"},{"size":3169,"mtime":1606602614465,"results":"24","hashOfConfig":"15"},{"size":1305,"mtime":1607184907338,"results":"25","hashOfConfig":"15"},{"size":1874,"mtime":1607435744646,"results":"26","hashOfConfig":"15"},{"size":1874,"mtime":1607279192723,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iefxsn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},"/Users/kathiavargas/Desktop/dataStudio/my_app/src/index.js",[],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/App.js",["58","59","60","61","62","63","64","65","66","67"],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/serviceWorker.js",[],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/BarChartCus.js",["68"],"import React from \"react\";\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport default function BarChartCus({data, key1, key2, xAxis, yAxis}) {\n  return (\n    <div className=\"bar-cus\">\n    <BarChart\n      width={600}\n      layout=\"vertical\"\n      height={300}\n      data={data}\n      margin={{\n    top: 5, right: 0, left: 55, bottom: 5,\n    }}\n                  >\n\n  <CartesianGrid strokeDasharray=\"3 3\" />\n  <XAxis type=\"number\" dataKey={xAxis} />\n  <YAxis type=\"category\" dataKey={yAxis}/>\n  <Tooltip />\n  <Legend />\n  <Bar dataKey={key1} fill=\"#C34A36\" />\n\n\n</BarChart>\n\n    </div>\n  );\n}\n",["69","70"],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Linechart.js",[],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/MapChart.js",["71","72","73"],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Section.js",[],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Navbar.js",[],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Card.js",[],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Dropdown.js",[],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/Piech.js",["74","75"],"import React, { PureComponent } from 'react';\nimport {\n  PieChart, Pie, Sector, Cell,\n} from 'recharts';\n\n\n// stocks from \"../Data/stock_region.json\";\n\n// const data = [\n//   { stock: 'Yes', value: 1500 },\n//\n//   { stock: 'No', value: 500 },\n//\n// ];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n}) => {\n   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\n\nexport default function Piech({data}) {\n\n    return (\n      <PieChart width={400} height={400}>\n        <Pie\n          data={data}\n          cx={200}\n          cy={200}\n          labelLine={false}\n          label={renderCustomizedLabel}\n          outerRadius={80}\n          fill=\"#8884d8\"\n          dataKey=\"VALUE\"\n\n        >\n          {\n            data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n          }\n        </Pie>\n      </PieChart>\n    );\n  }\n","/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/CustomBar.js",["76"],"/Users/kathiavargas/Desktop/dataStudio/my_app/src/Components/CustomBar2.js",["77"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,ResponsiveContainer,\n} from 'recharts';\nimport { scaleOrdinal } from 'd3-scale';\nimport { schemeOranges} from 'd3-scale-chromatic';\nimport datas from \"../Data/topstates.json\";\nconst colors = scaleOrdinal(schemeOranges[5]).range();\n\nconst filteredata = datas.filter(index => index.livingindex >= 1.342 &&  index.livingindex < 100)\nconsole.log(\"top\",filteredata)\n\nconst getPath = (x, y, width, height) => `M${x},${y + height}\n          C${x + width / 3},${y + height} ${x + width / 2},${y + height / 3} ${x + width / 2}, ${y}\n          C${x + width / 2},${y + height / 3} ${x + 2 * width / 3},${y + height} ${x + width}, ${y + height}\n          Z`;\n\nconst TriangleBar = (props) => {\n  const {\n    fill, x, y, width, height,\n  } = props;\n\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nTriangleBar.propTypes = {\n  fill: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\n\nexport default function CustomBar (){\n\n    return (\n      <div style={{ width: '100%', height: 300 }}>\n      <ResponsiveContainer>\n      <BarChart\n        width={400}\n        height={300}\n        data={filteredata}\n        margin={{\n          top: 20, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"abbr\" angle={0} />\n        <YAxis />\n        <Tooltip />\n        <Bar dataKey=\"Yearly Expenses +65yo\" fill=\"red\" shape={<TriangleBar />}>\n          {\n            filteredata.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={colors[index % 10]} />\n            ))\n          }\n        </Bar>\n      </BarChart>\n      </ResponsiveContainer>\n      </div>\n\n    );\n  }\n",{"ruleId":"78","severity":1,"message":"79","line":1,"column":27,"nodeType":"80","messageId":"81","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"82","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":19},{"ruleId":"78","severity":1,"message":"83","line":9,"column":8,"nodeType":"80","messageId":"81","endLine":9,"endColumn":19},{"ruleId":"78","severity":1,"message":"84","line":14,"column":8,"nodeType":"80","messageId":"81","endLine":14,"endColumn":13},{"ruleId":"78","severity":1,"message":"85","line":39,"column":8,"nodeType":"80","messageId":"81","endLine":39,"endColumn":13},{"ruleId":"78","severity":1,"message":"86","line":46,"column":7,"nodeType":"80","messageId":"81","endLine":46,"endColumn":18},{"ruleId":"78","severity":1,"message":"87","line":47,"column":7,"nodeType":"80","messageId":"81","endLine":47,"endColumn":13},{"ruleId":"78","severity":1,"message":"88","line":50,"column":7,"nodeType":"80","messageId":"81","endLine":50,"endColumn":16},{"ruleId":"78","severity":1,"message":"89","line":51,"column":7,"nodeType":"80","messageId":"81","endLine":51,"endColumn":13},{"ruleId":"78","severity":1,"message":"90","line":52,"column":7,"nodeType":"80","messageId":"81","endLine":52,"endColumn":19},{"ruleId":"78","severity":1,"message":"91","line":3,"column":18,"nodeType":"80","messageId":"81","endLine":3,"endColumn":22},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"78","severity":1,"message":"96","line":29,"column":7,"nodeType":"80","messageId":"81","endLine":29,"endColumn":17},{"ruleId":"78","severity":1,"message":"97","line":58,"column":29,"nodeType":"80","messageId":"81","endLine":58,"endColumn":33},{"ruleId":"78","severity":1,"message":"97","line":71,"column":29,"nodeType":"80","messageId":"81","endLine":71,"endColumn":33},{"ruleId":"78","severity":1,"message":"98","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":30},{"ruleId":"78","severity":1,"message":"99","line":3,"column":18,"nodeType":"80","messageId":"81","endLine":3,"endColumn":24},{"ruleId":"78","severity":1,"message":"100","line":4,"column":62,"nodeType":"80","messageId":"81","endLine":4,"endColumn":68},{"ruleId":"78","severity":1,"message":"100","line":4,"column":62,"nodeType":"80","messageId":"81","endLine":4,"endColumn":68},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'stockregion' is defined but never used.","'BarChartCus' is defined but never used.","'Piech' is defined but never used.","'stock' is assigned a value but never used.","'filteredata' is assigned a value but never used.","'income' is assigned a value but never used.","'incomes99' is assigned a value but never used.","'grades' is assigned a value but never used.","'coefficients' is assigned a value but never used.","'Cell' is defined but never used.","no-native-reassign",["101"],"no-negated-in-lhs",["102"],"'colorScale' is assigned a value but never used.","'name' is assigned a value but never used.","'PureComponent' is defined but never used.","'Sector' is defined but never used.","'Legend' is defined but never used.","no-global-assign","no-unsafe-negation"]