{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar useEditable = function useEditable(props, computedProps, computedPropsRef) {\n  var editInfoRef = (0, _react.useRef)(null);\n  var onEditStop = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditStop) {\n      computedProps.initialProps.onEditStop(editProps);\n    }\n\n    editInfoRef.current = null;\n  }, []);\n  var onEditCancel = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditCancel) {\n      computedProps.initialProps.onEditCancel(editProps);\n    }\n  }, []);\n  var onEditComplete = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.autoFocusOnEditComplete) {\n      computedProps.focus();\n    }\n\n    if (computedProps.initialProps.onEditComplete) {\n      computedProps.initialProps.onEditComplete(editProps);\n    }\n  }, []);\n  var onEditValueChange = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditValueChange) {\n      computedProps.initialProps.onEditValueChange(editProps);\n    }\n  }, []);\n  var onEditStart = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var columnId = editProps.columnId;\n    editInfoRef.current = {\n      columnId: columnId,\n      columnIndex: editProps.columnIndex,\n      rowId: editProps.rowId,\n      rowIndex: editProps.rowIndex\n    };\n\n    if (computedProps.initialProps.onEditStart) {\n      computedProps.initialProps.onEditStart(editProps);\n    }\n\n    requestAnimationFrame(function () {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var col = computedProps.getColumnBy(columnId);\n\n      if (!col) {\n        return;\n      }\n\n      computedProps.scrollToColumn(col.computedVisibleIndex, {});\n    });\n  }, []);\n  var tryStartEdit = (0, _react.useCallback)(function () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1\n    },\n        rowIndex = _ref.rowIndex,\n        rowId = _ref.rowId,\n        columnId = _ref.columnId,\n        dir = _ref.dir;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().tryStartEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            dir: dir\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var startEdit = (0, _react.useCallback)(function () {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowIndex = _ref2.rowIndex,\n        rowId = _ref2.rowId,\n        columnId = _ref2.columnId,\n        dir = _ref2.dir,\n        value = _ref2.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().startEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            value: value\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var completeEdit = (0, _react.useCallback)(function () {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowId = _ref3.rowId,\n        rowIndex = _ref3.rowIndex,\n        columnId = _ref3.columnId,\n        value = _ref3.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n    var editInfo = getCurrentEditInfo();\n\n    if (!editInfo) {\n      return;\n    }\n\n    if (!col && editInfo) {\n      col = computedProps.getColumnBy(editInfo.columnId);\n      rowIndex = editInfo.rowIndex;\n    }\n\n    if (!col) {\n      return;\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    computedProps.scrollToIndex(rowIndex, undefined, function () {\n      setTimeout(function () {\n        computedProps.getColumnLayout().completeEdit({\n          rowIndex: rowIndex,\n          columnIndex: col.computedVisibleIndex,\n          value: value\n        });\n      }, 50);\n    });\n  }, []);\n  var getCurrentEditInfo = (0, _react.useCallback)(function () {\n    return editInfoRef.current;\n  }, []);\n  return {\n    getCurrentEditInfo: getCurrentEditInfo,\n    startEdit: startEdit,\n    onEditStart: onEditStart,\n    onEditStop: onEditStop,\n    onEditCancel: onEditCancel,\n    onEditComplete: onEditComplete,\n    onEditValueChange: onEditValueChange,\n    completeEdit: completeEdit,\n    tryStartEdit: tryStartEdit\n  };\n};\n\nvar _default = useEditable;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/hooks/useEditable/index.js"],"names":["Object","defineProperty","exports","value","default","_react","require","useEditable","props","computedProps","computedPropsRef","editInfoRef","useRef","onEditStop","useCallback","editProps","current","initialProps","onEditCancel","onEditComplete","autoFocusOnEditComplete","focus","onEditValueChange","onEditStart","columnId","columnIndex","rowId","rowIndex","requestAnimationFrame","col","getColumnBy","scrollToColumn","computedVisibleIndex","tryStartEdit","_ref","arguments","length","undefined","dir","Promise","reject","Error","concat","getRowIndexById","resolve","scrollToIndex","setTimeout","getColumnLayout","then","startEdit","_ref2","completeEdit","_ref3","editInfo","getCurrentEditInfo","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar useEditable = function useEditable(props, computedProps, computedPropsRef) {\n  var editInfoRef = (0, _react.useRef)(null);\n  var onEditStop = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditStop) {\n      computedProps.initialProps.onEditStop(editProps);\n    }\n\n    editInfoRef.current = null;\n  }, []);\n  var onEditCancel = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditCancel) {\n      computedProps.initialProps.onEditCancel(editProps);\n    }\n  }, []);\n  var onEditComplete = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.autoFocusOnEditComplete) {\n      computedProps.focus();\n    }\n\n    if (computedProps.initialProps.onEditComplete) {\n      computedProps.initialProps.onEditComplete(editProps);\n    }\n  }, []);\n  var onEditValueChange = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.initialProps.onEditValueChange) {\n      computedProps.initialProps.onEditValueChange(editProps);\n    }\n  }, []);\n  var onEditStart = (0, _react.useCallback)(function (editProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var columnId = editProps.columnId;\n    editInfoRef.current = {\n      columnId: columnId,\n      columnIndex: editProps.columnIndex,\n      rowId: editProps.rowId,\n      rowIndex: editProps.rowIndex\n    };\n\n    if (computedProps.initialProps.onEditStart) {\n      computedProps.initialProps.onEditStart(editProps);\n    }\n\n    requestAnimationFrame(function () {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var col = computedProps.getColumnBy(columnId);\n\n      if (!col) {\n        return;\n      }\n\n      computedProps.scrollToColumn(col.computedVisibleIndex, {});\n    });\n  }, []);\n  var tryStartEdit = (0, _react.useCallback)(function () {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1\n    },\n        rowIndex = _ref.rowIndex,\n        rowId = _ref.rowId,\n        columnId = _ref.columnId,\n        dir = _ref.dir;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().tryStartEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            dir: dir\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var startEdit = (0, _react.useCallback)(function () {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowIndex = _ref2.rowIndex,\n        rowId = _ref2.rowId,\n        columnId = _ref2.columnId,\n        dir = _ref2.dir,\n        value = _ref2.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n\n    if (!col) {\n      return Promise.reject(new Error(\"No column found for columnId: \".concat(columnId)));\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    return new Promise(function (resolve, reject) {\n      computedProps.scrollToIndex(rowIndex, undefined, function () {\n        setTimeout(function () {\n          computedProps.getColumnLayout().startEdit({\n            rowIndex: rowIndex,\n            rowId: rowId,\n            columnIndex: col.computedVisibleIndex,\n            columnId: columnId,\n            value: value\n          }).then(resolve, reject);\n        }, 50);\n      });\n    });\n  }, []);\n  var completeEdit = (0, _react.useCallback)(function () {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      rowIndex: undefined,\n      rowId: undefined,\n      columnId: '',\n      dir: 1,\n      value: ''\n    },\n        rowId = _ref3.rowId,\n        rowIndex = _ref3.rowIndex,\n        columnId = _ref3.columnId,\n        value = _ref3.value;\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return Promise.reject(new Error(\"Grid was probably unmounted\"));\n    }\n\n    var col = computedProps.getColumnBy(columnId);\n    var editInfo = getCurrentEditInfo();\n\n    if (!editInfo) {\n      return;\n    }\n\n    if (!col && editInfo) {\n      col = computedProps.getColumnBy(editInfo.columnId);\n      rowIndex = editInfo.rowIndex;\n    }\n\n    if (!col) {\n      return;\n    }\n\n    if (rowIndex === undefined) {\n      rowIndex = computedProps.getRowIndexById(rowId);\n    }\n\n    computedProps.scrollToIndex(rowIndex, undefined, function () {\n      setTimeout(function () {\n        computedProps.getColumnLayout().completeEdit({\n          rowIndex: rowIndex,\n          columnIndex: col.computedVisibleIndex,\n          value: value\n        });\n      }, 50);\n    });\n  }, []);\n  var getCurrentEditInfo = (0, _react.useCallback)(function () {\n    return editInfoRef.current;\n  }, []);\n  return {\n    getCurrentEditInfo: getCurrentEditInfo,\n    startEdit: startEdit,\n    onEditStart: onEditStart,\n    onEditStop: onEditStop,\n    onEditCancel: onEditCancel,\n    onEditComplete: onEditComplete,\n    onEditValueChange: onEditValueChange,\n    completeEdit: completeEdit,\n    tryStartEdit: tryStartEdit\n  };\n};\n\nvar _default = useEditable;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}