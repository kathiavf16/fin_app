{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _region = _interopRequireDefault(require(\"../region\"));\n\n_region.default.align = function (sourceRegion, targetRegion, align) {\n  targetRegion = _region.default.from(targetRegion);\n  align = (align || 'c-c').split('-');\n\n  if (align.length != 2) {\n    console.warn(\"Incorrect region alignment! The align parameter need to be in the form 'br-c', that is, a - separated string!\", align);\n  }\n\n  return _region.default.alignToPoint(sourceRegion, targetRegion.getPoint(align[1]), align[0]);\n};\n\n_region.default.alignToPoint = function (region, point, anchor) {\n  region = _region.default.from(region);\n  var sourcePoint = region.getPoint(anchor);\n  var count = 0;\n  var shiftObj = {};\n\n  if (sourcePoint.x != null && point.x != null) {\n    count++;\n    shiftObj.left = point.x - sourcePoint.x;\n  }\n\n  if (sourcePoint.y != null && point.y != null) {\n    count++;\n    shiftObj.top = point.y - sourcePoint.y;\n  }\n\n  if (count) {\n    region.shift(shiftObj);\n  }\n\n  return region;\n};","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/region-align/Region.static.js"],"names":["_interopRequireDefault","require","_region","default","align","sourceRegion","targetRegion","from","split","length","console","warn","alignToPoint","getPoint","region","point","anchor","sourcePoint","count","shiftObj","x","left","y","top","shift"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEA,IAAIC,OAAO,GAAGF,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAApC;;AAEAC,OAAO,CAACC,OAAR,CAAgBC,KAAhB,GAAwB,UAAUC,YAAV,EAAwBC,YAAxB,EAAsCF,KAAtC,EAA6C;AACnEE,EAAAA,YAAY,GAAGJ,OAAO,CAACC,OAAR,CAAgBI,IAAhB,CAAqBD,YAArB,CAAf;AACAF,EAAAA,KAAK,GAAG,CAACA,KAAK,IAAI,KAAV,EAAiBI,KAAjB,CAAuB,GAAvB,CAAR;;AAEA,MAAIJ,KAAK,CAACK,MAAN,IAAgB,CAApB,EAAuB;AACrBC,IAAAA,OAAO,CAACC,IAAR,CAAa,+GAAb,EAA8HP,KAA9H;AACD;;AAED,SAAOF,OAAO,CAACC,OAAR,CAAgBS,YAAhB,CAA6BP,YAA7B,EAA2CC,YAAY,CAACO,QAAb,CAAsBT,KAAK,CAAC,CAAD,CAA3B,CAA3C,EAA4EA,KAAK,CAAC,CAAD,CAAjF,CAAP;AACD,CATD;;AAWAF,OAAO,CAACC,OAAR,CAAgBS,YAAhB,GAA+B,UAAUE,MAAV,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC9DF,EAAAA,MAAM,GAAGZ,OAAO,CAACC,OAAR,CAAgBI,IAAhB,CAAqBO,MAArB,CAAT;AACA,MAAIG,WAAW,GAAGH,MAAM,CAACD,QAAP,CAAgBG,MAAhB,CAAlB;AACA,MAAIE,KAAK,GAAG,CAAZ;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,MAAIF,WAAW,CAACG,CAAZ,IAAiB,IAAjB,IAAyBL,KAAK,CAACK,CAAN,IAAW,IAAxC,EAA8C;AAC5CF,IAAAA,KAAK;AACLC,IAAAA,QAAQ,CAACE,IAAT,GAAgBN,KAAK,CAACK,CAAN,GAAUH,WAAW,CAACG,CAAtC;AACD;;AAED,MAAIH,WAAW,CAACK,CAAZ,IAAiB,IAAjB,IAAyBP,KAAK,CAACO,CAAN,IAAW,IAAxC,EAA8C;AAC5CJ,IAAAA,KAAK;AACLC,IAAAA,QAAQ,CAACI,GAAT,GAAeR,KAAK,CAACO,CAAN,GAAUL,WAAW,CAACK,CAArC;AACD;;AAED,MAAIJ,KAAJ,EAAW;AACTJ,IAAAA,MAAM,CAACU,KAAP,CAAaL,QAAb;AACD;;AAED,SAAOL,MAAP;AACD,CArBD","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _region = _interopRequireDefault(require(\"../region\"));\n\n_region.default.align = function (sourceRegion, targetRegion, align) {\n  targetRegion = _region.default.from(targetRegion);\n  align = (align || 'c-c').split('-');\n\n  if (align.length != 2) {\n    console.warn(\"Incorrect region alignment! The align parameter need to be in the form 'br-c', that is, a - separated string!\", align);\n  }\n\n  return _region.default.alignToPoint(sourceRegion, targetRegion.getPoint(align[1]), align[0]);\n};\n\n_region.default.alignToPoint = function (region, point, anchor) {\n  region = _region.default.from(region);\n  var sourcePoint = region.getPoint(anchor);\n  var count = 0;\n  var shiftObj = {};\n\n  if (sourcePoint.x != null && point.x != null) {\n    count++;\n    shiftObj.left = point.x - sourcePoint.x;\n  }\n\n  if (sourcePoint.y != null && point.y != null) {\n    count++;\n    shiftObj.top = point.y - sourcePoint.y;\n  }\n\n  if (count) {\n    region.shift(shiftObj);\n  }\n\n  return region;\n};"]},"metadata":{},"sourceType":"script"}