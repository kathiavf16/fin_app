{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getCurrencyForCountryCode;\n\nvar _countryCurrencyCodes = _interopRequireDefault(require(\"../data/countryCurrencyCodes\"));\n\nvar _countries = _interopRequireDefault(require(\"../data/countries\"));\n\nvar _find = _interopRequireDefault(require(\"./find\"));\n\nvar countriesByCountryCode = _countries.default.reduce(function (accumulator, country) {\n  accumulator[country.code] = country.name;\n  accumulator[country.code.toLowerCase()] = country.name;\n  return accumulator;\n}, {});\n\nfunction getCurrencyForCountryCode(locale) {\n  var currencyDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'symbol';\n  var code = locale.split('-')[1];\n  var countryNameByCode = countriesByCountryCode[code];\n\n  if (countryNameByCode) {\n    var country = countriesByCountryCode[code] && countriesByCountryCode[code].toLowerCase();\n    var currency = (0, _find.default)(_countryCurrencyCodes.default, function (countryCode) {\n      return (countryCode.countries || []).indexOf(country) !== -1;\n    });\n\n    if (currency) {\n      return new Number(1).toLocaleString(locale, {\n        style: 'currency',\n        currency: currency.code,\n        currencyDisplay: currencyDisplay\n      }).replace(/[0-9\\.\\,]/g, '');\n    }\n\n    return '';\n  } else {\n    console.error(\"Cannot get currency based on country code. Country \".concat(code, \" not found.\"));\n    return '';\n  }\n}","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/NumericInput/src/utils/get-currency-for-country-code.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","getCurrencyForCountryCode","_countryCurrencyCodes","_countries","_find","countriesByCountryCode","reduce","accumulator","country","code","name","toLowerCase","locale","currencyDisplay","arguments","length","undefined","split","countryNameByCode","currency","countryCode","countries","indexOf","Number","toLocaleString","style","replace","console","error","concat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,yBAAlB;;AAEA,IAAIC,qBAAqB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,8BAAD,CAAR,CAAlD;;AAEA,IAAIQ,UAAU,GAAGT,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAAvC;;AAEA,IAAIS,KAAK,GAAGV,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC;;AAEA,IAAIU,sBAAsB,GAAGF,UAAU,CAACH,OAAX,CAAmBM,MAAnB,CAA0B,UAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AACrFD,EAAAA,WAAW,CAACC,OAAO,CAACC,IAAT,CAAX,GAA4BD,OAAO,CAACE,IAApC;AACAH,EAAAA,WAAW,CAACC,OAAO,CAACC,IAAR,CAAaE,WAAb,EAAD,CAAX,GAA0CH,OAAO,CAACE,IAAlD;AACA,SAAOH,WAAP;AACD,CAJ4B,EAI1B,EAJ0B,CAA7B;;AAMA,SAASN,yBAAT,CAAmCW,MAAnC,EAA2C;AACzC,MAAIC,eAAe,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,QAA1F;AACA,MAAIL,IAAI,GAAGG,MAAM,CAACK,KAAP,CAAa,GAAb,EAAkB,CAAlB,CAAX;AACA,MAAIC,iBAAiB,GAAGb,sBAAsB,CAACI,IAAD,CAA9C;;AAEA,MAAIS,iBAAJ,EAAuB;AACrB,QAAIV,OAAO,GAAGH,sBAAsB,CAACI,IAAD,CAAtB,IAAgCJ,sBAAsB,CAACI,IAAD,CAAtB,CAA6BE,WAA7B,EAA9C;AACA,QAAIQ,QAAQ,GAAG,CAAC,GAAGf,KAAK,CAACJ,OAAV,EAAmBE,qBAAqB,CAACF,OAAzC,EAAkD,UAAUoB,WAAV,EAAuB;AACtF,aAAO,CAACA,WAAW,CAACC,SAAZ,IAAyB,EAA1B,EAA8BC,OAA9B,CAAsCd,OAAtC,MAAmD,CAAC,CAA3D;AACD,KAFc,CAAf;;AAIA,QAAIW,QAAJ,EAAc;AACZ,aAAO,IAAII,MAAJ,CAAW,CAAX,EAAcC,cAAd,CAA6BZ,MAA7B,EAAqC;AAC1Ca,QAAAA,KAAK,EAAE,UADmC;AAE1CN,QAAAA,QAAQ,EAAEA,QAAQ,CAACV,IAFuB;AAG1CI,QAAAA,eAAe,EAAEA;AAHyB,OAArC,EAIJa,OAJI,CAII,YAJJ,EAIkB,EAJlB,CAAP;AAKD;;AAED,WAAO,EAAP;AACD,GAfD,MAeO;AACLC,IAAAA,OAAO,CAACC,KAAR,CAAc,sDAAsDC,MAAtD,CAA6DpB,IAA7D,EAAmE,aAAnE,CAAd;AACA,WAAO,EAAP;AACD;AACF","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getCurrencyForCountryCode;\n\nvar _countryCurrencyCodes = _interopRequireDefault(require(\"../data/countryCurrencyCodes\"));\n\nvar _countries = _interopRequireDefault(require(\"../data/countries\"));\n\nvar _find = _interopRequireDefault(require(\"./find\"));\n\nvar countriesByCountryCode = _countries.default.reduce(function (accumulator, country) {\n  accumulator[country.code] = country.name;\n  accumulator[country.code.toLowerCase()] = country.name;\n  return accumulator;\n}, {});\n\nfunction getCurrencyForCountryCode(locale) {\n  var currencyDisplay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'symbol';\n  var code = locale.split('-')[1];\n  var countryNameByCode = countriesByCountryCode[code];\n\n  if (countryNameByCode) {\n    var country = countriesByCountryCode[code] && countriesByCountryCode[code].toLowerCase();\n    var currency = (0, _find.default)(_countryCurrencyCodes.default, function (countryCode) {\n      return (countryCode.countries || []).indexOf(country) !== -1;\n    });\n\n    if (currency) {\n      return new Number(1).toLocaleString(locale, {\n        style: 'currency',\n        currency: currency.code,\n        currencyDisplay: currencyDisplay\n      }).replace(/[0-9\\.\\,]/g, '');\n    }\n\n    return '';\n  } else {\n    console.error(\"Cannot get currency based on country code. Country \".concat(code, \" not found.\"));\n    return '';\n  }\n}"]},"metadata":{},"sourceType":"script"}