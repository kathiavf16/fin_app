{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction getNewSingleValue(_ref) {\n  var id = _ref.id,\n      value = _ref.value,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? true : _ref$toggle;\n\n  if (value == null) {\n    return id;\n  }\n\n  if (toggle) {\n    return id === value ? null : id;\n  }\n\n  return id;\n}\n\nvar _default = getNewSingleValue;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewSingleValue.js"],"names":["Object","defineProperty","exports","value","default","getNewSingleValue","_ref","id","_ref$toggle","toggle","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;AAAA,MACIJ,KAAK,GAAGG,IAAI,CAACH,KADjB;AAAA,MAEIK,WAAW,GAAGF,IAAI,CAACG,MAFvB;AAAA,MAGIA,MAAM,GAAGD,WAAW,KAAK,KAAK,CAArB,GAAyB,IAAzB,GAAgCA,WAH7C;;AAKA,MAAIL,KAAK,IAAI,IAAb,EAAmB;AACjB,WAAOI,EAAP;AACD;;AAED,MAAIE,MAAJ,EAAY;AACV,WAAOF,EAAE,KAAKJ,KAAP,GAAe,IAAf,GAAsBI,EAA7B;AACD;;AAED,SAAOA,EAAP;AACD;;AAED,IAAIG,QAAQ,GAAGL,iBAAf;AACAH,OAAO,CAACE,OAAR,GAAkBM,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction getNewSingleValue(_ref) {\n  var id = _ref.id,\n      value = _ref.value,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? true : _ref$toggle;\n\n  if (value == null) {\n    return id;\n  }\n\n  if (toggle) {\n    return id === value ? null : id;\n  }\n\n  return id;\n}\n\nvar _default = getNewSingleValue;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}