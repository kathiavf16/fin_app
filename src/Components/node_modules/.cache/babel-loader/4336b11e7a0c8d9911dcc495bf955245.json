{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar DEFAULTS = {\n  duration: 100,\n  orientation: 'vertical'\n};\n\nvar _default = function _default(node, newValue, config, callback) {\n  if (typeof config === 'function') {\n    callback = config;\n    config = null;\n  }\n\n  if (!config) {\n    config = DEFAULTS;\n  }\n\n  var _config = config,\n      orientation = _config.orientation;\n  var _config2 = config,\n      duration = _config2.duration;\n  var horiz = orientation == 'horizontal';\n  var scrollPosName = horiz ? 'scrollLeft' : 'scrollTop';\n  var currentValue = node[scrollPosName];\n  var diff = newValue - currentValue;\n  var now = Date.now();\n  duration = duration != null ? duration : 100;\n  var millisecondStep = diff / duration;\n\n  if (!duration) {\n    node[scrollPosName] = newValue;\n\n    if (typeof callback === 'function') {\n      callback(newValue);\n    }\n\n    return;\n  }\n\n  var scroll = function scroll() {\n    var elapsed = Date.now() - now;\n    node[scrollPosName] = currentValue + elapsed * millisecondStep;\n\n    if (elapsed < duration) {\n      global.requestAnimationFrame(scroll);\n    } else {\n      node[scrollPosName] = newValue;\n\n      if (typeof callback === 'function') {\n        callback(newValue);\n      }\n    }\n  };\n\n  global.requestAnimationFrame(scroll);\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/smoothScrollTo/index.js"],"names":["Object","defineProperty","exports","value","default","DEFAULTS","duration","orientation","_default","node","newValue","config","callback","_config","_config2","horiz","scrollPosName","currentValue","diff","now","Date","millisecondStep","scroll","elapsed","global","requestAnimationFrame"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,GADG;AAEbC,EAAAA,WAAW,EAAE;AAFA,CAAf;;AAKA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,QAAxB,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoD;AACjE,MAAI,OAAOD,MAAP,KAAkB,UAAtB,EAAkC;AAChCC,IAAAA,QAAQ,GAAGD,MAAX;AACAA,IAAAA,MAAM,GAAG,IAAT;AACD;;AAED,MAAI,CAACA,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAGN,QAAT;AACD;;AAED,MAAIQ,OAAO,GAAGF,MAAd;AAAA,MACIJ,WAAW,GAAGM,OAAO,CAACN,WAD1B;AAEA,MAAIO,QAAQ,GAAGH,MAAf;AAAA,MACIL,QAAQ,GAAGQ,QAAQ,CAACR,QADxB;AAEA,MAAIS,KAAK,GAAGR,WAAW,IAAI,YAA3B;AACA,MAAIS,aAAa,GAAGD,KAAK,GAAG,YAAH,GAAkB,WAA3C;AACA,MAAIE,YAAY,GAAGR,IAAI,CAACO,aAAD,CAAvB;AACA,MAAIE,IAAI,GAAGR,QAAQ,GAAGO,YAAtB;AACA,MAAIE,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAV;AACAb,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,IAAZ,GAAmBA,QAAnB,GAA8B,GAAzC;AACA,MAAIe,eAAe,GAAGH,IAAI,GAAGZ,QAA7B;;AAEA,MAAI,CAACA,QAAL,EAAe;AACbG,IAAAA,IAAI,CAACO,aAAD,CAAJ,GAAsBN,QAAtB;;AAEA,QAAI,OAAOE,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,MAAAA,QAAQ,CAACF,QAAD,CAAR;AACD;;AAED;AACD;;AAED,MAAIY,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,QAAIC,OAAO,GAAGH,IAAI,CAACD,GAAL,KAAaA,GAA3B;AACAV,IAAAA,IAAI,CAACO,aAAD,CAAJ,GAAsBC,YAAY,GAAGM,OAAO,GAAGF,eAA/C;;AAEA,QAAIE,OAAO,GAAGjB,QAAd,EAAwB;AACtBkB,MAAAA,MAAM,CAACC,qBAAP,CAA6BH,MAA7B;AACD,KAFD,MAEO;AACLb,MAAAA,IAAI,CAACO,aAAD,CAAJ,GAAsBN,QAAtB;;AAEA,UAAI,OAAOE,QAAP,KAAoB,UAAxB,EAAoC;AAClCA,QAAAA,QAAQ,CAACF,QAAD,CAAR;AACD;AACF;AACF,GAbD;;AAeAc,EAAAA,MAAM,CAACC,qBAAP,CAA6BH,MAA7B;AACD,CAhDD;;AAkDApB,OAAO,CAACE,OAAR,GAAkBI,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar DEFAULTS = {\n  duration: 100,\n  orientation: 'vertical'\n};\n\nvar _default = function _default(node, newValue, config, callback) {\n  if (typeof config === 'function') {\n    callback = config;\n    config = null;\n  }\n\n  if (!config) {\n    config = DEFAULTS;\n  }\n\n  var _config = config,\n      orientation = _config.orientation;\n  var _config2 = config,\n      duration = _config2.duration;\n  var horiz = orientation == 'horizontal';\n  var scrollPosName = horiz ? 'scrollLeft' : 'scrollTop';\n  var currentValue = node[scrollPosName];\n  var diff = newValue - currentValue;\n  var now = Date.now();\n  duration = duration != null ? duration : 100;\n  var millisecondStep = diff / duration;\n\n  if (!duration) {\n    node[scrollPosName] = newValue;\n\n    if (typeof callback === 'function') {\n      callback(newValue);\n    }\n\n    return;\n  }\n\n  var scroll = function scroll() {\n    var elapsed = Date.now() - now;\n    node[scrollPosName] = currentValue + elapsed * millisecondStep;\n\n    if (elapsed < duration) {\n      global.requestAnimationFrame(scroll);\n    } else {\n      node[scrollPosName] = newValue;\n\n      if (typeof callback === 'function') {\n        callback(newValue);\n      }\n    }\n  };\n\n  global.requestAnimationFrame(scroll);\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}