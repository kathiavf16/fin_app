{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _2 = _interopRequireDefault(require(\".\"));\n\nvar _shallowequal = require(\"../packages/shallowequal\");\n\nvar _useBuildColumns = _interopRequireDefault(require(\"./useBuildColumns\"));\n\nvar _useMemoWithObject = _interopRequireDefault(require(\"../hooks/useMemoWithObject\"));\n\nvar includeAll = function includeAll() {\n  return true;\n};\n\nvar useGroupByColumns = function useGroupByColumns(args) {\n  var generatedColumnsLength = 0;\n  var columns = args.columns;\n  var groupBy = args.groupBy,\n      groupColumn = args.groupColumn,\n      filter = args.filter,\n      groupForGroupColumns = args.groupForGroupColumns,\n      checkboxColumn = args.checkboxColumn,\n      lockedColumnsState = args.lockedColumnsState,\n      groupNestingSize = args.groupNestingSize,\n      inTransition = args.inTransition;\n\n  if (groupBy && groupBy.length && !groupColumn) {\n    var lockedStartCount = 0;\n    var groupColumnCount = 0;\n    columns.filter(filter || includeAll).forEach(function (col) {\n      if (col.groupSpacerColumn) {\n        groupColumnCount++;\n      }\n\n      var locked = col.locked === undefined ? col.defaultLocked : col.locked;\n      var colInLocked = lockedColumnsState[col.id] || lockedColumnsState[col.name];\n\n      if (colInLocked !== undefined) {\n        locked = colInLocked;\n      }\n\n      if (locked === 'start' || locked === true) {\n        lockedStartCount++;\n      }\n    });\n\n    if (lockedStartCount && checkboxColumn) {\n      lockedStartCount++;\n    }\n\n    var generatedColumns = (0, _toConsumableArray2.default)(Array(groupBy.length - groupColumnCount)).map(function (_, i) {\n      return {\n        name: \"__col_generated-groupBy-\".concat(groupColumnCount + i),\n        header: null,\n        inTransition: inTransition,\n        visibilityTransitionDuration: !!inTransition,\n        groupSpacerColumn: true,\n        group: groupForGroupColumns,\n        locked: !!lockedStartCount,\n        defaultWidth: groupNestingSize,\n        width: groupNestingSize,\n        minWidth: groupNestingSize,\n        maxWidth: groupNestingSize,\n        showInContextMenu: false,\n        cellSelectable: false,\n        draggable: false,\n        resizable: false,\n        sortable: false\n      };\n    });\n    generatedColumnsLength = generatedColumns.length;\n    columns = generatedColumnsLength ? [].concat((0, _toConsumableArray2.default)(generatedColumns), (0, _toConsumableArray2.default)(columns)) : columns;\n  }\n\n  return {\n    columns: columns,\n    generatedColumnsLength: generatedColumnsLength\n  };\n};\n\nvar useColumnInfo = function useColumnInfo(params) {\n  return (0, _useMemoWithObject.default)(function () {\n    var columns = params.columns,\n        columnMinWidth = params.columnMinWidth,\n        columnMaxWidth = params.columnMaxWidth,\n        columnDefaultWidth = params.columnDefaultWidth,\n        columnWidth = params.columnWidth,\n        groupNestingSize = params.groupNestingSize,\n        columnOrder = params.columnOrder,\n        onRowReorder = params.onRowReorder,\n        columnVisibilityMap = params.columnVisibilityMap,\n        columnSizes = params.columnSizes,\n        columnFlexes = params.columnFlexes,\n        _params$lockedColumns = params.lockedColumnsState,\n        lockedColumnsState = _params$lockedColumns === void 0 ? {} : _params$lockedColumns,\n        groupBy = params.groupBy,\n        maybeAddColumns = params.maybeAddColumns,\n        editable = params.editable,\n        computedPivotUniqueValuesPerColumn = params.computedPivotUniqueValuesPerColumn,\n        checkboxColumn = params.checkboxColumn,\n        rowIndexColumn = params.rowIndexColumn,\n        groupColumn = params.groupColumn,\n        pivot = params.pivot,\n        groupForGroupColumns = params.groupForGroupColumns,\n        inTransition = params.inTransition,\n        rtl = params.rtl,\n        hideGroupByColumns = params.hideGroupByColumns,\n        availableWidth = params.availableWidth,\n        sortInfo = params.sortInfo,\n        filterValueMap = params.filterValueMap,\n        sortable = params.sortable,\n        filterable = params.filterable,\n        resizable = params.resizable,\n        pivotGrandSummaryColumn = params.pivotGrandSummaryColumn,\n        lockable = params.lockable,\n        groups = params.groups,\n        enableRowExpand = params.enableRowExpand,\n        showPivotSummaryColumns = params.showPivotSummaryColumns,\n        expandedRows = params.expandedRows,\n        defaultExpandedRows = params.defaultExpandedRows,\n        renderRowDetails = params.renderRowDetails,\n        renderDetailsGrid = params.renderDetailsGrid,\n        rowExpandColumn = params.rowExpandColumn,\n        rowReorderColumn = params.rowReorderColumn;\n\n    if (pivot) {\n      groupColumn = groupColumn || true;\n    }\n\n    columns = (0, _useBuildColumns.default)(columns, {\n      groups: groups,\n      checkboxColumn: checkboxColumn,\n      groupBy: groupBy,\n      groupColumn: groupColumn,\n      rowIndexColumn: rowIndexColumn,\n      enableRowExpand: enableRowExpand,\n      expandedRows: expandedRows,\n      maybeAddColumns: maybeAddColumns,\n      defaultExpandedRows: defaultExpandedRows,\n      renderRowDetails: renderRowDetails,\n      renderDetailsGrid: renderDetailsGrid,\n      rowExpandColumn: rowExpandColumn,\n      onRowReorder: onRowReorder,\n      rowReorderColumn: rowReorderColumn\n    });\n    var filter = !hideGroupByColumns || !groupBy || !groupBy.length ? null : function (col) {\n      return groupBy.indexOf(col.id || col.name) == -1;\n    };\n    var generatedColumnsLength;\n    var res = useGroupByColumns({\n      groupBy: groupBy,\n      groupColumn: groupColumn,\n      columns: columns,\n      filter: filter,\n      groupForGroupColumns: groupForGroupColumns,\n      checkboxColumn: checkboxColumn,\n      lockedColumnsState: lockedColumnsState,\n      groupNestingSize: groupNestingSize,\n      inTransition: inTransition\n    });\n    columns = res.columns;\n    generatedColumnsLength = res.generatedColumnsLength;\n    return (0, _2.default)({\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn,\n      generatedColumnsLength: generatedColumnsLength,\n      columns: columns,\n      columnMinWidth: columnMinWidth,\n      columnMaxWidth: columnMaxWidth,\n      columnDefaultWidth: columnDefaultWidth,\n      columnWidth: columnWidth,\n      columnSizes: columnSizes,\n      columnFlexes: columnFlexes,\n      columnOrder: columnOrder,\n      showPivotSummaryColumns: showPivotSummaryColumns,\n      computedPivotUniqueValuesPerColumn: computedPivotUniqueValuesPerColumn,\n      rtl: rtl,\n      filterValueMap: filterValueMap,\n      pivot: pivot,\n      checkboxColumn: checkboxColumn,\n      rowIndexColumn: rowIndexColumn,\n      columnVisibilityMap: columnVisibilityMap,\n      lockedColumnsState: lockedColumnsState,\n      sortable: sortable,\n      filterable: filterable,\n      resizable: resizable,\n      lockable: lockable,\n      filter: filter,\n      sortInfo: sortInfo,\n      editable: editable,\n      availableWidth: availableWidth\n    });\n  }, params, function (a, b) {\n    var _equalReturnKey = (0, _shallowequal.equalReturnKey)(a, b),\n        result = _equalReturnKey.result,\n        key = _equalReturnKey.key;\n\n    return result;\n  });\n};\n\nvar _default = useColumnInfo;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/normalizeColumns/useColumnInfo.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_2","_shallowequal","_useBuildColumns","_useMemoWithObject","includeAll","useGroupByColumns","args","generatedColumnsLength","columns","groupBy","groupColumn","filter","groupForGroupColumns","checkboxColumn","lockedColumnsState","groupNestingSize","inTransition","length","lockedStartCount","groupColumnCount","forEach","col","groupSpacerColumn","locked","undefined","defaultLocked","colInLocked","id","name","generatedColumns","Array","map","_","i","concat","header","visibilityTransitionDuration","group","defaultWidth","width","minWidth","maxWidth","showInContextMenu","cellSelectable","draggable","resizable","sortable","useColumnInfo","params","columnMinWidth","columnMaxWidth","columnDefaultWidth","columnWidth","columnOrder","onRowReorder","columnVisibilityMap","columnSizes","columnFlexes","_params$lockedColumns","maybeAddColumns","editable","computedPivotUniqueValuesPerColumn","rowIndexColumn","pivot","rtl","hideGroupByColumns","availableWidth","sortInfo","filterValueMap","filterable","pivotGrandSummaryColumn","lockable","groups","enableRowExpand","showPivotSummaryColumns","expandedRows","defaultExpandedRows","renderRowDetails","renderDetailsGrid","rowExpandColumn","rowReorderColumn","indexOf","res","a","b","_equalReturnKey","equalReturnKey","result","key","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIO,EAAE,GAAGR,sBAAsB,CAACC,OAAO,CAAC,GAAD,CAAR,CAA/B;;AAEA,IAAIQ,aAAa,GAAGR,OAAO,CAAC,0BAAD,CAA3B;;AAEA,IAAIS,gBAAgB,GAAGV,sBAAsB,CAACC,OAAO,CAAC,mBAAD,CAAR,CAA7C;;AAEA,IAAIU,kBAAkB,GAAGX,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAA/C;;AAEA,IAAIW,UAAU,GAAG,SAASA,UAAT,GAAsB;AACrC,SAAO,IAAP;AACD,CAFD;;AAIA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,IAA3B,EAAiC;AACvD,MAAIC,sBAAsB,GAAG,CAA7B;AACA,MAAIC,OAAO,GAAGF,IAAI,CAACE,OAAnB;AACA,MAAIC,OAAO,GAAGH,IAAI,CAACG,OAAnB;AAAA,MACIC,WAAW,GAAGJ,IAAI,CAACI,WADvB;AAAA,MAEIC,MAAM,GAAGL,IAAI,CAACK,MAFlB;AAAA,MAGIC,oBAAoB,GAAGN,IAAI,CAACM,oBAHhC;AAAA,MAIIC,cAAc,GAAGP,IAAI,CAACO,cAJ1B;AAAA,MAKIC,kBAAkB,GAAGR,IAAI,CAACQ,kBAL9B;AAAA,MAMIC,gBAAgB,GAAGT,IAAI,CAACS,gBAN5B;AAAA,MAOIC,YAAY,GAAGV,IAAI,CAACU,YAPxB;;AASA,MAAIP,OAAO,IAAIA,OAAO,CAACQ,MAAnB,IAA6B,CAACP,WAAlC,EAA+C;AAC7C,QAAIQ,gBAAgB,GAAG,CAAvB;AACA,QAAIC,gBAAgB,GAAG,CAAvB;AACAX,IAAAA,OAAO,CAACG,MAAR,CAAeA,MAAM,IAAIP,UAAzB,EAAqCgB,OAArC,CAA6C,UAAUC,GAAV,EAAe;AAC1D,UAAIA,GAAG,CAACC,iBAAR,EAA2B;AACzBH,QAAAA,gBAAgB;AACjB;;AAED,UAAII,MAAM,GAAGF,GAAG,CAACE,MAAJ,KAAeC,SAAf,GAA2BH,GAAG,CAACI,aAA/B,GAA+CJ,GAAG,CAACE,MAAhE;AACA,UAAIG,WAAW,GAAGZ,kBAAkB,CAACO,GAAG,CAACM,EAAL,CAAlB,IAA8Bb,kBAAkB,CAACO,GAAG,CAACO,IAAL,CAAlE;;AAEA,UAAIF,WAAW,KAAKF,SAApB,EAA+B;AAC7BD,QAAAA,MAAM,GAAGG,WAAT;AACD;;AAED,UAAIH,MAAM,KAAK,OAAX,IAAsBA,MAAM,KAAK,IAArC,EAA2C;AACzCL,QAAAA,gBAAgB;AACjB;AACF,KAfD;;AAiBA,QAAIA,gBAAgB,IAAIL,cAAxB,EAAwC;AACtCK,MAAAA,gBAAgB;AACjB;;AAED,QAAIW,gBAAgB,GAAG,CAAC,GAAG9B,mBAAmB,CAACD,OAAxB,EAAiCgC,KAAK,CAACrB,OAAO,CAACQ,MAAR,GAAiBE,gBAAlB,CAAtC,EAA2EY,GAA3E,CAA+E,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACpH,aAAO;AACLL,QAAAA,IAAI,EAAE,2BAA2BM,MAA3B,CAAkCf,gBAAgB,GAAGc,CAArD,CADD;AAELE,QAAAA,MAAM,EAAE,IAFH;AAGLnB,QAAAA,YAAY,EAAEA,YAHT;AAILoB,QAAAA,4BAA4B,EAAE,CAAC,CAACpB,YAJ3B;AAKLM,QAAAA,iBAAiB,EAAE,IALd;AAMLe,QAAAA,KAAK,EAAEzB,oBANF;AAOLW,QAAAA,MAAM,EAAE,CAAC,CAACL,gBAPL;AAQLoB,QAAAA,YAAY,EAAEvB,gBART;AASLwB,QAAAA,KAAK,EAAExB,gBATF;AAULyB,QAAAA,QAAQ,EAAEzB,gBAVL;AAWL0B,QAAAA,QAAQ,EAAE1B,gBAXL;AAYL2B,QAAAA,iBAAiB,EAAE,KAZd;AAaLC,QAAAA,cAAc,EAAE,KAbX;AAcLC,QAAAA,SAAS,EAAE,KAdN;AAeLC,QAAAA,SAAS,EAAE,KAfN;AAgBLC,QAAAA,QAAQ,EAAE;AAhBL,OAAP;AAkBD,KAnBsB,CAAvB;AAoBAvC,IAAAA,sBAAsB,GAAGsB,gBAAgB,CAACZ,MAA1C;AACAT,IAAAA,OAAO,GAAGD,sBAAsB,GAAG,GAAG2B,MAAH,CAAU,CAAC,GAAGnC,mBAAmB,CAACD,OAAxB,EAAiC+B,gBAAjC,CAAV,EAA8D,CAAC,GAAG9B,mBAAmB,CAACD,OAAxB,EAAiCU,OAAjC,CAA9D,CAAH,GAA8GA,OAA9I;AACD;;AAED,SAAO;AACLA,IAAAA,OAAO,EAAEA,OADJ;AAELD,IAAAA,sBAAsB,EAAEA;AAFnB,GAAP;AAID,CAhED;;AAkEA,IAAIwC,aAAa,GAAG,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AACjD,SAAO,CAAC,GAAG7C,kBAAkB,CAACL,OAAvB,EAAgC,YAAY;AACjD,QAAIU,OAAO,GAAGwC,MAAM,CAACxC,OAArB;AAAA,QACIyC,cAAc,GAAGD,MAAM,CAACC,cAD5B;AAAA,QAEIC,cAAc,GAAGF,MAAM,CAACE,cAF5B;AAAA,QAGIC,kBAAkB,GAAGH,MAAM,CAACG,kBAHhC;AAAA,QAIIC,WAAW,GAAGJ,MAAM,CAACI,WAJzB;AAAA,QAKIrC,gBAAgB,GAAGiC,MAAM,CAACjC,gBAL9B;AAAA,QAMIsC,WAAW,GAAGL,MAAM,CAACK,WANzB;AAAA,QAOIC,YAAY,GAAGN,MAAM,CAACM,YAP1B;AAAA,QAQIC,mBAAmB,GAAGP,MAAM,CAACO,mBARjC;AAAA,QASIC,WAAW,GAAGR,MAAM,CAACQ,WATzB;AAAA,QAUIC,YAAY,GAAGT,MAAM,CAACS,YAV1B;AAAA,QAWIC,qBAAqB,GAAGV,MAAM,CAAClC,kBAXnC;AAAA,QAYIA,kBAAkB,GAAG4C,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,EAAnC,GAAwCA,qBAZjE;AAAA,QAaIjD,OAAO,GAAGuC,MAAM,CAACvC,OAbrB;AAAA,QAcIkD,eAAe,GAAGX,MAAM,CAACW,eAd7B;AAAA,QAeIC,QAAQ,GAAGZ,MAAM,CAACY,QAftB;AAAA,QAgBIC,kCAAkC,GAAGb,MAAM,CAACa,kCAhBhD;AAAA,QAiBIhD,cAAc,GAAGmC,MAAM,CAACnC,cAjB5B;AAAA,QAkBIiD,cAAc,GAAGd,MAAM,CAACc,cAlB5B;AAAA,QAmBIpD,WAAW,GAAGsC,MAAM,CAACtC,WAnBzB;AAAA,QAoBIqD,KAAK,GAAGf,MAAM,CAACe,KApBnB;AAAA,QAqBInD,oBAAoB,GAAGoC,MAAM,CAACpC,oBArBlC;AAAA,QAsBII,YAAY,GAAGgC,MAAM,CAAChC,YAtB1B;AAAA,QAuBIgD,GAAG,GAAGhB,MAAM,CAACgB,GAvBjB;AAAA,QAwBIC,kBAAkB,GAAGjB,MAAM,CAACiB,kBAxBhC;AAAA,QAyBIC,cAAc,GAAGlB,MAAM,CAACkB,cAzB5B;AAAA,QA0BIC,QAAQ,GAAGnB,MAAM,CAACmB,QA1BtB;AAAA,QA2BIC,cAAc,GAAGpB,MAAM,CAACoB,cA3B5B;AAAA,QA4BItB,QAAQ,GAAGE,MAAM,CAACF,QA5BtB;AAAA,QA6BIuB,UAAU,GAAGrB,MAAM,CAACqB,UA7BxB;AAAA,QA8BIxB,SAAS,GAAGG,MAAM,CAACH,SA9BvB;AAAA,QA+BIyB,uBAAuB,GAAGtB,MAAM,CAACsB,uBA/BrC;AAAA,QAgCIC,QAAQ,GAAGvB,MAAM,CAACuB,QAhCtB;AAAA,QAiCIC,MAAM,GAAGxB,MAAM,CAACwB,MAjCpB;AAAA,QAkCIC,eAAe,GAAGzB,MAAM,CAACyB,eAlC7B;AAAA,QAmCIC,uBAAuB,GAAG1B,MAAM,CAAC0B,uBAnCrC;AAAA,QAoCIC,YAAY,GAAG3B,MAAM,CAAC2B,YApC1B;AAAA,QAqCIC,mBAAmB,GAAG5B,MAAM,CAAC4B,mBArCjC;AAAA,QAsCIC,gBAAgB,GAAG7B,MAAM,CAAC6B,gBAtC9B;AAAA,QAuCIC,iBAAiB,GAAG9B,MAAM,CAAC8B,iBAvC/B;AAAA,QAwCIC,eAAe,GAAG/B,MAAM,CAAC+B,eAxC7B;AAAA,QAyCIC,gBAAgB,GAAGhC,MAAM,CAACgC,gBAzC9B;;AA2CA,QAAIjB,KAAJ,EAAW;AACTrD,MAAAA,WAAW,GAAGA,WAAW,IAAI,IAA7B;AACD;;AAEDF,IAAAA,OAAO,GAAG,CAAC,GAAGN,gBAAgB,CAACJ,OAArB,EAA8BU,OAA9B,EAAuC;AAC/CgE,MAAAA,MAAM,EAAEA,MADuC;AAE/C3D,MAAAA,cAAc,EAAEA,cAF+B;AAG/CJ,MAAAA,OAAO,EAAEA,OAHsC;AAI/CC,MAAAA,WAAW,EAAEA,WAJkC;AAK/CoD,MAAAA,cAAc,EAAEA,cAL+B;AAM/CW,MAAAA,eAAe,EAAEA,eAN8B;AAO/CE,MAAAA,YAAY,EAAEA,YAPiC;AAQ/ChB,MAAAA,eAAe,EAAEA,eAR8B;AAS/CiB,MAAAA,mBAAmB,EAAEA,mBAT0B;AAU/CC,MAAAA,gBAAgB,EAAEA,gBAV6B;AAW/CC,MAAAA,iBAAiB,EAAEA,iBAX4B;AAY/CC,MAAAA,eAAe,EAAEA,eAZ8B;AAa/CzB,MAAAA,YAAY,EAAEA,YAbiC;AAc/C0B,MAAAA,gBAAgB,EAAEA;AAd6B,KAAvC,CAAV;AAgBA,QAAIrE,MAAM,GAAG,CAACsD,kBAAD,IAAuB,CAACxD,OAAxB,IAAmC,CAACA,OAAO,CAACQ,MAA5C,GAAqD,IAArD,GAA4D,UAAUI,GAAV,EAAe;AACtF,aAAOZ,OAAO,CAACwE,OAAR,CAAgB5D,GAAG,CAACM,EAAJ,IAAUN,GAAG,CAACO,IAA9B,KAAuC,CAAC,CAA/C;AACD,KAFD;AAGA,QAAIrB,sBAAJ;AACA,QAAI2E,GAAG,GAAG7E,iBAAiB,CAAC;AAC1BI,MAAAA,OAAO,EAAEA,OADiB;AAE1BC,MAAAA,WAAW,EAAEA,WAFa;AAG1BF,MAAAA,OAAO,EAAEA,OAHiB;AAI1BG,MAAAA,MAAM,EAAEA,MAJkB;AAK1BC,MAAAA,oBAAoB,EAAEA,oBALI;AAM1BC,MAAAA,cAAc,EAAEA,cANU;AAO1BC,MAAAA,kBAAkB,EAAEA,kBAPM;AAQ1BC,MAAAA,gBAAgB,EAAEA,gBARQ;AAS1BC,MAAAA,YAAY,EAAEA;AATY,KAAD,CAA3B;AAWAR,IAAAA,OAAO,GAAG0E,GAAG,CAAC1E,OAAd;AACAD,IAAAA,sBAAsB,GAAG2E,GAAG,CAAC3E,sBAA7B;AACA,WAAO,CAAC,GAAGP,EAAE,CAACF,OAAP,EAAgB;AACrBwE,MAAAA,uBAAuB,EAAEA,uBADJ;AAErB/D,MAAAA,sBAAsB,EAAEA,sBAFH;AAGrBC,MAAAA,OAAO,EAAEA,OAHY;AAIrByC,MAAAA,cAAc,EAAEA,cAJK;AAKrBC,MAAAA,cAAc,EAAEA,cALK;AAMrBC,MAAAA,kBAAkB,EAAEA,kBANC;AAOrBC,MAAAA,WAAW,EAAEA,WAPQ;AAQrBI,MAAAA,WAAW,EAAEA,WARQ;AASrBC,MAAAA,YAAY,EAAEA,YATO;AAUrBJ,MAAAA,WAAW,EAAEA,WAVQ;AAWrBqB,MAAAA,uBAAuB,EAAEA,uBAXJ;AAYrBb,MAAAA,kCAAkC,EAAEA,kCAZf;AAarBG,MAAAA,GAAG,EAAEA,GAbgB;AAcrBI,MAAAA,cAAc,EAAEA,cAdK;AAerBL,MAAAA,KAAK,EAAEA,KAfc;AAgBrBlD,MAAAA,cAAc,EAAEA,cAhBK;AAiBrBiD,MAAAA,cAAc,EAAEA,cAjBK;AAkBrBP,MAAAA,mBAAmB,EAAEA,mBAlBA;AAmBrBzC,MAAAA,kBAAkB,EAAEA,kBAnBC;AAoBrBgC,MAAAA,QAAQ,EAAEA,QApBW;AAqBrBuB,MAAAA,UAAU,EAAEA,UArBS;AAsBrBxB,MAAAA,SAAS,EAAEA,SAtBU;AAuBrB0B,MAAAA,QAAQ,EAAEA,QAvBW;AAwBrB5D,MAAAA,MAAM,EAAEA,MAxBa;AAyBrBwD,MAAAA,QAAQ,EAAEA,QAzBW;AA0BrBP,MAAAA,QAAQ,EAAEA,QA1BW;AA2BrBM,MAAAA,cAAc,EAAEA;AA3BK,KAAhB,CAAP;AA6BD,GA9GM,EA8GJlB,MA9GI,EA8GI,UAAUmC,CAAV,EAAaC,CAAb,EAAgB;AACzB,QAAIC,eAAe,GAAG,CAAC,GAAGpF,aAAa,CAACqF,cAAlB,EAAkCH,CAAlC,EAAqCC,CAArC,CAAtB;AAAA,QACIG,MAAM,GAAGF,eAAe,CAACE,MAD7B;AAAA,QAEIC,GAAG,GAAGH,eAAe,CAACG,GAF1B;;AAIA,WAAOD,MAAP;AACD,GApHM,CAAP;AAqHD,CAtHD;;AAwHA,IAAIE,QAAQ,GAAG1C,aAAf;AACAnD,OAAO,CAACE,OAAR,GAAkB2F,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _2 = _interopRequireDefault(require(\".\"));\n\nvar _shallowequal = require(\"../packages/shallowequal\");\n\nvar _useBuildColumns = _interopRequireDefault(require(\"./useBuildColumns\"));\n\nvar _useMemoWithObject = _interopRequireDefault(require(\"../hooks/useMemoWithObject\"));\n\nvar includeAll = function includeAll() {\n  return true;\n};\n\nvar useGroupByColumns = function useGroupByColumns(args) {\n  var generatedColumnsLength = 0;\n  var columns = args.columns;\n  var groupBy = args.groupBy,\n      groupColumn = args.groupColumn,\n      filter = args.filter,\n      groupForGroupColumns = args.groupForGroupColumns,\n      checkboxColumn = args.checkboxColumn,\n      lockedColumnsState = args.lockedColumnsState,\n      groupNestingSize = args.groupNestingSize,\n      inTransition = args.inTransition;\n\n  if (groupBy && groupBy.length && !groupColumn) {\n    var lockedStartCount = 0;\n    var groupColumnCount = 0;\n    columns.filter(filter || includeAll).forEach(function (col) {\n      if (col.groupSpacerColumn) {\n        groupColumnCount++;\n      }\n\n      var locked = col.locked === undefined ? col.defaultLocked : col.locked;\n      var colInLocked = lockedColumnsState[col.id] || lockedColumnsState[col.name];\n\n      if (colInLocked !== undefined) {\n        locked = colInLocked;\n      }\n\n      if (locked === 'start' || locked === true) {\n        lockedStartCount++;\n      }\n    });\n\n    if (lockedStartCount && checkboxColumn) {\n      lockedStartCount++;\n    }\n\n    var generatedColumns = (0, _toConsumableArray2.default)(Array(groupBy.length - groupColumnCount)).map(function (_, i) {\n      return {\n        name: \"__col_generated-groupBy-\".concat(groupColumnCount + i),\n        header: null,\n        inTransition: inTransition,\n        visibilityTransitionDuration: !!inTransition,\n        groupSpacerColumn: true,\n        group: groupForGroupColumns,\n        locked: !!lockedStartCount,\n        defaultWidth: groupNestingSize,\n        width: groupNestingSize,\n        minWidth: groupNestingSize,\n        maxWidth: groupNestingSize,\n        showInContextMenu: false,\n        cellSelectable: false,\n        draggable: false,\n        resizable: false,\n        sortable: false\n      };\n    });\n    generatedColumnsLength = generatedColumns.length;\n    columns = generatedColumnsLength ? [].concat((0, _toConsumableArray2.default)(generatedColumns), (0, _toConsumableArray2.default)(columns)) : columns;\n  }\n\n  return {\n    columns: columns,\n    generatedColumnsLength: generatedColumnsLength\n  };\n};\n\nvar useColumnInfo = function useColumnInfo(params) {\n  return (0, _useMemoWithObject.default)(function () {\n    var columns = params.columns,\n        columnMinWidth = params.columnMinWidth,\n        columnMaxWidth = params.columnMaxWidth,\n        columnDefaultWidth = params.columnDefaultWidth,\n        columnWidth = params.columnWidth,\n        groupNestingSize = params.groupNestingSize,\n        columnOrder = params.columnOrder,\n        onRowReorder = params.onRowReorder,\n        columnVisibilityMap = params.columnVisibilityMap,\n        columnSizes = params.columnSizes,\n        columnFlexes = params.columnFlexes,\n        _params$lockedColumns = params.lockedColumnsState,\n        lockedColumnsState = _params$lockedColumns === void 0 ? {} : _params$lockedColumns,\n        groupBy = params.groupBy,\n        maybeAddColumns = params.maybeAddColumns,\n        editable = params.editable,\n        computedPivotUniqueValuesPerColumn = params.computedPivotUniqueValuesPerColumn,\n        checkboxColumn = params.checkboxColumn,\n        rowIndexColumn = params.rowIndexColumn,\n        groupColumn = params.groupColumn,\n        pivot = params.pivot,\n        groupForGroupColumns = params.groupForGroupColumns,\n        inTransition = params.inTransition,\n        rtl = params.rtl,\n        hideGroupByColumns = params.hideGroupByColumns,\n        availableWidth = params.availableWidth,\n        sortInfo = params.sortInfo,\n        filterValueMap = params.filterValueMap,\n        sortable = params.sortable,\n        filterable = params.filterable,\n        resizable = params.resizable,\n        pivotGrandSummaryColumn = params.pivotGrandSummaryColumn,\n        lockable = params.lockable,\n        groups = params.groups,\n        enableRowExpand = params.enableRowExpand,\n        showPivotSummaryColumns = params.showPivotSummaryColumns,\n        expandedRows = params.expandedRows,\n        defaultExpandedRows = params.defaultExpandedRows,\n        renderRowDetails = params.renderRowDetails,\n        renderDetailsGrid = params.renderDetailsGrid,\n        rowExpandColumn = params.rowExpandColumn,\n        rowReorderColumn = params.rowReorderColumn;\n\n    if (pivot) {\n      groupColumn = groupColumn || true;\n    }\n\n    columns = (0, _useBuildColumns.default)(columns, {\n      groups: groups,\n      checkboxColumn: checkboxColumn,\n      groupBy: groupBy,\n      groupColumn: groupColumn,\n      rowIndexColumn: rowIndexColumn,\n      enableRowExpand: enableRowExpand,\n      expandedRows: expandedRows,\n      maybeAddColumns: maybeAddColumns,\n      defaultExpandedRows: defaultExpandedRows,\n      renderRowDetails: renderRowDetails,\n      renderDetailsGrid: renderDetailsGrid,\n      rowExpandColumn: rowExpandColumn,\n      onRowReorder: onRowReorder,\n      rowReorderColumn: rowReorderColumn\n    });\n    var filter = !hideGroupByColumns || !groupBy || !groupBy.length ? null : function (col) {\n      return groupBy.indexOf(col.id || col.name) == -1;\n    };\n    var generatedColumnsLength;\n    var res = useGroupByColumns({\n      groupBy: groupBy,\n      groupColumn: groupColumn,\n      columns: columns,\n      filter: filter,\n      groupForGroupColumns: groupForGroupColumns,\n      checkboxColumn: checkboxColumn,\n      lockedColumnsState: lockedColumnsState,\n      groupNestingSize: groupNestingSize,\n      inTransition: inTransition\n    });\n    columns = res.columns;\n    generatedColumnsLength = res.generatedColumnsLength;\n    return (0, _2.default)({\n      pivotGrandSummaryColumn: pivotGrandSummaryColumn,\n      generatedColumnsLength: generatedColumnsLength,\n      columns: columns,\n      columnMinWidth: columnMinWidth,\n      columnMaxWidth: columnMaxWidth,\n      columnDefaultWidth: columnDefaultWidth,\n      columnWidth: columnWidth,\n      columnSizes: columnSizes,\n      columnFlexes: columnFlexes,\n      columnOrder: columnOrder,\n      showPivotSummaryColumns: showPivotSummaryColumns,\n      computedPivotUniqueValuesPerColumn: computedPivotUniqueValuesPerColumn,\n      rtl: rtl,\n      filterValueMap: filterValueMap,\n      pivot: pivot,\n      checkboxColumn: checkboxColumn,\n      rowIndexColumn: rowIndexColumn,\n      columnVisibilityMap: columnVisibilityMap,\n      lockedColumnsState: lockedColumnsState,\n      sortable: sortable,\n      filterable: filterable,\n      resizable: resizable,\n      lockable: lockable,\n      filter: filter,\n      sortInfo: sortInfo,\n      editable: editable,\n      availableWidth: availableWidth\n    });\n  }, params, function (a, b) {\n    var _equalReturnKey = (0, _shallowequal.equalReturnKey)(a, b),\n        result = _equalReturnKey.result,\n        key = _equalReturnKey.key;\n\n    return result;\n  });\n};\n\nvar _default = useColumnInfo;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}