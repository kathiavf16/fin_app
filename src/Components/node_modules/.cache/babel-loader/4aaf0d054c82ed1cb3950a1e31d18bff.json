{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar diff = function diff(a1, a2) {\n  if (a1.length != a2.length) {\n    return true;\n  }\n\n  for (var i = 0; i < a1.length; i++) {\n    if (!Object.is(a1[i], a2[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar resolved = Promise.resolve(true);\n\nvar useLoadDataEffect = function useLoadDataEffect(_ref, fn, _ref2) {\n  var getDataSource = _ref.getDataSource;\n  var reloadDeps = _ref2.reloadDeps,\n      noReloadDeps = _ref2.noReloadDeps;\n  var prevComputedDepsRef = (0, _react.useRef)([]);\n  var reloadRef = (0, _react.useRef)();\n  var noReloadRef = (0, _react.useRef)();\n  var reloadDepsDifferent = !reloadRef.current || diff(reloadRef.current, reloadDeps);\n  var noReloadDepsDifferent = !noReloadRef.current || diff(noReloadRef.current, noReloadDeps);\n  var depsDifferent = reloadDepsDifferent || noReloadDepsDifferent;\n  var shouldReload = reloadDepsDifferent;\n  var computedDeps = depsDifferent ? [{}] : prevComputedDepsRef.current;\n  var resolveRef = (0, _react.useRef)(null);\n  var promiseRef = (0, _react.useRef)(resolved);\n\n  if (depsDifferent) {\n    promiseRef.current = new Promise(function (resolve) {\n      resolveRef.current = resolve;\n    });\n  }\n\n  (0, _react.useLayoutEffect)(function () {\n    var dataSource = getDataSource({\n      shouldReload: shouldReload\n    });\n    fn(dataSource, {\n      shouldReload: shouldReload\n    }).then(function () {\n      if (resolveRef.current) {\n        resolveRef.current();\n      }\n    });\n  }, computedDeps);\n  reloadRef.current = reloadDeps;\n  noReloadRef.current = noReloadDeps;\n  prevComputedDepsRef.current = computedDeps;\n  return promiseRef.current;\n};\n\nvar _default = useLoadDataEffect;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/hooks/useLoadDataEffect/index.js"],"names":["Object","defineProperty","exports","value","default","_react","require","diff","a1","a2","length","i","is","resolved","Promise","resolve","useLoadDataEffect","_ref","fn","_ref2","getDataSource","reloadDeps","noReloadDeps","prevComputedDepsRef","useRef","reloadRef","noReloadRef","reloadDepsDifferent","current","noReloadDepsDifferent","depsDifferent","shouldReload","computedDeps","resolveRef","promiseRef","useLayoutEffect","dataSource","then","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar diff = function diff(a1, a2) {\n  if (a1.length != a2.length) {\n    return true;\n  }\n\n  for (var i = 0; i < a1.length; i++) {\n    if (!Object.is(a1[i], a2[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar resolved = Promise.resolve(true);\n\nvar useLoadDataEffect = function useLoadDataEffect(_ref, fn, _ref2) {\n  var getDataSource = _ref.getDataSource;\n  var reloadDeps = _ref2.reloadDeps,\n      noReloadDeps = _ref2.noReloadDeps;\n  var prevComputedDepsRef = (0, _react.useRef)([]);\n  var reloadRef = (0, _react.useRef)();\n  var noReloadRef = (0, _react.useRef)();\n  var reloadDepsDifferent = !reloadRef.current || diff(reloadRef.current, reloadDeps);\n  var noReloadDepsDifferent = !noReloadRef.current || diff(noReloadRef.current, noReloadDeps);\n  var depsDifferent = reloadDepsDifferent || noReloadDepsDifferent;\n  var shouldReload = reloadDepsDifferent;\n  var computedDeps = depsDifferent ? [{}] : prevComputedDepsRef.current;\n  var resolveRef = (0, _react.useRef)(null);\n  var promiseRef = (0, _react.useRef)(resolved);\n\n  if (depsDifferent) {\n    promiseRef.current = new Promise(function (resolve) {\n      resolveRef.current = resolve;\n    });\n  }\n\n  (0, _react.useLayoutEffect)(function () {\n    var dataSource = getDataSource({\n      shouldReload: shouldReload\n    });\n    fn(dataSource, {\n      shouldReload: shouldReload\n    }).then(function () {\n      if (resolveRef.current) {\n        resolveRef.current();\n      }\n    });\n  }, computedDeps);\n  reloadRef.current = reloadDeps;\n  noReloadRef.current = noReloadDeps;\n  prevComputedDepsRef.current = computedDeps;\n  return promiseRef.current;\n};\n\nvar _default = useLoadDataEffect;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}