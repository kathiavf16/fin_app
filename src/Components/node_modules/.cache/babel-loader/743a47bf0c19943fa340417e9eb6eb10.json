{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nfunction getNewMultipleValue(_ref) {\n  var id = _ref.id,\n      value = _ref.value;\n  var newValue;\n  var isArray = Array.isArray(value);\n  var hasValue = isArray && value.indexOf(id) !== -1;\n\n  if (hasValue) {\n    newValue = value.filter(function (itemId) {\n      return itemId !== id;\n    });\n    newValue = newValue.length ? newValue : null;\n  } else {\n    newValue = isArray ? [].concat((0, _toConsumableArray2.default)(value), [id]) : [id];\n  }\n\n  return newValue;\n}\n\nvar _default = getNewMultipleValue;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/ComboBox/src/utils/getNewMultipleValue.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","getNewMultipleValue","_ref","id","newValue","isArray","Array","hasValue","indexOf","filter","itemId","length","concat","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,SAASO,mBAAT,CAA6BC,IAA7B,EAAmC;AACjC,MAAIC,EAAE,GAAGD,IAAI,CAACC,EAAd;AAAA,MACIL,KAAK,GAAGI,IAAI,CAACJ,KADjB;AAEA,MAAIM,QAAJ;AACA,MAAIC,OAAO,GAAGC,KAAK,CAACD,OAAN,CAAcP,KAAd,CAAd;AACA,MAAIS,QAAQ,GAAGF,OAAO,IAAIP,KAAK,CAACU,OAAN,CAAcL,EAAd,MAAsB,CAAC,CAAjD;;AAEA,MAAII,QAAJ,EAAc;AACZH,IAAAA,QAAQ,GAAGN,KAAK,CAACW,MAAN,CAAa,UAAUC,MAAV,EAAkB;AACxC,aAAOA,MAAM,KAAKP,EAAlB;AACD,KAFU,CAAX;AAGAC,IAAAA,QAAQ,GAAGA,QAAQ,CAACO,MAAT,GAAkBP,QAAlB,GAA6B,IAAxC;AACD,GALD,MAKO;AACLA,IAAAA,QAAQ,GAAGC,OAAO,GAAG,GAAGO,MAAH,CAAU,CAAC,GAAGZ,mBAAmB,CAACD,OAAxB,EAAiCD,KAAjC,CAAV,EAAmD,CAACK,EAAD,CAAnD,CAAH,GAA8D,CAACA,EAAD,CAAhF;AACD;;AAED,SAAOC,QAAP;AACD;;AAED,IAAIS,QAAQ,GAAGZ,mBAAf;AACAJ,OAAO,CAACE,OAAR,GAAkBc,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nfunction getNewMultipleValue(_ref) {\n  var id = _ref.id,\n      value = _ref.value;\n  var newValue;\n  var isArray = Array.isArray(value);\n  var hasValue = isArray && value.indexOf(id) !== -1;\n\n  if (hasValue) {\n    newValue = value.filter(function (itemId) {\n      return itemId !== id;\n    });\n    newValue = newValue.length ? newValue : null;\n  } else {\n    newValue = isArray ? [].concat((0, _toConsumableArray2.default)(value), [id]) : [id];\n  }\n\n  return newValue;\n}\n\nvar _default = getNewMultipleValue;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}