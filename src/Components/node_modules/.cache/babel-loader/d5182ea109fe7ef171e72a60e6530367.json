{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _default = function _default(_ref) {\n  var visibleColumns = _ref.visibleColumns,\n      availableWidth = _ref.availableWidth,\n      lockedStartColumns = _ref.lockedStartColumns,\n      lockedEndColumns = _ref.lockedEndColumns,\n      virtualizeColumns = _ref.virtualizeColumns;\n\n  if (virtualizeColumns === false) {\n    return visibleColumns.length;\n  }\n\n  var columns = (0, _toConsumableArray2.default)(visibleColumns).sort(function (a, b) {\n    return a.computedWidth - b.computedWidth;\n  });\n  var columnWidthPrefixSums = [];\n  var widthSum = 0;\n  var accumulateWidth = 0;\n  var columnRenderCount = 0;\n  columns.forEach(function (col) {\n    columnWidthPrefixSums.push(widthSum);\n    widthSum += col.computedWidth;\n\n    if (accumulateWidth <= availableWidth) {\n      columnRenderCount++;\n      accumulateWidth += col.computedWidth;\n    }\n  });\n  columnRenderCount += 1;\n\n  if (lockedStartColumns && lockedStartColumns.length) {\n    columnRenderCount -= lockedStartColumns.length;\n  }\n\n  if (lockedEndColumns && lockedEndColumns.length) {\n    columnRenderCount -= lockedEndColumns.length;\n  }\n\n  return columnRenderCount;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/getColumnRenderCount.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_default","_ref","visibleColumns","availableWidth","lockedStartColumns","lockedEndColumns","virtualizeColumns","length","columns","sort","a","b","computedWidth","columnWidthPrefixSums","widthSum","accumulateWidth","columnRenderCount","forEach","col","push"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,mBAAmB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIO,QAAQ,GAAG,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;AACrC,MAAIC,cAAc,GAAGD,IAAI,CAACC,cAA1B;AAAA,MACIC,cAAc,GAAGF,IAAI,CAACE,cAD1B;AAAA,MAEIC,kBAAkB,GAAGH,IAAI,CAACG,kBAF9B;AAAA,MAGIC,gBAAgB,GAAGJ,IAAI,CAACI,gBAH5B;AAAA,MAIIC,iBAAiB,GAAGL,IAAI,CAACK,iBAJ7B;;AAMA,MAAIA,iBAAiB,KAAK,KAA1B,EAAiC;AAC/B,WAAOJ,cAAc,CAACK,MAAtB;AACD;;AAED,MAAIC,OAAO,GAAG,CAAC,GAAGT,mBAAmB,CAACD,OAAxB,EAAiCI,cAAjC,EAAiDO,IAAjD,CAAsD,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClF,WAAOD,CAAC,CAACE,aAAF,GAAkBD,CAAC,CAACC,aAA3B;AACD,GAFa,CAAd;AAGA,MAAIC,qBAAqB,GAAG,EAA5B;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,eAAe,GAAG,CAAtB;AACA,MAAIC,iBAAiB,GAAG,CAAxB;AACAR,EAAAA,OAAO,CAACS,OAAR,CAAgB,UAAUC,GAAV,EAAe;AAC7BL,IAAAA,qBAAqB,CAACM,IAAtB,CAA2BL,QAA3B;AACAA,IAAAA,QAAQ,IAAII,GAAG,CAACN,aAAhB;;AAEA,QAAIG,eAAe,IAAIZ,cAAvB,EAAuC;AACrCa,MAAAA,iBAAiB;AACjBD,MAAAA,eAAe,IAAIG,GAAG,CAACN,aAAvB;AACD;AACF,GARD;AASAI,EAAAA,iBAAiB,IAAI,CAArB;;AAEA,MAAIZ,kBAAkB,IAAIA,kBAAkB,CAACG,MAA7C,EAAqD;AACnDS,IAAAA,iBAAiB,IAAIZ,kBAAkB,CAACG,MAAxC;AACD;;AAED,MAAIF,gBAAgB,IAAIA,gBAAgB,CAACE,MAAzC,EAAiD;AAC/CS,IAAAA,iBAAiB,IAAIX,gBAAgB,CAACE,MAAtC;AACD;;AAED,SAAOS,iBAAP;AACD,CAtCD;;AAwCApB,OAAO,CAACE,OAAR,GAAkBE,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _default = function _default(_ref) {\n  var visibleColumns = _ref.visibleColumns,\n      availableWidth = _ref.availableWidth,\n      lockedStartColumns = _ref.lockedStartColumns,\n      lockedEndColumns = _ref.lockedEndColumns,\n      virtualizeColumns = _ref.virtualizeColumns;\n\n  if (virtualizeColumns === false) {\n    return visibleColumns.length;\n  }\n\n  var columns = (0, _toConsumableArray2.default)(visibleColumns).sort(function (a, b) {\n    return a.computedWidth - b.computedWidth;\n  });\n  var columnWidthPrefixSums = [];\n  var widthSum = 0;\n  var accumulateWidth = 0;\n  var columnRenderCount = 0;\n  columns.forEach(function (col) {\n    columnWidthPrefixSums.push(widthSum);\n    widthSum += col.computedWidth;\n\n    if (accumulateWidth <= availableWidth) {\n      columnRenderCount++;\n      accumulateWidth += col.computedWidth;\n    }\n  });\n  columnRenderCount += 1;\n\n  if (lockedStartColumns && lockedStartColumns.length) {\n    columnRenderCount -= lockedStartColumns.length;\n  }\n\n  if (lockedEndColumns && lockedEndColumns.length) {\n    columnRenderCount -= lockedEndColumns.length;\n  }\n\n  return columnRenderCount;\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}