{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar sum = function sum(a, b) {\n  return (a || 0) + (b || 0);\n};\n\nvar EMPTY_ARRAY = [];\n\nvar _default = function _default(_ref) {\n  var flexes = _ref.flexes,\n      availableSize = _ref.availableSize,\n      _ref$maxWidths = _ref.maxWidths,\n      maxWidths = _ref$maxWidths === void 0 ? EMPTY_ARRAY : _ref$maxWidths,\n      _ref$minWidths = _ref.minWidths,\n      minWidths = _ref$minWidths === void 0 ? EMPTY_ARRAY : _ref$minWidths;\n  flexes = (0, _toConsumableArray2.default)(flexes);\n  var sumOfAllFlexes = flexes.reduce(sum, 0);\n\n  if (minWidths.length && minWidths.length != flexes.length) {\n    throw 'minWidths.length needs to be === flexes.length';\n  }\n\n  if (maxWidths.length && maxWidths.length != flexes.length) {\n    throw 'maxWidths.length needs to be === flexes.length';\n  }\n\n  var oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n  var result = flexes.map(function (_) {\n    return null;\n  });\n  flexes.forEach(function (flex, index) {\n    var minWidth = minWidths[index];\n    flex = flex || 0;\n\n    if (flex === 0) {\n      return;\n    }\n\n    var size;\n    var flexSize = Math.round(flex * oneFlex);\n    var maxWidth = maxWidths[index];\n\n    if (minWidth != null && flexSize < minWidth) {\n      availableSize -= minWidth;\n      flexes[index] = 0;\n      size = minWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    } else if (maxWidth != null && flexSize > maxWidth) {\n      availableSize -= maxWidth;\n      flexes[index] = 0;\n      size = maxWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    }\n\n    if (size) {\n      result[index] = size;\n    }\n  });\n  var lastValidFlexIndex = flexes.reduce(function (acc, flex, index) {\n    return flex ? index : acc;\n  }, -1);\n  flexes.forEach(function (flex, index) {\n    if (!flex) {\n      return;\n    }\n\n    var flexSize = Math.round(flex * oneFlex);\n\n    if (index === lastValidFlexIndex) {\n      flexSize = availableSize;\n    }\n\n    if (minWidths[index] != null) {\n      flexSize = Math.max(flexSize, minWidths[index] || 0);\n    }\n\n    if (maxWidths[index] != null) {\n      flexSize = Math.min(flexSize, maxWidths[index] || Infinity);\n    }\n\n    availableSize -= Math.max(flexSize, 0);\n    result[index] = flexSize;\n  });\n  return result;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/utils/flex/computeFlexWidths.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","sum","a","b","EMPTY_ARRAY","_default","_ref","flexes","availableSize","_ref$maxWidths","maxWidths","_ref$minWidths","minWidths","sumOfAllFlexes","reduce","length","oneFlex","result","map","_","forEach","flex","index","minWidth","size","flexSize","Math","round","maxWidth","lastValidFlexIndex","acc","max","min","Infinity"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar sum = function sum(a, b) {\n  return (a || 0) + (b || 0);\n};\n\nvar EMPTY_ARRAY = [];\n\nvar _default = function _default(_ref) {\n  var flexes = _ref.flexes,\n      availableSize = _ref.availableSize,\n      _ref$maxWidths = _ref.maxWidths,\n      maxWidths = _ref$maxWidths === void 0 ? EMPTY_ARRAY : _ref$maxWidths,\n      _ref$minWidths = _ref.minWidths,\n      minWidths = _ref$minWidths === void 0 ? EMPTY_ARRAY : _ref$minWidths;\n  flexes = (0, _toConsumableArray2.default)(flexes);\n  var sumOfAllFlexes = flexes.reduce(sum, 0);\n\n  if (minWidths.length && minWidths.length != flexes.length) {\n    throw 'minWidths.length needs to be === flexes.length';\n  }\n\n  if (maxWidths.length && maxWidths.length != flexes.length) {\n    throw 'maxWidths.length needs to be === flexes.length';\n  }\n\n  var oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n  var result = flexes.map(function (_) {\n    return null;\n  });\n  flexes.forEach(function (flex, index) {\n    var minWidth = minWidths[index];\n    flex = flex || 0;\n\n    if (flex === 0) {\n      return;\n    }\n\n    var size;\n    var flexSize = Math.round(flex * oneFlex);\n    var maxWidth = maxWidths[index];\n\n    if (minWidth != null && flexSize < minWidth) {\n      availableSize -= minWidth;\n      flexes[index] = 0;\n      size = minWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    } else if (maxWidth != null && flexSize > maxWidth) {\n      availableSize -= maxWidth;\n      flexes[index] = 0;\n      size = maxWidth;\n      sumOfAllFlexes -= flex;\n      oneFlex = sumOfAllFlexes ? availableSize / sumOfAllFlexes : 0;\n    }\n\n    if (size) {\n      result[index] = size;\n    }\n  });\n  var lastValidFlexIndex = flexes.reduce(function (acc, flex, index) {\n    return flex ? index : acc;\n  }, -1);\n  flexes.forEach(function (flex, index) {\n    if (!flex) {\n      return;\n    }\n\n    var flexSize = Math.round(flex * oneFlex);\n\n    if (index === lastValidFlexIndex) {\n      flexSize = availableSize;\n    }\n\n    if (minWidths[index] != null) {\n      flexSize = Math.max(flexSize, minWidths[index] || 0);\n    }\n\n    if (maxWidths[index] != null) {\n      flexSize = Math.min(flexSize, maxWidths[index] || Infinity);\n    }\n\n    availableSize -= Math.max(flexSize, 0);\n    result[index] = flexSize;\n  });\n  return result;\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}