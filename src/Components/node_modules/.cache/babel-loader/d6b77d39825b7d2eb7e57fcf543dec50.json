{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.buildTypeOperators = void 0;\n\nvar _filterTypes = _interopRequireDefault(require(\"./filterTypes\"));\n\nvar buildTypeOperators = function buildTypeOperators(filterTypes) {\n  return Object.keys(filterTypes).reduce(function (acc, filterTypeName) {\n    var filterType = filterTypes[filterTypeName];\n\n    if (!filterType || !filterType.operators) {\n      return acc;\n    }\n\n    var operators = filterType.operators.reduce(function (operatorAccumulator, operator) {\n      operatorAccumulator[operator.name] = operator;\n      return operatorAccumulator;\n    }, {});\n    acc[filterTypeName] = operators;\n    return acc;\n  }, {});\n};\n\nexports.buildTypeOperators = buildTypeOperators;\n\nvar _default = function _default(data, filterValueArray) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n  var typeOperators = buildTypeOperators(filterTypes);\n\n  var filterFn = function filterFn(item, index, data) {\n    var filterParam = {};\n\n    for (var i = 0, len = filterValueArray.length; i < len; i++) {\n      var _filterValueArray$i = filterValueArray[i],\n          name = _filterValueArray$i.name,\n          getFilterValue = _filterValueArray$i.getFilterValue,\n          filterValue = _filterValueArray$i.value,\n          type = _filterValueArray$i.type,\n          operator = _filterValueArray$i.operator,\n          active = _filterValueArray$i.active,\n          fn = _filterValueArray$i.fn;\n\n      if (active === false) {\n        continue;\n      }\n\n      if (!filterTypes[type]) {\n        continue;\n      }\n\n      filterParam.emptyValue = filterTypes[type].emptyValue;\n      filterParam.filterValue = filterValue;\n\n      if (columnsMap) {\n        filterParam.column = columnsMap[name];\n      }\n\n      var currentTypeOperators = typeOperators[type];\n\n      if (!fn && !currentTypeOperators) {\n        console.error(\"No filter of type \\\"\".concat(type, \"\\\" found!\"));\n        continue;\n      }\n\n      if (!fn && !currentTypeOperators[operator]) {\n        console.error(\"No operator \\\"\".concat(operator, \"\\\" found for filter type \\\"\").concat(type, \"\\\"!\"));\n        continue;\n      }\n\n      if (filterParam.filterValue === filterParam.emptyValue && !currentTypeOperators[operator].filterOnEmptyValue) {\n        continue;\n      }\n\n      var _filterFn = fn || currentTypeOperators[operator].fn;\n\n      filterParam.data = item;\n      filterParam.value = typeof getFilterValue == 'function' ? getFilterValue({\n        data: item,\n        value: item[name]\n      }) : item[name];\n\n      if (_filterFn(filterParam) !== true) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  if (data === undefined) {\n    return filterFn;\n  }\n\n  return data.filter(filterFn);\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/filter.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","buildTypeOperators","_filterTypes","filterTypes","keys","reduce","acc","filterTypeName","filterType","operators","operatorAccumulator","operator","name","_default","data","filterValueArray","arguments","length","undefined","columnsMap","typeOperators","filterFn","item","index","filterParam","i","len","_filterValueArray$i","getFilterValue","filterValue","type","active","fn","emptyValue","column","currentTypeOperators","console","error","concat","filterOnEmptyValue","_filterFn","filter"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.buildTypeOperators = void 0;\n\nvar _filterTypes = _interopRequireDefault(require(\"./filterTypes\"));\n\nvar buildTypeOperators = function buildTypeOperators(filterTypes) {\n  return Object.keys(filterTypes).reduce(function (acc, filterTypeName) {\n    var filterType = filterTypes[filterTypeName];\n\n    if (!filterType || !filterType.operators) {\n      return acc;\n    }\n\n    var operators = filterType.operators.reduce(function (operatorAccumulator, operator) {\n      operatorAccumulator[operator.name] = operator;\n      return operatorAccumulator;\n    }, {});\n    acc[filterTypeName] = operators;\n    return acc;\n  }, {});\n};\n\nexports.buildTypeOperators = buildTypeOperators;\n\nvar _default = function _default(data, filterValueArray) {\n  var filterTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _filterTypes.default;\n  var columnsMap = arguments.length > 3 ? arguments[3] : undefined;\n  var typeOperators = buildTypeOperators(filterTypes);\n\n  var filterFn = function filterFn(item, index, data) {\n    var filterParam = {};\n\n    for (var i = 0, len = filterValueArray.length; i < len; i++) {\n      var _filterValueArray$i = filterValueArray[i],\n          name = _filterValueArray$i.name,\n          getFilterValue = _filterValueArray$i.getFilterValue,\n          filterValue = _filterValueArray$i.value,\n          type = _filterValueArray$i.type,\n          operator = _filterValueArray$i.operator,\n          active = _filterValueArray$i.active,\n          fn = _filterValueArray$i.fn;\n\n      if (active === false) {\n        continue;\n      }\n\n      if (!filterTypes[type]) {\n        continue;\n      }\n\n      filterParam.emptyValue = filterTypes[type].emptyValue;\n      filterParam.filterValue = filterValue;\n\n      if (columnsMap) {\n        filterParam.column = columnsMap[name];\n      }\n\n      var currentTypeOperators = typeOperators[type];\n\n      if (!fn && !currentTypeOperators) {\n        console.error(\"No filter of type \\\"\".concat(type, \"\\\" found!\"));\n        continue;\n      }\n\n      if (!fn && !currentTypeOperators[operator]) {\n        console.error(\"No operator \\\"\".concat(operator, \"\\\" found for filter type \\\"\").concat(type, \"\\\"!\"));\n        continue;\n      }\n\n      if (filterParam.filterValue === filterParam.emptyValue && !currentTypeOperators[operator].filterOnEmptyValue) {\n        continue;\n      }\n\n      var _filterFn = fn || currentTypeOperators[operator].fn;\n\n      filterParam.data = item;\n      filterParam.value = typeof getFilterValue == 'function' ? getFilterValue({\n        data: item,\n        value: item[name]\n      }) : item[name];\n\n      if (_filterFn(filterParam) !== true) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  if (data === undefined) {\n    return filterFn;\n  }\n\n  return data.filter(filterFn);\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}