{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renderGroupTitle = _interopRequireDefault(require(\"./renderGroupTitle\"));\n\nvar _default = function _default(cellProps, rowProps) {\n  var groupProps = rowProps.groupProps,\n      totalLockedStartWidth = rowProps.totalLockedStartWidth,\n      totalLockedEndWidth = rowProps.totalLockedEndWidth,\n      totalUnlockedWidth = rowProps.totalUnlockedWidth,\n      totalComputedWidth = rowProps.totalComputedWidth,\n      totalColumnCount = rowProps.totalColumnCount,\n      firstLockedEndIndex = rowProps.firstLockedEndIndex,\n      firstUnlockedIndex = rowProps.firstUnlockedIndex,\n      groupColumn = rowProps.groupColumn,\n      hasLockedEnd = rowProps.hasLockedEnd,\n      hasLockedStart = rowProps.hasLockedStart;\n  var expandGroupTitle = rowProps.expandGroupTitle;\n\n  if (!hasLockedStart && !hasLockedEnd) {\n    expandGroupTitle = true;\n  }\n\n  var data = rowProps.data;\n  var computedVisibleIndex = cellProps.computedVisibleIndex,\n      computedLocked = cellProps.computedLocked;\n  var lockedStart = computedLocked === 'start';\n  var lockedEnd = computedLocked === 'end';\n\n  if (computedVisibleIndex < groupProps.depth) {\n    cellProps.value = null;\n    cellProps.noBackground = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === groupProps.depth) {\n    cellProps.value = null;\n    cellProps.collapsed = groupProps.collapsed;\n    cellProps.textAlign = 'center';\n    cellProps.noBackground = false;\n    cellProps.firstInSection = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === groupProps.depth + 1) {\n    var remainingWidth = lockedStart ? totalLockedStartWidth : totalComputedWidth - totalLockedEndWidth;\n\n    if (expandGroupTitle) {\n      remainingWidth = totalComputedWidth;\n      cellProps.last = true;\n      cellProps.computedColspan = Math.max(totalColumnCount - computedVisibleIndex, 1);\n    } else {\n      cellProps.computedColspan = Math.max(lockedStart ? firstUnlockedIndex - computedVisibleIndex : lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n\n    cellProps.lastInSection = true;\n    cellProps.noBackground = false;\n    cellProps.computedWidth = remainingWidth - cellProps.computedOffset;\n    cellProps.value = (0, _renderGroupTitle.default)({\n      cellProps: cellProps,\n      rowProps: rowProps,\n      groupProps: groupProps\n    });\n    cellProps.zIndex = 1;\n    cellProps.textAlign = 'start';\n\n    if (cellProps.render) {\n      cellProps.render = function () {\n        return cellProps.value;\n      };\n    }\n\n    return cellProps;\n  }\n\n  if (lockedStart) {\n    cellProps.hidden = true;\n  } else {\n    var fakeHidden = lockedEnd ? computedVisibleIndex !== firstLockedEndIndex : computedVisibleIndex !== firstUnlockedIndex;\n\n    if (!cellProps.hidden) {\n      cellProps.textAlign = 'start';\n      cellProps.value = fakeHidden ? null : (0, _renderGroupTitle.default)({\n        cellProps: cellProps,\n        rowProps: rowProps,\n        groupProps: groupProps\n      });\n\n      if (cellProps.render) {\n        cellProps.render = function () {\n          return cellProps.value;\n        };\n      }\n\n      cellProps.computedWidth = lockedEnd ? totalLockedEndWidth : totalUnlockedWidth;\n\n      if (!lockedEnd && computedVisibleIndex >= firstUnlockedIndex + 1) {\n        cellProps.hidden = true;\n      }\n\n      cellProps.firstInSection = true;\n      cellProps.last = hasLockedEnd ? lockedEnd : true;\n      cellProps.lastInSection = true;\n      cellProps.computedColspan = Math.max(lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n  }\n\n  return cellProps;\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/adjustCellProps.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_renderGroupTitle","_default","cellProps","rowProps","groupProps","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","totalComputedWidth","totalColumnCount","firstLockedEndIndex","firstUnlockedIndex","groupColumn","hasLockedEnd","hasLockedStart","expandGroupTitle","data","computedVisibleIndex","computedLocked","lockedStart","lockedEnd","depth","noBackground","collapsed","textAlign","firstInSection","remainingWidth","last","computedColspan","Math","max","lastInSection","computedWidth","computedOffset","zIndex","render","hidden","fakeHidden"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renderGroupTitle = _interopRequireDefault(require(\"./renderGroupTitle\"));\n\nvar _default = function _default(cellProps, rowProps) {\n  var groupProps = rowProps.groupProps,\n      totalLockedStartWidth = rowProps.totalLockedStartWidth,\n      totalLockedEndWidth = rowProps.totalLockedEndWidth,\n      totalUnlockedWidth = rowProps.totalUnlockedWidth,\n      totalComputedWidth = rowProps.totalComputedWidth,\n      totalColumnCount = rowProps.totalColumnCount,\n      firstLockedEndIndex = rowProps.firstLockedEndIndex,\n      firstUnlockedIndex = rowProps.firstUnlockedIndex,\n      groupColumn = rowProps.groupColumn,\n      hasLockedEnd = rowProps.hasLockedEnd,\n      hasLockedStart = rowProps.hasLockedStart;\n  var expandGroupTitle = rowProps.expandGroupTitle;\n\n  if (!hasLockedStart && !hasLockedEnd) {\n    expandGroupTitle = true;\n  }\n\n  var data = rowProps.data;\n  var computedVisibleIndex = cellProps.computedVisibleIndex,\n      computedLocked = cellProps.computedLocked;\n  var lockedStart = computedLocked === 'start';\n  var lockedEnd = computedLocked === 'end';\n\n  if (computedVisibleIndex < groupProps.depth) {\n    cellProps.value = null;\n    cellProps.noBackground = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === groupProps.depth) {\n    cellProps.value = null;\n    cellProps.collapsed = groupProps.collapsed;\n    cellProps.textAlign = 'center';\n    cellProps.noBackground = false;\n    cellProps.firstInSection = true;\n    return cellProps;\n  }\n\n  if (computedVisibleIndex === groupProps.depth + 1) {\n    var remainingWidth = lockedStart ? totalLockedStartWidth : totalComputedWidth - totalLockedEndWidth;\n\n    if (expandGroupTitle) {\n      remainingWidth = totalComputedWidth;\n      cellProps.last = true;\n      cellProps.computedColspan = Math.max(totalColumnCount - computedVisibleIndex, 1);\n    } else {\n      cellProps.computedColspan = Math.max(lockedStart ? firstUnlockedIndex - computedVisibleIndex : lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n\n    cellProps.lastInSection = true;\n    cellProps.noBackground = false;\n    cellProps.computedWidth = remainingWidth - cellProps.computedOffset;\n    cellProps.value = (0, _renderGroupTitle.default)({\n      cellProps: cellProps,\n      rowProps: rowProps,\n      groupProps: groupProps\n    });\n    cellProps.zIndex = 1;\n    cellProps.textAlign = 'start';\n\n    if (cellProps.render) {\n      cellProps.render = function () {\n        return cellProps.value;\n      };\n    }\n\n    return cellProps;\n  }\n\n  if (lockedStart) {\n    cellProps.hidden = true;\n  } else {\n    var fakeHidden = lockedEnd ? computedVisibleIndex !== firstLockedEndIndex : computedVisibleIndex !== firstUnlockedIndex;\n\n    if (!cellProps.hidden) {\n      cellProps.textAlign = 'start';\n      cellProps.value = fakeHidden ? null : (0, _renderGroupTitle.default)({\n        cellProps: cellProps,\n        rowProps: rowProps,\n        groupProps: groupProps\n      });\n\n      if (cellProps.render) {\n        cellProps.render = function () {\n          return cellProps.value;\n        };\n      }\n\n      cellProps.computedWidth = lockedEnd ? totalLockedEndWidth : totalUnlockedWidth;\n\n      if (!lockedEnd && computedVisibleIndex >= firstUnlockedIndex + 1) {\n        cellProps.hidden = true;\n      }\n\n      cellProps.firstInSection = true;\n      cellProps.last = hasLockedEnd ? lockedEnd : true;\n      cellProps.lastInSection = true;\n      cellProps.computedColspan = Math.max(lockedEnd ? totalColumnCount - computedVisibleIndex : firstLockedEndIndex - computedVisibleIndex, 1);\n    }\n  }\n\n  return cellProps;\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}