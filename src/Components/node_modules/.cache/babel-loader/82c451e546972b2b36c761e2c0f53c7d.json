{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _columnResize = _interopRequireDefault(require(\"../utils/columnResize\"));\n\nvar _useColumnInfo2 = _interopRequireDefault(require(\"../normalizeColumns/useColumnInfo\"));\n\nvar _getColumnRenderCount = _interopRequireDefault(require(\"../getColumnRenderCount\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"../utils/batchUpdate\"));\n\nvar _useProperty3 = _interopRequireDefault(require(\"./useProperty\"));\n\nvar _useNamedState3 = _interopRequireDefault(require(\"./useNamedState\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar setColumnSizes = function setColumnSizes(newColumnSizes, columnFlexes, reservedViewportWidth, _ref) {\n  var columnSizes = _ref.columnSizes,\n      getColumnBy = _ref.getColumnBy,\n      setColumnFlexes = _ref.setColumnFlexes,\n      setColumnSizes = _ref.setColumnSizes,\n      onBatchColumnResize = _ref.onBatchColumnResize,\n      onColumnResize = _ref.onColumnResize;\n  var reservedViewportWidthWrapper = {\n    reservedViewportWidth: reservedViewportWidth\n  };\n  var batchColumns = onBatchColumnResize ? [] : null;\n  Object.keys(newColumnSizes).forEach(function (colId) {\n    var size = newColumnSizes[colId];\n    var column = getColumnBy(colId, {\n      initial: true\n    });\n\n    if (column != null) {\n      if (batchColumns) {\n        batchColumns.push({\n          column: column,\n          width: size,\n          flex: undefined\n        });\n      }\n\n      if (onColumnResize) {\n        onColumnResize({\n          column: column,\n          width: size,\n          flex: undefined\n        }, reservedViewportWidthWrapper);\n      }\n    }\n  });\n  Object.keys(columnFlexes || {}).forEach(function (colId) {\n    var size = columnFlexes[colId];\n    var column = getColumnBy(colId, {\n      initial: true\n    });\n\n    if (column) {\n      if (batchColumns) {\n        batchColumns.push({\n          column: column,\n          size: size,\n          width: undefined,\n          flex: size\n        });\n      }\n\n      if (onColumnResize) {\n        onColumnResize({\n          column: column,\n          size: size,\n          width: undefined,\n          flex: size\n        }, reservedViewportWidthWrapper);\n      }\n    }\n  });\n\n  if (onBatchColumnResize) {\n    onBatchColumnResize(batchColumns, reservedViewportWidthWrapper);\n  }\n\n  setColumnSizes(Object.assign({}, columnSizes, newColumnSizes));\n  setColumnFlexes(columnFlexes);\n};\n\nvar getColumnBy = function getColumnBy(propColumns, visibleColumns, columnsMap) {\n  return function (idNameOrIndex, config) {\n    var column;\n\n    if ((0, _typeof2.default)(idNameOrIndex) === 'object') {\n      idNameOrIndex = idNameOrIndex.id == null ? idNameOrIndex.name : idNameOrIndex.id;\n    }\n\n    if (typeof idNameOrIndex === 'number') {\n      column = visibleColumns[idNameOrIndex];\n    } else {\n      column = columnsMap[idNameOrIndex];\n    }\n\n    if (!config || !config.initial || column && column.pivotColumn) {\n      return column;\n    }\n\n    return propColumns.filter(function (c) {\n      return c.id === column.id || c.name === column.id;\n    })[0];\n  };\n};\n\nvar _default = function _default(props, _ref2, computedPropsRef) {\n  var maxAvailableWidthForColumns = _ref2.maxAvailableWidthForColumns,\n      lockedColumnsState = _ref2.lockedColumnsState,\n      computedPivotUniqueValuesPerColumn = _ref2.computedPivotUniqueValuesPerColumn,\n      computedGroups = _ref2.computedGroups,\n      computedSortInfo = _ref2.computedSortInfo,\n      computedFilterValueMap = _ref2.computedFilterValueMap,\n      computedGroupBy = _ref2.computedGroupBy,\n      computedFilterable = _ref2.computedFilterable,\n      columnFlexes = _ref2.columnFlexes,\n      columnSizes = _ref2.columnSizes,\n      maybeAddColumns = _ref2.maybeAddColumns;\n\n  var _useProperty = (0, _useProperty3.default)(props, 'columnOrder'),\n      _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n      columnOrder = _useProperty2[0],\n      setColumnOrder = _useProperty2[1];\n\n  var _useNamedState = (0, _useNamedState3.default)(props.columns.reduce(function (acc, col) {\n    if (col.defaultVisible === false || col.visible === false) {\n      acc[col.id || col.name] = false;\n    }\n\n    return acc;\n  }, {}), props.context, 'stateColumnVisibilityMap'),\n      _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2),\n      stateColumnVisibilityMap = _useNamedState2[0],\n      setStateColumnVisibilityMap = _useNamedState2[1];\n\n  var _useColumnInfo = (0, _useColumnInfo2.default)({\n    showPivotSummaryColumns: props.showPivotSummaryColumns,\n    lockedColumnsState: lockedColumnsState,\n    columnOrder: columnOrder,\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    pivotGrandSummaryColumn: props.pivotGrandSummaryColumn,\n    columnVisibilityMap: stateColumnVisibilityMap,\n    columnMinWidth: props.columnMinWidth,\n    columnMaxWidth: props.columnMaxWidth,\n    resizable: props.resizable,\n    pivot: props.pivot,\n    computedGroups: computedGroups,\n    filterable: computedFilterable,\n    filterValueMap: computedFilterValueMap,\n    groupBy: computedGroupBy,\n    groupColumn: props.groupColumn,\n    rowIndexColumn: props.rowIndexColumn,\n    checkboxColumn: props.checkboxColumn,\n    computedPivotUniqueValuesPerColumn: computedPivotUniqueValuesPerColumn,\n    editable: props.editable,\n    sortable: props.sortable,\n    columns: props.columns,\n    rtl: props.rtl,\n    sortInfo: computedSortInfo,\n    availableWidth: maxAvailableWidthForColumns,\n    columnDefaultWidth: props.columnDefaultWidth,\n    inTransition: false,\n    hideGroupByColumns: props.hideGroupByColumns,\n    groupNestingSize: props.groupNestingSize,\n    groupForGroupColumns: props.groupForGroupColumns || '__',\n    enableRowExpand: props.enableRowExpand,\n    expandedRows: props.expandedRows,\n    defaultExpandedRows: props.defaultExpandedRows,\n    renderRowDetails: props.renderRowDetails,\n    renderDetailsGrid: props.renderDetailsGrid,\n    maybeAddColumns: maybeAddColumns,\n    rowExpandColumn: props.rowExpandColumn,\n    onRowReorder: props.onRowReorder,\n    rowReorderColumn: props.rowReorderColumn\n  }),\n      groupColumnSummaryReducers = _useColumnInfo.groupColumnSummaryReducers,\n      pivotColumnSummaryReducers = _useColumnInfo.pivotColumnSummaryReducers,\n      visibleColumns = _useColumnInfo.visibleColumns,\n      lockedStartColumns = _useColumnInfo.lockedStartColumns,\n      lockedEndColumns = _useColumnInfo.lockedEndColumns,\n      unlockedColumns = _useColumnInfo.unlockedColumns,\n      columnWidthPrefixSums = _useColumnInfo.columnWidthPrefixSums,\n      columnsMap = _useColumnInfo.columnsMap,\n      columnVisibilityMap = _useColumnInfo.columnVisibilityMap,\n      allColumns = _useColumnInfo.allColumns,\n      computedEnableRowspan = _useColumnInfo.computedEnableRowspan,\n      totalComputedWidth = _useColumnInfo.totalComputedWidth,\n      totalLockedStartWidth = _useColumnInfo.totalLockedStartWidth,\n      totalLockedEndWidth = _useColumnInfo.totalLockedEndWidth,\n      totalUnlockedWidth = _useColumnInfo.totalUnlockedWidth,\n      minColumnsSize = _useColumnInfo.minColumnsSize,\n      computedHasColSpan = _useColumnInfo.computedHasColSpan;\n\n  var virtualizeColumns = props.virtualizeColumns !== undefined ? props.virtualizeColumns : visibleColumns.length >= props.virtualizeColumnsThreshold;\n  var columnRenderCount = (0, _getColumnRenderCount.default)({\n    availableWidth: maxAvailableWidthForColumns,\n    visibleColumns: visibleColumns,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    virtualizeColumns: virtualizeColumns\n  });\n  var hasLockedStart = !!lockedStartColumns.length;\n  var hasLockedEnd = !!lockedEndColumns.length;\n  var hasUnlocked = !!unlockedColumns.length;\n  var firstUnlockedIndex = hasUnlocked ? unlockedColumns[0].computedVisibleIndex : -1;\n  var firstLockedStartIndex = hasLockedStart ? lockedStartColumns[0].computedVisibleIndex : -1;\n  var firstLockedEndIndex = hasLockedEnd ? lockedEndColumns[0].computedVisibleIndex : -1;\n  var lastLockedEndIndex = hasLockedEnd ? lockedEndColumns[lockedEndColumns.length - 1].computedVisibleIndex : -1;\n  var lastLockedStartIndex = hasLockedStart ? lockedStartColumns[lockedStartColumns.length - 1].computedVisibleIndex : -1;\n  var lastUnlockedIndex = hasUnlocked ? unlockedColumns[unlockedColumns.length - 1].computedVisibleIndex : -1;\n\n  var computedOnColumnResize = function computedOnColumnResize(_ref3) {\n    var index = _ref3.index,\n        groupColumns = _ref3.groupColumns,\n        diff = _ref3.diff;\n    var computedProps = computedPropsRef.current;\n\n    if (computedProps == null) {\n      return;\n    }\n\n    var maxAvailableWidthForColumns = computedProps.maxAvailableWidthForColumns,\n        shareSpaceOnResize = computedProps.shareSpaceOnResize,\n        totalComputedWidth = computedProps.totalComputedWidth;\n    var result = (0, _columnResize.default)({\n      columns: computedProps.visibleColumns,\n      groupColumns: groupColumns,\n      maxAvailableWidthForColumns: maxAvailableWidthForColumns,\n      shareSpaceOnResize: shareSpaceOnResize,\n      totalComputedWidth: totalComputedWidth,\n      index: index,\n      diff: diff\n    });\n\n    if (computedProps.rtl && diff) {\n      var _totalComputedWidth = computedProps.totalComputedWidth;\n      var oldScrollLeft = computedProps.getScrollLeft();\n      computedProps.onNextRender(function () {\n        var computedProps = computedPropsRef.current;\n\n        if (computedProps == null) {\n          return;\n        }\n\n        if (computedProps.totalComputedWidth === _totalComputedWidth + diff) {\n          var newScrollLeft = oldScrollLeft + diff;\n          computedProps.setScrollLeft(newScrollLeft);\n        }\n      });\n    }\n\n    (0, _batchUpdate.default)().commit(function () {\n      var newReservedViewportWidth = computedProps.reservedViewportWidth;\n\n      if (typeof result.maxAvailableWidthForColumns == 'number' && result.maxAvailableWidthForColumns !== maxAvailableWidthForColumns) {\n        var widthDiff = result.maxAvailableWidthForColumns - maxAvailableWidthForColumns;\n        newReservedViewportWidth = computedProps.reservedViewportWidth - widthDiff;\n        computedProps.setReservedViewportWidth(newReservedViewportWidth);\n      }\n\n      setColumnSizes(result.newColumnSizes || {}, result.newColumnFlexes, newReservedViewportWidth, {\n        getColumnBy: computedProps.getColumnBy,\n        onColumnResize: computedProps.initialProps.onColumnResize,\n        onBatchColumnResize: computedProps.initialProps.onBatchColumnResize,\n        columnSizes: computedProps.columnSizes,\n        setColumnSizes: computedProps.setColumnSizes,\n        setColumnFlexes: computedProps.setColumnFlexes\n      });\n    });\n  };\n\n  var getColumn = getColumnBy(props.columns, visibleColumns, columnsMap);\n\n  var setColumnVisible = function setColumnVisible(indexOrColumn, visible) {\n    var column = getColumn(indexOrColumn);\n\n    if (!column) {\n      return;\n    }\n\n    if (isColumnVisible(column) === visible) {\n      return;\n    }\n\n    var col = getColumn(column, {\n      initial: true\n    });\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (typeof computedProps.initialProps.onColumnVisibleChange === 'function') {\n      computedProps.initialProps.onColumnVisibleChange({\n        column: col,\n        visible: visible\n      });\n    }\n\n    if (col.visible === undefined) {\n      setStateColumnVisibilityMap(_objectSpread(_objectSpread({}, stateColumnVisibilityMap), {}, (0, _defineProperty2.default)({}, column.id, !!visible)));\n    } else if (computedProps.showWarnings && !computedProps.initialProps.onColumnVisibleChange) {\n      console.warn(\"Column \\\"\".concat(column.id, \"\\\" has controlled visible prop set to \\\"\").concat(column.visible, \"\\\" but you have no \\\"onColumnVisibleChange\\\" callback prop to update column.visible prop. Use uncontrolled \\\"defaultVisible\\\" instead.\"));\n    }\n  };\n\n  var isColumnVisible = function isColumnVisible(nameOrId) {\n    var column = getColumn(nameOrId);\n\n    if (!column) {\n      return false;\n    }\n\n    return column.computedVisible === true;\n  };\n\n  var setColumnLocked = function setColumnLocked(indexOrColumn, locked) {\n    var column = getColumn(indexOrColumn);\n\n    if (locked === null) {\n      locked = false;\n    }\n\n    locked = locked === true ? 'start' : locked;\n\n    if (column.lockable === false) {\n      if (props.showWarnings) {\n        console.error(\"You are trying to lock the \\\"\".concat(column.id, \"\\\" column, but it is lockable===false, so it cannot be locked.\"));\n      }\n\n      return;\n    }\n\n    var initialColumn = getColumn(column, {\n      initial: true\n    });\n\n    if (props.onColumnLockedChange) {\n      props.onColumnLockedChange({\n        column: initialColumn,\n        locked: locked\n      });\n    }\n\n    if (initialColumn.locked !== undefined) {\n      return;\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (computedProps == null) {\n      return;\n    }\n\n    var setLockedColumnsState = computedProps.setLockedColumnsState,\n        lockedColumnsState = computedProps.lockedColumnsState;\n    setLockedColumnsState(_objectSpread(_objectSpread({}, lockedColumnsState), {}, (0, _defineProperty2.default)({}, column.id, locked)));\n  };\n\n  var getColumnsInOrder = function getColumnsInOrder() {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return [];\n    }\n\n    var computedColumnOrder = computedProps.computedColumnOrder;\n\n    if (!computedColumnOrder || !computedColumnOrder.length) {\n      return computedProps.initialProps.columns.map(function (cId) {\n        return computedProps.getColumnBy(cId);\n      });\n    }\n\n    return computedColumnOrder.map(function (cId) {\n      return computedProps.getColumnBy(cId);\n    });\n  };\n\n  return {\n    getColumnsInOrder: getColumnsInOrder,\n    groupColumnSummaryReducers: groupColumnSummaryReducers,\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    groupColumn: props.pivot ? props.groupColumn || true : props.groupColumn,\n    firstLockedStartIndex: firstLockedStartIndex,\n    firstLockedEndIndex: firstLockedEndIndex,\n    firstUnlockedIndex: firstUnlockedIndex,\n    lastLockedStartIndex: lastLockedStartIndex,\n    lastUnlockedIndex: lastUnlockedIndex,\n    lastLockedEndIndex: lastLockedEndIndex,\n    visibleColumns: visibleColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnVisibilityMap: columnVisibilityMap,\n    computedHasColSpan: computedHasColSpan,\n    setColumnLocked: setColumnLocked,\n    computedColumnOrder: columnOrder,\n    setColumnOrder: setColumnOrder,\n    setColumnVisible: setColumnVisible,\n    computedPivot: props.pivot,\n    showColumnMenuTool: props.pivot ? false : props.showColumnMenuTool,\n    columnsMap: columnsMap,\n    allColumns: allColumns,\n    totalComputedWidth: totalComputedWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    minColumnsSize: minColumnsSize,\n    hasLockedStart: hasLockedStart,\n    hasLockedEnd: hasLockedEnd,\n    hasUnlocked: hasUnlocked,\n    computedEnableRowspan: computedEnableRowspan,\n    columnRenderCount: columnRenderCount,\n    virtualizeColumns: virtualizeColumns,\n    computedOnColumnResize: computedOnColumnResize,\n    getColumnBy: getColumn,\n    isColumnVisible: isColumnVisible\n  };\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/hooks/useColumns.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_slicedToArray2","_typeof2","_columnResize","_useColumnInfo2","_getColumnRenderCount","_batchUpdate","_useProperty3","_useNamedState3","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","setColumnSizes","newColumnSizes","columnFlexes","reservedViewportWidth","_ref","columnSizes","getColumnBy","setColumnFlexes","onBatchColumnResize","onColumnResize","reservedViewportWidthWrapper","batchColumns","colId","size","column","initial","width","flex","undefined","assign","propColumns","visibleColumns","columnsMap","idNameOrIndex","config","id","name","pivotColumn","c","_default","props","_ref2","computedPropsRef","maxAvailableWidthForColumns","lockedColumnsState","computedPivotUniqueValuesPerColumn","computedGroups","computedSortInfo","computedFilterValueMap","computedGroupBy","computedFilterable","maybeAddColumns","_useProperty","_useProperty2","columnOrder","setColumnOrder","_useNamedState","columns","reduce","acc","col","defaultVisible","visible","context","_useNamedState2","stateColumnVisibilityMap","setStateColumnVisibilityMap","_useColumnInfo","showPivotSummaryColumns","pivotGrandSummaryColumn","columnVisibilityMap","columnMinWidth","columnMaxWidth","resizable","pivot","filterable","filterValueMap","groupBy","groupColumn","rowIndexColumn","checkboxColumn","editable","sortable","rtl","sortInfo","availableWidth","columnDefaultWidth","inTransition","hideGroupByColumns","groupNestingSize","groupForGroupColumns","enableRowExpand","expandedRows","defaultExpandedRows","renderRowDetails","renderDetailsGrid","rowExpandColumn","onRowReorder","rowReorderColumn","groupColumnSummaryReducers","pivotColumnSummaryReducers","lockedStartColumns","lockedEndColumns","unlockedColumns","columnWidthPrefixSums","allColumns","computedEnableRowspan","totalComputedWidth","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","minColumnsSize","computedHasColSpan","virtualizeColumns","virtualizeColumnsThreshold","columnRenderCount","hasLockedStart","hasLockedEnd","hasUnlocked","firstUnlockedIndex","computedVisibleIndex","firstLockedStartIndex","firstLockedEndIndex","lastLockedEndIndex","lastLockedStartIndex","lastUnlockedIndex","computedOnColumnResize","_ref3","index","groupColumns","diff","computedProps","current","shareSpaceOnResize","result","_totalComputedWidth","oldScrollLeft","getScrollLeft","onNextRender","newScrollLeft","setScrollLeft","commit","newReservedViewportWidth","widthDiff","setReservedViewportWidth","newColumnFlexes","initialProps","getColumn","setColumnVisible","indexOrColumn","isColumnVisible","onColumnVisibleChange","showWarnings","console","warn","concat","nameOrId","computedVisible","setColumnLocked","locked","lockable","error","initialColumn","onColumnLockedChange","setLockedColumnsState","getColumnsInOrder","computedColumnOrder","map","cId","computedPivot","showColumnMenuTool"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _columnResize = _interopRequireDefault(require(\"../utils/columnResize\"));\n\nvar _useColumnInfo2 = _interopRequireDefault(require(\"../normalizeColumns/useColumnInfo\"));\n\nvar _getColumnRenderCount = _interopRequireDefault(require(\"../getColumnRenderCount\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"../utils/batchUpdate\"));\n\nvar _useProperty3 = _interopRequireDefault(require(\"./useProperty\"));\n\nvar _useNamedState3 = _interopRequireDefault(require(\"./useNamedState\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar setColumnSizes = function setColumnSizes(newColumnSizes, columnFlexes, reservedViewportWidth, _ref) {\n  var columnSizes = _ref.columnSizes,\n      getColumnBy = _ref.getColumnBy,\n      setColumnFlexes = _ref.setColumnFlexes,\n      setColumnSizes = _ref.setColumnSizes,\n      onBatchColumnResize = _ref.onBatchColumnResize,\n      onColumnResize = _ref.onColumnResize;\n  var reservedViewportWidthWrapper = {\n    reservedViewportWidth: reservedViewportWidth\n  };\n  var batchColumns = onBatchColumnResize ? [] : null;\n  Object.keys(newColumnSizes).forEach(function (colId) {\n    var size = newColumnSizes[colId];\n    var column = getColumnBy(colId, {\n      initial: true\n    });\n\n    if (column != null) {\n      if (batchColumns) {\n        batchColumns.push({\n          column: column,\n          width: size,\n          flex: undefined\n        });\n      }\n\n      if (onColumnResize) {\n        onColumnResize({\n          column: column,\n          width: size,\n          flex: undefined\n        }, reservedViewportWidthWrapper);\n      }\n    }\n  });\n  Object.keys(columnFlexes || {}).forEach(function (colId) {\n    var size = columnFlexes[colId];\n    var column = getColumnBy(colId, {\n      initial: true\n    });\n\n    if (column) {\n      if (batchColumns) {\n        batchColumns.push({\n          column: column,\n          size: size,\n          width: undefined,\n          flex: size\n        });\n      }\n\n      if (onColumnResize) {\n        onColumnResize({\n          column: column,\n          size: size,\n          width: undefined,\n          flex: size\n        }, reservedViewportWidthWrapper);\n      }\n    }\n  });\n\n  if (onBatchColumnResize) {\n    onBatchColumnResize(batchColumns, reservedViewportWidthWrapper);\n  }\n\n  setColumnSizes(Object.assign({}, columnSizes, newColumnSizes));\n  setColumnFlexes(columnFlexes);\n};\n\nvar getColumnBy = function getColumnBy(propColumns, visibleColumns, columnsMap) {\n  return function (idNameOrIndex, config) {\n    var column;\n\n    if ((0, _typeof2.default)(idNameOrIndex) === 'object') {\n      idNameOrIndex = idNameOrIndex.id == null ? idNameOrIndex.name : idNameOrIndex.id;\n    }\n\n    if (typeof idNameOrIndex === 'number') {\n      column = visibleColumns[idNameOrIndex];\n    } else {\n      column = columnsMap[idNameOrIndex];\n    }\n\n    if (!config || !config.initial || column && column.pivotColumn) {\n      return column;\n    }\n\n    return propColumns.filter(function (c) {\n      return c.id === column.id || c.name === column.id;\n    })[0];\n  };\n};\n\nvar _default = function _default(props, _ref2, computedPropsRef) {\n  var maxAvailableWidthForColumns = _ref2.maxAvailableWidthForColumns,\n      lockedColumnsState = _ref2.lockedColumnsState,\n      computedPivotUniqueValuesPerColumn = _ref2.computedPivotUniqueValuesPerColumn,\n      computedGroups = _ref2.computedGroups,\n      computedSortInfo = _ref2.computedSortInfo,\n      computedFilterValueMap = _ref2.computedFilterValueMap,\n      computedGroupBy = _ref2.computedGroupBy,\n      computedFilterable = _ref2.computedFilterable,\n      columnFlexes = _ref2.columnFlexes,\n      columnSizes = _ref2.columnSizes,\n      maybeAddColumns = _ref2.maybeAddColumns;\n\n  var _useProperty = (0, _useProperty3.default)(props, 'columnOrder'),\n      _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n      columnOrder = _useProperty2[0],\n      setColumnOrder = _useProperty2[1];\n\n  var _useNamedState = (0, _useNamedState3.default)(props.columns.reduce(function (acc, col) {\n    if (col.defaultVisible === false || col.visible === false) {\n      acc[col.id || col.name] = false;\n    }\n\n    return acc;\n  }, {}), props.context, 'stateColumnVisibilityMap'),\n      _useNamedState2 = (0, _slicedToArray2.default)(_useNamedState, 2),\n      stateColumnVisibilityMap = _useNamedState2[0],\n      setStateColumnVisibilityMap = _useNamedState2[1];\n\n  var _useColumnInfo = (0, _useColumnInfo2.default)({\n    showPivotSummaryColumns: props.showPivotSummaryColumns,\n    lockedColumnsState: lockedColumnsState,\n    columnOrder: columnOrder,\n    columnFlexes: columnFlexes,\n    columnSizes: columnSizes,\n    pivotGrandSummaryColumn: props.pivotGrandSummaryColumn,\n    columnVisibilityMap: stateColumnVisibilityMap,\n    columnMinWidth: props.columnMinWidth,\n    columnMaxWidth: props.columnMaxWidth,\n    resizable: props.resizable,\n    pivot: props.pivot,\n    computedGroups: computedGroups,\n    filterable: computedFilterable,\n    filterValueMap: computedFilterValueMap,\n    groupBy: computedGroupBy,\n    groupColumn: props.groupColumn,\n    rowIndexColumn: props.rowIndexColumn,\n    checkboxColumn: props.checkboxColumn,\n    computedPivotUniqueValuesPerColumn: computedPivotUniqueValuesPerColumn,\n    editable: props.editable,\n    sortable: props.sortable,\n    columns: props.columns,\n    rtl: props.rtl,\n    sortInfo: computedSortInfo,\n    availableWidth: maxAvailableWidthForColumns,\n    columnDefaultWidth: props.columnDefaultWidth,\n    inTransition: false,\n    hideGroupByColumns: props.hideGroupByColumns,\n    groupNestingSize: props.groupNestingSize,\n    groupForGroupColumns: props.groupForGroupColumns || '__',\n    enableRowExpand: props.enableRowExpand,\n    expandedRows: props.expandedRows,\n    defaultExpandedRows: props.defaultExpandedRows,\n    renderRowDetails: props.renderRowDetails,\n    renderDetailsGrid: props.renderDetailsGrid,\n    maybeAddColumns: maybeAddColumns,\n    rowExpandColumn: props.rowExpandColumn,\n    onRowReorder: props.onRowReorder,\n    rowReorderColumn: props.rowReorderColumn\n  }),\n      groupColumnSummaryReducers = _useColumnInfo.groupColumnSummaryReducers,\n      pivotColumnSummaryReducers = _useColumnInfo.pivotColumnSummaryReducers,\n      visibleColumns = _useColumnInfo.visibleColumns,\n      lockedStartColumns = _useColumnInfo.lockedStartColumns,\n      lockedEndColumns = _useColumnInfo.lockedEndColumns,\n      unlockedColumns = _useColumnInfo.unlockedColumns,\n      columnWidthPrefixSums = _useColumnInfo.columnWidthPrefixSums,\n      columnsMap = _useColumnInfo.columnsMap,\n      columnVisibilityMap = _useColumnInfo.columnVisibilityMap,\n      allColumns = _useColumnInfo.allColumns,\n      computedEnableRowspan = _useColumnInfo.computedEnableRowspan,\n      totalComputedWidth = _useColumnInfo.totalComputedWidth,\n      totalLockedStartWidth = _useColumnInfo.totalLockedStartWidth,\n      totalLockedEndWidth = _useColumnInfo.totalLockedEndWidth,\n      totalUnlockedWidth = _useColumnInfo.totalUnlockedWidth,\n      minColumnsSize = _useColumnInfo.minColumnsSize,\n      computedHasColSpan = _useColumnInfo.computedHasColSpan;\n\n  var virtualizeColumns = props.virtualizeColumns !== undefined ? props.virtualizeColumns : visibleColumns.length >= props.virtualizeColumnsThreshold;\n  var columnRenderCount = (0, _getColumnRenderCount.default)({\n    availableWidth: maxAvailableWidthForColumns,\n    visibleColumns: visibleColumns,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    virtualizeColumns: virtualizeColumns\n  });\n  var hasLockedStart = !!lockedStartColumns.length;\n  var hasLockedEnd = !!lockedEndColumns.length;\n  var hasUnlocked = !!unlockedColumns.length;\n  var firstUnlockedIndex = hasUnlocked ? unlockedColumns[0].computedVisibleIndex : -1;\n  var firstLockedStartIndex = hasLockedStart ? lockedStartColumns[0].computedVisibleIndex : -1;\n  var firstLockedEndIndex = hasLockedEnd ? lockedEndColumns[0].computedVisibleIndex : -1;\n  var lastLockedEndIndex = hasLockedEnd ? lockedEndColumns[lockedEndColumns.length - 1].computedVisibleIndex : -1;\n  var lastLockedStartIndex = hasLockedStart ? lockedStartColumns[lockedStartColumns.length - 1].computedVisibleIndex : -1;\n  var lastUnlockedIndex = hasUnlocked ? unlockedColumns[unlockedColumns.length - 1].computedVisibleIndex : -1;\n\n  var computedOnColumnResize = function computedOnColumnResize(_ref3) {\n    var index = _ref3.index,\n        groupColumns = _ref3.groupColumns,\n        diff = _ref3.diff;\n    var computedProps = computedPropsRef.current;\n\n    if (computedProps == null) {\n      return;\n    }\n\n    var maxAvailableWidthForColumns = computedProps.maxAvailableWidthForColumns,\n        shareSpaceOnResize = computedProps.shareSpaceOnResize,\n        totalComputedWidth = computedProps.totalComputedWidth;\n    var result = (0, _columnResize.default)({\n      columns: computedProps.visibleColumns,\n      groupColumns: groupColumns,\n      maxAvailableWidthForColumns: maxAvailableWidthForColumns,\n      shareSpaceOnResize: shareSpaceOnResize,\n      totalComputedWidth: totalComputedWidth,\n      index: index,\n      diff: diff\n    });\n\n    if (computedProps.rtl && diff) {\n      var _totalComputedWidth = computedProps.totalComputedWidth;\n      var oldScrollLeft = computedProps.getScrollLeft();\n      computedProps.onNextRender(function () {\n        var computedProps = computedPropsRef.current;\n\n        if (computedProps == null) {\n          return;\n        }\n\n        if (computedProps.totalComputedWidth === _totalComputedWidth + diff) {\n          var newScrollLeft = oldScrollLeft + diff;\n          computedProps.setScrollLeft(newScrollLeft);\n        }\n      });\n    }\n\n    (0, _batchUpdate.default)().commit(function () {\n      var newReservedViewportWidth = computedProps.reservedViewportWidth;\n\n      if (typeof result.maxAvailableWidthForColumns == 'number' && result.maxAvailableWidthForColumns !== maxAvailableWidthForColumns) {\n        var widthDiff = result.maxAvailableWidthForColumns - maxAvailableWidthForColumns;\n        newReservedViewportWidth = computedProps.reservedViewportWidth - widthDiff;\n        computedProps.setReservedViewportWidth(newReservedViewportWidth);\n      }\n\n      setColumnSizes(result.newColumnSizes || {}, result.newColumnFlexes, newReservedViewportWidth, {\n        getColumnBy: computedProps.getColumnBy,\n        onColumnResize: computedProps.initialProps.onColumnResize,\n        onBatchColumnResize: computedProps.initialProps.onBatchColumnResize,\n        columnSizes: computedProps.columnSizes,\n        setColumnSizes: computedProps.setColumnSizes,\n        setColumnFlexes: computedProps.setColumnFlexes\n      });\n    });\n  };\n\n  var getColumn = getColumnBy(props.columns, visibleColumns, columnsMap);\n\n  var setColumnVisible = function setColumnVisible(indexOrColumn, visible) {\n    var column = getColumn(indexOrColumn);\n\n    if (!column) {\n      return;\n    }\n\n    if (isColumnVisible(column) === visible) {\n      return;\n    }\n\n    var col = getColumn(column, {\n      initial: true\n    });\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (typeof computedProps.initialProps.onColumnVisibleChange === 'function') {\n      computedProps.initialProps.onColumnVisibleChange({\n        column: col,\n        visible: visible\n      });\n    }\n\n    if (col.visible === undefined) {\n      setStateColumnVisibilityMap(_objectSpread(_objectSpread({}, stateColumnVisibilityMap), {}, (0, _defineProperty2.default)({}, column.id, !!visible)));\n    } else if (computedProps.showWarnings && !computedProps.initialProps.onColumnVisibleChange) {\n      console.warn(\"Column \\\"\".concat(column.id, \"\\\" has controlled visible prop set to \\\"\").concat(column.visible, \"\\\" but you have no \\\"onColumnVisibleChange\\\" callback prop to update column.visible prop. Use uncontrolled \\\"defaultVisible\\\" instead.\"));\n    }\n  };\n\n  var isColumnVisible = function isColumnVisible(nameOrId) {\n    var column = getColumn(nameOrId);\n\n    if (!column) {\n      return false;\n    }\n\n    return column.computedVisible === true;\n  };\n\n  var setColumnLocked = function setColumnLocked(indexOrColumn, locked) {\n    var column = getColumn(indexOrColumn);\n\n    if (locked === null) {\n      locked = false;\n    }\n\n    locked = locked === true ? 'start' : locked;\n\n    if (column.lockable === false) {\n      if (props.showWarnings) {\n        console.error(\"You are trying to lock the \\\"\".concat(column.id, \"\\\" column, but it is lockable===false, so it cannot be locked.\"));\n      }\n\n      return;\n    }\n\n    var initialColumn = getColumn(column, {\n      initial: true\n    });\n\n    if (props.onColumnLockedChange) {\n      props.onColumnLockedChange({\n        column: initialColumn,\n        locked: locked\n      });\n    }\n\n    if (initialColumn.locked !== undefined) {\n      return;\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (computedProps == null) {\n      return;\n    }\n\n    var setLockedColumnsState = computedProps.setLockedColumnsState,\n        lockedColumnsState = computedProps.lockedColumnsState;\n    setLockedColumnsState(_objectSpread(_objectSpread({}, lockedColumnsState), {}, (0, _defineProperty2.default)({}, column.id, locked)));\n  };\n\n  var getColumnsInOrder = function getColumnsInOrder() {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return [];\n    }\n\n    var computedColumnOrder = computedProps.computedColumnOrder;\n\n    if (!computedColumnOrder || !computedColumnOrder.length) {\n      return computedProps.initialProps.columns.map(function (cId) {\n        return computedProps.getColumnBy(cId);\n      });\n    }\n\n    return computedColumnOrder.map(function (cId) {\n      return computedProps.getColumnBy(cId);\n    });\n  };\n\n  return {\n    getColumnsInOrder: getColumnsInOrder,\n    groupColumnSummaryReducers: groupColumnSummaryReducers,\n    pivotColumnSummaryReducers: pivotColumnSummaryReducers,\n    groupColumn: props.pivot ? props.groupColumn || true : props.groupColumn,\n    firstLockedStartIndex: firstLockedStartIndex,\n    firstLockedEndIndex: firstLockedEndIndex,\n    firstUnlockedIndex: firstUnlockedIndex,\n    lastLockedStartIndex: lastLockedStartIndex,\n    lastUnlockedIndex: lastUnlockedIndex,\n    lastLockedEndIndex: lastLockedEndIndex,\n    visibleColumns: visibleColumns,\n    columnWidthPrefixSums: columnWidthPrefixSums,\n    lockedStartColumns: lockedStartColumns,\n    lockedEndColumns: lockedEndColumns,\n    unlockedColumns: unlockedColumns,\n    columnVisibilityMap: columnVisibilityMap,\n    computedHasColSpan: computedHasColSpan,\n    setColumnLocked: setColumnLocked,\n    computedColumnOrder: columnOrder,\n    setColumnOrder: setColumnOrder,\n    setColumnVisible: setColumnVisible,\n    computedPivot: props.pivot,\n    showColumnMenuTool: props.pivot ? false : props.showColumnMenuTool,\n    columnsMap: columnsMap,\n    allColumns: allColumns,\n    totalComputedWidth: totalComputedWidth,\n    totalLockedStartWidth: totalLockedStartWidth,\n    totalLockedEndWidth: totalLockedEndWidth,\n    totalUnlockedWidth: totalUnlockedWidth,\n    minColumnsSize: minColumnsSize,\n    hasLockedStart: hasLockedStart,\n    hasLockedEnd: hasLockedEnd,\n    hasUnlocked: hasUnlocked,\n    computedEnableRowspan: computedEnableRowspan,\n    columnRenderCount: columnRenderCount,\n    virtualizeColumns: virtualizeColumns,\n    computedOnColumnResize: computedOnColumnResize,\n    getColumnBy: getColumn,\n    isColumnVisible: isColumnVisible\n  };\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}