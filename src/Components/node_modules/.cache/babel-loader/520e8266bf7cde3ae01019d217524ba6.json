{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleSelection = exports.handleMultiSelectionRowToggle = exports.handleMultiSelection = exports.handleSingleSelection = exports.notifySelection = exports.findInitialSelectionIndex = void 0;\n\nvar _isControlledProperty = _interopRequireDefault(require(\"../../utils/isControlledProperty\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar ua = global.navigator ? global.navigator.userAgent : '';\nvar isSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n\nvar delay35 = function delay35(fn) {\n  return function () {\n    return setTimeout(fn, 35);\n  };\n};\n\nvar now = function now(fn) {\n  return function () {\n    return fn();\n  };\n};\n\nvar findInitialSelectionIndex = function findInitialSelectionIndex(computedProps) {\n  var selected = computedProps.getSelectedMap();\n  var index = null;\n\n  if (!selected || !Object.keys(selected).length) {\n    return index;\n  }\n\n  var i = 0;\n  var data = computedProps.data;\n  var len = data.length;\n  var id;\n\n  for (; i < len; i++) {\n    id = computedProps.getItemId(data[i]);\n\n    if (selected[id]) {\n      index = i;\n    }\n  }\n\n  return index;\n};\n\nexports.findInitialSelectionIndex = findInitialSelectionIndex;\n\nvar notifySelection = function notifySelection(computedProps, selected, data, unselected, queue) {\n  var queueDefined = !!queue;\n  queue = queue || (0, _batchUpdate.default)();\n  var onSelectionChange = (isSafari ? delay35 : now)(function () {\n    if (typeof computedProps.onSelectionChange == 'function') {\n      computedProps.onSelectionChange({\n        selected: selected,\n        data: data,\n        unselected: unselected\n      });\n    }\n  });\n\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'unselected')) {\n    var unselectedCount = computedProps.getUnselectedCount(unselected);\n    queue(function () {\n      computedProps.setUnselected(unselected);\n    });\n  }\n\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'selected')) {\n    queue(function () {\n      computedProps.setSelected(selected, {\n        silent: true\n      });\n    });\n  }\n\n  onSelectionChange();\n\n  if (!queueDefined) {\n    queue.commit();\n  }\n};\n\nexports.notifySelection = notifySelection;\n\nvar handleSingleSelection = function handleSingleSelection(rowProps, computedProps, event, queue) {\n  var data = rowProps.data;\n  var rowSelected = computedProps.isRowSelected(data);\n  var newSelected = !rowSelected;\n  var ctrlKey = event.metaKey || event.ctrlKey;\n\n  if (!computedProps.toggleRowSelectOnClick && rowSelected && event && !ctrlKey) {\n    newSelected = true;\n  }\n\n  var selectedId = newSelected ? computedProps.getItemId(data) : null;\n  notifySelection(computedProps, selectedId, data, null, queue);\n};\n\nexports.handleSingleSelection = handleSingleSelection;\n\nvar handleMultiSelection = function handleMultiSelection(computedProps, data, config, queue) {\n  var selIndex = config.selIndex;\n  var prevShiftKeyIndex = config.prevShiftKeyIndex;\n  var map = selIndex == null ? {} : Object.assign({}, computedProps.computedSelected);\n\n  if (prevShiftKeyIndex != null && selIndex != null) {\n    var min = Math.min(prevShiftKeyIndex, selIndex);\n    var max = Math.max(prevShiftKeyIndex, selIndex);\n    var removeArray = computedProps.data.slice(min, max + 1) || [];\n    removeArray.forEach(function (item) {\n      if (item) {\n        var id = computedProps.getItemId(item);\n        delete map[id];\n      }\n    });\n  }\n\n  data.forEach(function (item) {\n    if (item) {\n      var id = computedProps.getItemId(item);\n      map[id] = item;\n    }\n  });\n  notifySelection(computedProps, map, data, null, queue);\n};\n\nexports.handleMultiSelection = handleMultiSelection;\n\nvar handleMultiSelectionRowToggle = function handleMultiSelectionRowToggle(computedProps, data, queue) {\n  var selected = computedProps.computedSelected;\n  var isSelected = computedProps.isRowSelected(data);\n\n  if (selected !== true) {\n    var clone = Object.assign({}, selected);\n    var id = computedProps.getItemId(data);\n\n    if (isSelected) {\n      delete clone[id];\n    } else {\n      clone[id] = data;\n    }\n\n    notifySelection(computedProps, clone, data, null, queue);\n  } else {\n    var _id = computedProps.getItemId(data);\n\n    var unselected = Object.assign({}, computedProps.computedUnselected);\n\n    if (isSelected) {\n      unselected[_id] = data;\n    } else {\n      delete unselected[_id];\n    }\n\n    notifySelection(computedProps, true, data, unselected, queue);\n  }\n\n  return isSelected;\n};\n\nexports.handleMultiSelectionRowToggle = handleMultiSelectionRowToggle;\n\nvar handleSelection = function handleSelection(rowProps, computedProps, event, queue) {\n  var queueDefined = !!queue;\n\n  if (!queue) {\n    queue = (0, _batchUpdate.default)();\n  }\n\n  if (!computedProps.computedRowSelectionEnabled) {\n    return;\n  }\n\n  if (!computedProps.computedRowMultiSelectionEnabled) {\n    handleSingleSelection(rowProps, computedProps, event, queue);\n\n    if (!queueDefined) {\n      queue.commit();\n    }\n\n    return;\n  }\n\n  var selIndex = computedProps.selectionIndexRef.current;\n\n  if (selIndex === null) {\n    selIndex = findInitialSelectionIndex(computedProps);\n  }\n\n  var index = rowProps.rowIndex;\n  var prevShiftKeyIndex = computedProps.shiftKeyIndexRef.current;\n  var start;\n  var end;\n  var data;\n\n  if (event.metaKey || event.ctrlKey || computedProps.toggleRowSelectOnClick && computedProps.getSelectedCount() === 1 && computedProps.isRowSelected(computedProps.data[index])) {\n    computedProps.selectionIndexRef.current = index;\n    computedProps.shiftKeyIndexRef.current = null;\n    var unselect = handleMultiSelectionRowToggle(computedProps, computedProps.data[index], queue);\n\n    if (!queueDefined) {\n      queue.commit();\n    }\n\n    if (unselect) {\n      computedProps.selectionIndexRef.current++;\n      computedProps.shiftKeyIndexRef.current = prevShiftKeyIndex;\n      return false;\n    }\n\n    return;\n  }\n\n  if (!event.shiftKey) {\n    computedProps.selectionIndexRef.current = index;\n    computedProps.shiftKeyIndexRef.current = null;\n    selIndex = null;\n  } else {\n    computedProps.shiftKeyIndexRef.current = index;\n  }\n\n  if (selIndex == null) {\n    data = [computedProps.data[index]];\n  } else {\n    start = Math.min(index, selIndex);\n    end = Math.max(index, selIndex) + 1;\n    data = computedProps.data.slice(start, end);\n  }\n\n  handleMultiSelection(computedProps, data, {\n    selIndex: selIndex,\n    prevShiftKeyIndex: prevShiftKeyIndex\n  }, queue);\n\n  if (!queueDefined) {\n    queue.commit();\n  }\n};\n\nexports.handleSelection = handleSelection;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/hooks/useRow/handleSelection.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","handleSelection","handleMultiSelectionRowToggle","handleMultiSelection","handleSingleSelection","notifySelection","findInitialSelectionIndex","_isControlledProperty","_batchUpdate","ua","global","navigator","userAgent","isSafari","indexOf","delay35","fn","setTimeout","now","computedProps","selected","getSelectedMap","index","keys","length","i","data","len","id","getItemId","unselected","queue","queueDefined","default","onSelectionChange","initialProps","unselectedCount","getUnselectedCount","setUnselected","setSelected","silent","commit","rowProps","event","rowSelected","isRowSelected","newSelected","ctrlKey","metaKey","toggleRowSelectOnClick","selectedId","config","selIndex","prevShiftKeyIndex","map","assign","computedSelected","min","Math","max","removeArray","slice","forEach","item","isSelected","clone","_id","computedUnselected","computedRowSelectionEnabled","computedRowMultiSelectionEnabled","selectionIndexRef","current","rowIndex","shiftKeyIndexRef","start","end","getSelectedCount","unselect","shiftKey"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BF,OAAO,CAACG,6BAAR,GAAwCH,OAAO,CAACI,oBAAR,GAA+BJ,OAAO,CAACK,qBAAR,GAAgCL,OAAO,CAACM,eAAR,GAA0BN,OAAO,CAACO,yBAAR,GAAoC,KAAK,CAApM;;AAEA,IAAIC,qBAAqB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,kCAAD,CAAR,CAAlD;;AAEA,IAAIY,YAAY,GAAGb,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAzC;;AAEA,IAAIa,EAAE,GAAGC,MAAM,CAACC,SAAP,GAAmBD,MAAM,CAACC,SAAP,CAAiBC,SAApC,GAAgD,EAAzD;AACA,IAAIC,QAAQ,GAAGJ,EAAE,CAACK,OAAH,CAAW,QAAX,MAAyB,CAAC,CAA1B,IAA+BL,EAAE,CAACK,OAAH,CAAW,QAAX,MAAyB,CAAC,CAAxE;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,EAAjB,EAAqB;AACjC,SAAO,YAAY;AACjB,WAAOC,UAAU,CAACD,EAAD,EAAK,EAAL,CAAjB;AACD,GAFD;AAGD,CAJD;;AAMA,IAAIE,GAAG,GAAG,SAASA,GAAT,CAAaF,EAAb,EAAiB;AACzB,SAAO,YAAY;AACjB,WAAOA,EAAE,EAAT;AACD,GAFD;AAGD,CAJD;;AAMA,IAAIV,yBAAyB,GAAG,SAASA,yBAAT,CAAmCa,aAAnC,EAAkD;AAChF,MAAIC,QAAQ,GAAGD,aAAa,CAACE,cAAd,EAAf;AACA,MAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAI,CAACF,QAAD,IAAa,CAACvB,MAAM,CAAC0B,IAAP,CAAYH,QAAZ,EAAsBI,MAAxC,EAAgD;AAC9C,WAAOF,KAAP;AACD;;AAED,MAAIG,CAAC,GAAG,CAAR;AACA,MAAIC,IAAI,GAAGP,aAAa,CAACO,IAAzB;AACA,MAAIC,GAAG,GAAGD,IAAI,CAACF,MAAf;AACA,MAAII,EAAJ;;AAEA,SAAOH,CAAC,GAAGE,GAAX,EAAgBF,CAAC,EAAjB,EAAqB;AACnBG,IAAAA,EAAE,GAAGT,aAAa,CAACU,SAAd,CAAwBH,IAAI,CAACD,CAAD,CAA5B,CAAL;;AAEA,QAAIL,QAAQ,CAACQ,EAAD,CAAZ,EAAkB;AAChBN,MAAAA,KAAK,GAAGG,CAAR;AACD;AACF;;AAED,SAAOH,KAAP;AACD,CAtBD;;AAwBAvB,OAAO,CAACO,yBAAR,GAAoCA,yBAApC;;AAEA,IAAID,eAAe,GAAG,SAASA,eAAT,CAAyBc,aAAzB,EAAwCC,QAAxC,EAAkDM,IAAlD,EAAwDI,UAAxD,EAAoEC,KAApE,EAA2E;AAC/F,MAAIC,YAAY,GAAG,CAAC,CAACD,KAArB;AACAA,EAAAA,KAAK,GAAGA,KAAK,IAAI,CAAC,GAAGvB,YAAY,CAACyB,OAAjB,GAAjB;AACA,MAAIC,iBAAiB,GAAG,CAACrB,QAAQ,GAAGE,OAAH,GAAaG,GAAtB,EAA2B,YAAY;AAC7D,QAAI,OAAOC,aAAa,CAACe,iBAArB,IAA0C,UAA9C,EAA0D;AACxDf,MAAAA,aAAa,CAACe,iBAAd,CAAgC;AAC9Bd,QAAAA,QAAQ,EAAEA,QADoB;AAE9BM,QAAAA,IAAI,EAAEA,IAFwB;AAG9BI,QAAAA,UAAU,EAAEA;AAHkB,OAAhC;AAKD;AACF,GARuB,CAAxB;;AAUA,MAAI,CAAC,CAAC,GAAGvB,qBAAqB,CAAC0B,OAA1B,EAAmCd,aAAa,CAACgB,YAAjD,EAA+D,YAA/D,CAAL,EAAmF;AACjF,QAAIC,eAAe,GAAGjB,aAAa,CAACkB,kBAAd,CAAiCP,UAAjC,CAAtB;AACAC,IAAAA,KAAK,CAAC,YAAY;AAChBZ,MAAAA,aAAa,CAACmB,aAAd,CAA4BR,UAA5B;AACD,KAFI,CAAL;AAGD;;AAED,MAAI,CAAC,CAAC,GAAGvB,qBAAqB,CAAC0B,OAA1B,EAAmCd,aAAa,CAACgB,YAAjD,EAA+D,UAA/D,CAAL,EAAiF;AAC/EJ,IAAAA,KAAK,CAAC,YAAY;AAChBZ,MAAAA,aAAa,CAACoB,WAAd,CAA0BnB,QAA1B,EAAoC;AAClCoB,QAAAA,MAAM,EAAE;AAD0B,OAApC;AAGD,KAJI,CAAL;AAKD;;AAEDN,EAAAA,iBAAiB;;AAEjB,MAAI,CAACF,YAAL,EAAmB;AACjBD,IAAAA,KAAK,CAACU,MAAN;AACD;AACF,CAjCD;;AAmCA1C,OAAO,CAACM,eAAR,GAA0BA,eAA1B;;AAEA,IAAID,qBAAqB,GAAG,SAASA,qBAAT,CAA+BsC,QAA/B,EAAyCvB,aAAzC,EAAwDwB,KAAxD,EAA+DZ,KAA/D,EAAsE;AAChG,MAAIL,IAAI,GAAGgB,QAAQ,CAAChB,IAApB;AACA,MAAIkB,WAAW,GAAGzB,aAAa,CAAC0B,aAAd,CAA4BnB,IAA5B,CAAlB;AACA,MAAIoB,WAAW,GAAG,CAACF,WAAnB;AACA,MAAIG,OAAO,GAAGJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACI,OAArC;;AAEA,MAAI,CAAC5B,aAAa,CAAC8B,sBAAf,IAAyCL,WAAzC,IAAwDD,KAAxD,IAAiE,CAACI,OAAtE,EAA+E;AAC7ED,IAAAA,WAAW,GAAG,IAAd;AACD;;AAED,MAAII,UAAU,GAAGJ,WAAW,GAAG3B,aAAa,CAACU,SAAd,CAAwBH,IAAxB,CAAH,GAAmC,IAA/D;AACArB,EAAAA,eAAe,CAACc,aAAD,EAAgB+B,UAAhB,EAA4BxB,IAA5B,EAAkC,IAAlC,EAAwCK,KAAxC,CAAf;AACD,CAZD;;AAcAhC,OAAO,CAACK,qBAAR,GAAgCA,qBAAhC;;AAEA,IAAID,oBAAoB,GAAG,SAASA,oBAAT,CAA8BgB,aAA9B,EAA6CO,IAA7C,EAAmDyB,MAAnD,EAA2DpB,KAA3D,EAAkE;AAC3F,MAAIqB,QAAQ,GAAGD,MAAM,CAACC,QAAtB;AACA,MAAIC,iBAAiB,GAAGF,MAAM,CAACE,iBAA/B;AACA,MAAIC,GAAG,GAAGF,QAAQ,IAAI,IAAZ,GAAmB,EAAnB,GAAwBvD,MAAM,CAAC0D,MAAP,CAAc,EAAd,EAAkBpC,aAAa,CAACqC,gBAAhC,CAAlC;;AAEA,MAAIH,iBAAiB,IAAI,IAArB,IAA6BD,QAAQ,IAAI,IAA7C,EAAmD;AACjD,QAAIK,GAAG,GAAGC,IAAI,CAACD,GAAL,CAASJ,iBAAT,EAA4BD,QAA5B,CAAV;AACA,QAAIO,GAAG,GAAGD,IAAI,CAACC,GAAL,CAASN,iBAAT,EAA4BD,QAA5B,CAAV;AACA,QAAIQ,WAAW,GAAGzC,aAAa,CAACO,IAAd,CAAmBmC,KAAnB,CAAyBJ,GAAzB,EAA8BE,GAAG,GAAG,CAApC,KAA0C,EAA5D;AACAC,IAAAA,WAAW,CAACE,OAAZ,CAAoB,UAAUC,IAAV,EAAgB;AAClC,UAAIA,IAAJ,EAAU;AACR,YAAInC,EAAE,GAAGT,aAAa,CAACU,SAAd,CAAwBkC,IAAxB,CAAT;AACA,eAAOT,GAAG,CAAC1B,EAAD,CAAV;AACD;AACF,KALD;AAMD;;AAEDF,EAAAA,IAAI,CAACoC,OAAL,CAAa,UAAUC,IAAV,EAAgB;AAC3B,QAAIA,IAAJ,EAAU;AACR,UAAInC,EAAE,GAAGT,aAAa,CAACU,SAAd,CAAwBkC,IAAxB,CAAT;AACAT,MAAAA,GAAG,CAAC1B,EAAD,CAAH,GAAUmC,IAAV;AACD;AACF,GALD;AAMA1D,EAAAA,eAAe,CAACc,aAAD,EAAgBmC,GAAhB,EAAqB5B,IAArB,EAA2B,IAA3B,EAAiCK,KAAjC,CAAf;AACD,CAxBD;;AA0BAhC,OAAO,CAACI,oBAAR,GAA+BA,oBAA/B;;AAEA,IAAID,6BAA6B,GAAG,SAASA,6BAAT,CAAuCiB,aAAvC,EAAsDO,IAAtD,EAA4DK,KAA5D,EAAmE;AACrG,MAAIX,QAAQ,GAAGD,aAAa,CAACqC,gBAA7B;AACA,MAAIQ,UAAU,GAAG7C,aAAa,CAAC0B,aAAd,CAA4BnB,IAA5B,CAAjB;;AAEA,MAAIN,QAAQ,KAAK,IAAjB,EAAuB;AACrB,QAAI6C,KAAK,GAAGpE,MAAM,CAAC0D,MAAP,CAAc,EAAd,EAAkBnC,QAAlB,CAAZ;AACA,QAAIQ,EAAE,GAAGT,aAAa,CAACU,SAAd,CAAwBH,IAAxB,CAAT;;AAEA,QAAIsC,UAAJ,EAAgB;AACd,aAAOC,KAAK,CAACrC,EAAD,CAAZ;AACD,KAFD,MAEO;AACLqC,MAAAA,KAAK,CAACrC,EAAD,CAAL,GAAYF,IAAZ;AACD;;AAEDrB,IAAAA,eAAe,CAACc,aAAD,EAAgB8C,KAAhB,EAAuBvC,IAAvB,EAA6B,IAA7B,EAAmCK,KAAnC,CAAf;AACD,GAXD,MAWO;AACL,QAAImC,GAAG,GAAG/C,aAAa,CAACU,SAAd,CAAwBH,IAAxB,CAAV;;AAEA,QAAII,UAAU,GAAGjC,MAAM,CAAC0D,MAAP,CAAc,EAAd,EAAkBpC,aAAa,CAACgD,kBAAhC,CAAjB;;AAEA,QAAIH,UAAJ,EAAgB;AACdlC,MAAAA,UAAU,CAACoC,GAAD,CAAV,GAAkBxC,IAAlB;AACD,KAFD,MAEO;AACL,aAAOI,UAAU,CAACoC,GAAD,CAAjB;AACD;;AAED7D,IAAAA,eAAe,CAACc,aAAD,EAAgB,IAAhB,EAAsBO,IAAtB,EAA4BI,UAA5B,EAAwCC,KAAxC,CAAf;AACD;;AAED,SAAOiC,UAAP;AACD,CA9BD;;AAgCAjE,OAAO,CAACG,6BAAR,GAAwCA,6BAAxC;;AAEA,IAAID,eAAe,GAAG,SAASA,eAAT,CAAyByC,QAAzB,EAAmCvB,aAAnC,EAAkDwB,KAAlD,EAAyDZ,KAAzD,EAAgE;AACpF,MAAIC,YAAY,GAAG,CAAC,CAACD,KAArB;;AAEA,MAAI,CAACA,KAAL,EAAY;AACVA,IAAAA,KAAK,GAAG,CAAC,GAAGvB,YAAY,CAACyB,OAAjB,GAAR;AACD;;AAED,MAAI,CAACd,aAAa,CAACiD,2BAAnB,EAAgD;AAC9C;AACD;;AAED,MAAI,CAACjD,aAAa,CAACkD,gCAAnB,EAAqD;AACnDjE,IAAAA,qBAAqB,CAACsC,QAAD,EAAWvB,aAAX,EAA0BwB,KAA1B,EAAiCZ,KAAjC,CAArB;;AAEA,QAAI,CAACC,YAAL,EAAmB;AACjBD,MAAAA,KAAK,CAACU,MAAN;AACD;;AAED;AACD;;AAED,MAAIW,QAAQ,GAAGjC,aAAa,CAACmD,iBAAd,CAAgCC,OAA/C;;AAEA,MAAInB,QAAQ,KAAK,IAAjB,EAAuB;AACrBA,IAAAA,QAAQ,GAAG9C,yBAAyB,CAACa,aAAD,CAApC;AACD;;AAED,MAAIG,KAAK,GAAGoB,QAAQ,CAAC8B,QAArB;AACA,MAAInB,iBAAiB,GAAGlC,aAAa,CAACsD,gBAAd,CAA+BF,OAAvD;AACA,MAAIG,KAAJ;AACA,MAAIC,GAAJ;AACA,MAAIjD,IAAJ;;AAEA,MAAIiB,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACI,OAAvB,IAAkC5B,aAAa,CAAC8B,sBAAd,IAAwC9B,aAAa,CAACyD,gBAAd,OAAqC,CAA7E,IAAkFzD,aAAa,CAAC0B,aAAd,CAA4B1B,aAAa,CAACO,IAAd,CAAmBJ,KAAnB,CAA5B,CAAxH,EAAgL;AAC9KH,IAAAA,aAAa,CAACmD,iBAAd,CAAgCC,OAAhC,GAA0CjD,KAA1C;AACAH,IAAAA,aAAa,CAACsD,gBAAd,CAA+BF,OAA/B,GAAyC,IAAzC;AACA,QAAIM,QAAQ,GAAG3E,6BAA6B,CAACiB,aAAD,EAAgBA,aAAa,CAACO,IAAd,CAAmBJ,KAAnB,CAAhB,EAA2CS,KAA3C,CAA5C;;AAEA,QAAI,CAACC,YAAL,EAAmB;AACjBD,MAAAA,KAAK,CAACU,MAAN;AACD;;AAED,QAAIoC,QAAJ,EAAc;AACZ1D,MAAAA,aAAa,CAACmD,iBAAd,CAAgCC,OAAhC;AACApD,MAAAA,aAAa,CAACsD,gBAAd,CAA+BF,OAA/B,GAAyClB,iBAAzC;AACA,aAAO,KAAP;AACD;;AAED;AACD;;AAED,MAAI,CAACV,KAAK,CAACmC,QAAX,EAAqB;AACnB3D,IAAAA,aAAa,CAACmD,iBAAd,CAAgCC,OAAhC,GAA0CjD,KAA1C;AACAH,IAAAA,aAAa,CAACsD,gBAAd,CAA+BF,OAA/B,GAAyC,IAAzC;AACAnB,IAAAA,QAAQ,GAAG,IAAX;AACD,GAJD,MAIO;AACLjC,IAAAA,aAAa,CAACsD,gBAAd,CAA+BF,OAA/B,GAAyCjD,KAAzC;AACD;;AAED,MAAI8B,QAAQ,IAAI,IAAhB,EAAsB;AACpB1B,IAAAA,IAAI,GAAG,CAACP,aAAa,CAACO,IAAd,CAAmBJ,KAAnB,CAAD,CAAP;AACD,GAFD,MAEO;AACLoD,IAAAA,KAAK,GAAGhB,IAAI,CAACD,GAAL,CAASnC,KAAT,EAAgB8B,QAAhB,CAAR;AACAuB,IAAAA,GAAG,GAAGjB,IAAI,CAACC,GAAL,CAASrC,KAAT,EAAgB8B,QAAhB,IAA4B,CAAlC;AACA1B,IAAAA,IAAI,GAAGP,aAAa,CAACO,IAAd,CAAmBmC,KAAnB,CAAyBa,KAAzB,EAAgCC,GAAhC,CAAP;AACD;;AAEDxE,EAAAA,oBAAoB,CAACgB,aAAD,EAAgBO,IAAhB,EAAsB;AACxC0B,IAAAA,QAAQ,EAAEA,QAD8B;AAExCC,IAAAA,iBAAiB,EAAEA;AAFqB,GAAtB,EAGjBtB,KAHiB,CAApB;;AAKA,MAAI,CAACC,YAAL,EAAmB;AACjBD,IAAAA,KAAK,CAACU,MAAN;AACD;AACF,CA3ED;;AA6EA1C,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.handleSelection = exports.handleMultiSelectionRowToggle = exports.handleMultiSelection = exports.handleSingleSelection = exports.notifySelection = exports.findInitialSelectionIndex = void 0;\n\nvar _isControlledProperty = _interopRequireDefault(require(\"../../utils/isControlledProperty\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar ua = global.navigator ? global.navigator.userAgent : '';\nvar isSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n\nvar delay35 = function delay35(fn) {\n  return function () {\n    return setTimeout(fn, 35);\n  };\n};\n\nvar now = function now(fn) {\n  return function () {\n    return fn();\n  };\n};\n\nvar findInitialSelectionIndex = function findInitialSelectionIndex(computedProps) {\n  var selected = computedProps.getSelectedMap();\n  var index = null;\n\n  if (!selected || !Object.keys(selected).length) {\n    return index;\n  }\n\n  var i = 0;\n  var data = computedProps.data;\n  var len = data.length;\n  var id;\n\n  for (; i < len; i++) {\n    id = computedProps.getItemId(data[i]);\n\n    if (selected[id]) {\n      index = i;\n    }\n  }\n\n  return index;\n};\n\nexports.findInitialSelectionIndex = findInitialSelectionIndex;\n\nvar notifySelection = function notifySelection(computedProps, selected, data, unselected, queue) {\n  var queueDefined = !!queue;\n  queue = queue || (0, _batchUpdate.default)();\n  var onSelectionChange = (isSafari ? delay35 : now)(function () {\n    if (typeof computedProps.onSelectionChange == 'function') {\n      computedProps.onSelectionChange({\n        selected: selected,\n        data: data,\n        unselected: unselected\n      });\n    }\n  });\n\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'unselected')) {\n    var unselectedCount = computedProps.getUnselectedCount(unselected);\n    queue(function () {\n      computedProps.setUnselected(unselected);\n    });\n  }\n\n  if (!(0, _isControlledProperty.default)(computedProps.initialProps, 'selected')) {\n    queue(function () {\n      computedProps.setSelected(selected, {\n        silent: true\n      });\n    });\n  }\n\n  onSelectionChange();\n\n  if (!queueDefined) {\n    queue.commit();\n  }\n};\n\nexports.notifySelection = notifySelection;\n\nvar handleSingleSelection = function handleSingleSelection(rowProps, computedProps, event, queue) {\n  var data = rowProps.data;\n  var rowSelected = computedProps.isRowSelected(data);\n  var newSelected = !rowSelected;\n  var ctrlKey = event.metaKey || event.ctrlKey;\n\n  if (!computedProps.toggleRowSelectOnClick && rowSelected && event && !ctrlKey) {\n    newSelected = true;\n  }\n\n  var selectedId = newSelected ? computedProps.getItemId(data) : null;\n  notifySelection(computedProps, selectedId, data, null, queue);\n};\n\nexports.handleSingleSelection = handleSingleSelection;\n\nvar handleMultiSelection = function handleMultiSelection(computedProps, data, config, queue) {\n  var selIndex = config.selIndex;\n  var prevShiftKeyIndex = config.prevShiftKeyIndex;\n  var map = selIndex == null ? {} : Object.assign({}, computedProps.computedSelected);\n\n  if (prevShiftKeyIndex != null && selIndex != null) {\n    var min = Math.min(prevShiftKeyIndex, selIndex);\n    var max = Math.max(prevShiftKeyIndex, selIndex);\n    var removeArray = computedProps.data.slice(min, max + 1) || [];\n    removeArray.forEach(function (item) {\n      if (item) {\n        var id = computedProps.getItemId(item);\n        delete map[id];\n      }\n    });\n  }\n\n  data.forEach(function (item) {\n    if (item) {\n      var id = computedProps.getItemId(item);\n      map[id] = item;\n    }\n  });\n  notifySelection(computedProps, map, data, null, queue);\n};\n\nexports.handleMultiSelection = handleMultiSelection;\n\nvar handleMultiSelectionRowToggle = function handleMultiSelectionRowToggle(computedProps, data, queue) {\n  var selected = computedProps.computedSelected;\n  var isSelected = computedProps.isRowSelected(data);\n\n  if (selected !== true) {\n    var clone = Object.assign({}, selected);\n    var id = computedProps.getItemId(data);\n\n    if (isSelected) {\n      delete clone[id];\n    } else {\n      clone[id] = data;\n    }\n\n    notifySelection(computedProps, clone, data, null, queue);\n  } else {\n    var _id = computedProps.getItemId(data);\n\n    var unselected = Object.assign({}, computedProps.computedUnselected);\n\n    if (isSelected) {\n      unselected[_id] = data;\n    } else {\n      delete unselected[_id];\n    }\n\n    notifySelection(computedProps, true, data, unselected, queue);\n  }\n\n  return isSelected;\n};\n\nexports.handleMultiSelectionRowToggle = handleMultiSelectionRowToggle;\n\nvar handleSelection = function handleSelection(rowProps, computedProps, event, queue) {\n  var queueDefined = !!queue;\n\n  if (!queue) {\n    queue = (0, _batchUpdate.default)();\n  }\n\n  if (!computedProps.computedRowSelectionEnabled) {\n    return;\n  }\n\n  if (!computedProps.computedRowMultiSelectionEnabled) {\n    handleSingleSelection(rowProps, computedProps, event, queue);\n\n    if (!queueDefined) {\n      queue.commit();\n    }\n\n    return;\n  }\n\n  var selIndex = computedProps.selectionIndexRef.current;\n\n  if (selIndex === null) {\n    selIndex = findInitialSelectionIndex(computedProps);\n  }\n\n  var index = rowProps.rowIndex;\n  var prevShiftKeyIndex = computedProps.shiftKeyIndexRef.current;\n  var start;\n  var end;\n  var data;\n\n  if (event.metaKey || event.ctrlKey || computedProps.toggleRowSelectOnClick && computedProps.getSelectedCount() === 1 && computedProps.isRowSelected(computedProps.data[index])) {\n    computedProps.selectionIndexRef.current = index;\n    computedProps.shiftKeyIndexRef.current = null;\n    var unselect = handleMultiSelectionRowToggle(computedProps, computedProps.data[index], queue);\n\n    if (!queueDefined) {\n      queue.commit();\n    }\n\n    if (unselect) {\n      computedProps.selectionIndexRef.current++;\n      computedProps.shiftKeyIndexRef.current = prevShiftKeyIndex;\n      return false;\n    }\n\n    return;\n  }\n\n  if (!event.shiftKey) {\n    computedProps.selectionIndexRef.current = index;\n    computedProps.shiftKeyIndexRef.current = null;\n    selIndex = null;\n  } else {\n    computedProps.shiftKeyIndexRef.current = index;\n  }\n\n  if (selIndex == null) {\n    data = [computedProps.data[index]];\n  } else {\n    start = Math.min(index, selIndex);\n    end = Math.max(index, selIndex) + 1;\n    data = computedProps.data.slice(start, end);\n  }\n\n  handleMultiSelection(computedProps, data, {\n    selIndex: selIndex,\n    prevShiftKeyIndex: prevShiftKeyIndex\n  }, queue);\n\n  if (!queueDefined) {\n    queue.commit();\n  }\n};\n\nexports.handleSelection = handleSelection;"]},"metadata":{},"sourceType":"script"}