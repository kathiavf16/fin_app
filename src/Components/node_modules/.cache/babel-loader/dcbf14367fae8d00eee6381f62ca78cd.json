{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Row = _interopRequireDefault(require(\"./Row\"));\n\nvar _getRowSpans = _interopRequireDefault(require(\"./getRowSpans\"));\n\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\n\nvar _default = function _default(_ref, _ref2) {\n  var from = _ref.from,\n      to = _ref.to,\n      empty = _ref.empty,\n      renderIndex = _ref.renderIndex,\n      editRowIndex = _ref.editRowIndex,\n      editValue = _ref.editValue,\n      editColumnIndex = _ref.editColumnIndex,\n      editColumnId = _ref.editColumnId,\n      setRowSpan = _ref.setRowSpan,\n      sticky = _ref.sticky,\n      rowHeight = _ref.rowHeight,\n      tryNextRowEdit = _ref.tryNextRowEdit,\n      onEditStop = _ref.onEditStop,\n      onEditStart = _ref.onEditStart,\n      onEditValueChange = _ref.onEditValueChange,\n      scrollLeft = _ref.scrollLeft,\n      columnRenderCount = _ref.columnRenderCount,\n      columnRenderStartIndex = _ref.columnRenderStartIndex;\n  var availableWidth = _ref2.availableWidth,\n      data = _ref2.data,\n      onTransitionEnd = _ref2.onTransitionEnd,\n      columns = _ref2.columns,\n      computedPivot = _ref2.computedPivot,\n      groupColumn = _ref2.groupColumn,\n      activeRowRef = _ref2.activeRowRef,\n      columnsMap = _ref2.columnsMap,\n      renderLockedStartCells = _ref2.renderLockedStartCells,\n      renderLockedEndCells = _ref2.renderLockedEndCells,\n      computedOnCellMouseDown = _ref2.computedOnCellMouseDown,\n      computedEnableRowspan = _ref2.computedEnableRowspan,\n      lockedStartColumns = _ref2.lockedStartColumns,\n      lockedEndColumns = _ref2.lockedEndColumns,\n      renderDetailsGrid = _ref2.renderDetailsGrid,\n      editable = _ref2.editable,\n      rowDetailsWidth = _ref2.rowDetailsWidth,\n      scrollbars = _ref2.scrollbars,\n      scrollToColumn = _ref2.scrollToColumn,\n      hasLockedStart = _ref2.hasLockedStart,\n      hasLockedEnd = _ref2.hasLockedEnd,\n      computedShowEmptyRows = _ref2.computedShowEmptyRows,\n      setRowSelected = _ref2.setRowSelected,\n      setRowExpanded = _ref2.setRowExpanded,\n      toggleRowExpand = _ref2.toggleRowExpand,\n      toggleNodeExpand = _ref2.toggleNodeExpand,\n      computedTreeEnabled = _ref2.computedTreeEnabled,\n      computedActiveCell = _ref2.computedActiveCell,\n      rtl = _ref2.rtl,\n      naturalRowHeight = _ref2.naturalRowHeight,\n      lastCellInRange = _ref2.lastCellInRange,\n      getCellSelectionKey = _ref2.getCellSelectionKey,\n      onRowContextMenu = _ref2.onRowContextMenu,\n      columnGroupCount = _ref2.columnGroupCount,\n      columnGroupIndex = _ref2.columnGroupIndex,\n      columnUserSelect = _ref2.columnUserSelect,\n      selectAll = _ref2.selectAll,\n      deselectAll = _ref2.deselectAll,\n      expandGroupTitle = _ref2.expandGroupTitle,\n      computedCellSelection = _ref2.computedCellSelection,\n      lastLockedStartIndex = _ref2.lastLockedStartIndex,\n      lastLockedEndIndex = _ref2.lastLockedEndIndex,\n      lastUnlockedIndex = _ref2.lastUnlockedIndex,\n      computedGroupBy = _ref2.computedGroupBy,\n      computedIndexesInGroups = _ref2.computedIndexesInGroups,\n      edition = _ref2.edition,\n      computedLicenseValid = _ref2.computedLicenseValid,\n      computedGroupCounts = _ref2.computedGroupCounts,\n      rowHeightManager = _ref2.rowHeightManager,\n      maxRowHeight = _ref2.maxRowHeight,\n      minRowHeight = _ref2.minRowHeight,\n      editStartEvent = _ref2.editStartEvent,\n      getItemId = _ref2.getItemId,\n      firstUnlockedIndex = _ref2.firstUnlockedIndex,\n      firstLockedStartIndex = _ref2.firstLockedStartIndex,\n      firstLockedEndIndex = _ref2.firstLockedEndIndex,\n      maxVisibleRows = _ref2.maxVisibleRows,\n      onRowMouseEnter = _ref2.onRowMouseEnter,\n      onRowMouseLeave = _ref2.onRowMouseLeave,\n      computedOnRowClick = _ref2.computedOnRowClick,\n      onCellClick = _ref2.onCellClick,\n      onCellSelectionDraggerMouseDown = _ref2.onCellSelectionDraggerMouseDown,\n      onCellMouseDown = _ref2.onCellMouseDown,\n      onCellEnter = _ref2.onCellEnter,\n      onEditCancel = _ref2.onEditCancel,\n      onEditComplete = _ref2.onEditComplete,\n      computedCellMultiSelectionEnabled = _ref2.computedCellMultiSelectionEnabled,\n      nativeScroll = _ref2.nativeScroll,\n      renderRow = _ref2.renderRow,\n      onRenderRow = _ref2.onRenderRow,\n      rowClassName = _ref2.rowClassName,\n      rowStyle = _ref2.rowStyle,\n      rowFactory = _ref2.rowFactory,\n      _ref2$rowProps = _ref2.rowProps,\n      passedProps = _ref2$rowProps === void 0 ? emptyObject : _ref2$rowProps,\n      rowKey = _ref2.rowKey,\n      cellFactory = _ref2.cellFactory,\n      computedSelected = _ref2.computedSelected,\n      computedUnselected = _ref2.computedUnselected,\n      treeColumn = _ref2.treeColumn,\n      renderNodeTool = _ref2.renderNodeTool,\n      isRowExpanded = _ref2.isRowExpanded,\n      rowExpandHeight = _ref2.rowExpandHeight,\n      isRowExpandedById = _ref2.isRowExpandedById,\n      computedRenderRowDetails = _ref2.computedRenderRowDetails,\n      isRowExpandableAt = _ref2.isRowExpandableAt,\n      computedRowExpandEnabled = _ref2.computedRowExpandEnabled,\n      computedRowMultiSelectionEnabled = _ref2.computedRowMultiSelectionEnabled,\n      computedRowSelectionEnabled = _ref2.computedRowSelectionEnabled,\n      computedActiveIndex = _ref2.computedActiveIndex,\n      computedSkip = _ref2.computedSkip,\n      computedShowZebraRows = _ref2.computedShowZebraRows,\n      computedHasColSpan = _ref2.computedHasColSpan,\n      initialRowHeight = _ref2.rowHeight,\n      totalColumnCount = _ref2.totalColumnCount,\n      totalComputedWidth = _ref2.totalComputedWidth,\n      totalLockedStartWidth = _ref2.totalLockedStartWidth,\n      totalLockedEndWidth = _ref2.totalLockedEndWidth,\n      totalUnlockedWidth = _ref2.totalUnlockedWidth,\n      currentDataSourceCount = _ref2.currentDataSourceCount,\n      computedShowCellBorders = _ref2.computedShowCellBorders,\n      emptyScrollOffset = _ref2.emptyScrollOffset,\n      showHorizontalCellBorders = _ref2.showHorizontalCellBorders,\n      showVerticalCellBorders = _ref2.showVerticalCellBorders,\n      getScrollLeftMax = _ref2.getScrollLeftMax,\n      shouldRenderCollapsedRowDetails = _ref2.shouldRenderCollapsedRowDetails,\n      rowDetailsStyle = _ref2.rowDetailsStyle,\n      minRowWidth = _ref2.minRowWidth,\n      maxWidth = _ref2.maxWidth,\n      _ref2$startIndex = _ref2.startIndex,\n      startIndex = _ref2$startIndex === void 0 ? 0 : _ref2$startIndex,\n      groupNestingSize = _ref2.groupNestingSize,\n      treeNestingSize = _ref2.treeNestingSize,\n      onGroupToggle = _ref2.onGroupToggle,\n      computedCollapsedGroups = _ref2.computedCollapsedGroups,\n      groupPathSeparator = _ref2.groupPathSeparator,\n      renderGroupTitle = _ref2.renderGroupTitle,\n      renderGroupTool = _ref2.renderGroupTool,\n      renderLockedEndGroupTitle = _ref2.renderLockedEndGroupTitle,\n      renderUnlockedGroupTitle = _ref2.renderUnlockedGroupTitle,\n      virtualizeColumns = _ref2.virtualizeColumns,\n      computedLivePagination = _ref2.computedLivePagination,\n      onRowReorder = _ref2.onRowReorder,\n      onDragRowMouseDown = _ref2.onDragRowMouseDown,\n      theme = _ref2.theme,\n      onContextMenu = _ref2.onContextMenu;\n  var remoteOffset = computedLivePagination ? 0 : computedSkip || 0;\n  var totalCount = data.length;\n  var dataArray = data.slice(from, to);\n  var isGrouped = computedGroupBy && computedGroupBy.length;\n  var defaultRowHeight = rowHeightManager.getDefaultRowHeight();\n\n  if (computedShowEmptyRows && !dataArray.length) {\n    dataArray = [null];\n  }\n\n  var depth = null;\n\n  if (isGrouped) {\n    depth = computedGroupBy.length;\n  }\n\n  var allCollapsed = computedCollapsedGroups === true;\n  return dataArray.map(function (rowData, i) {\n    var index = i + startIndex;\n    var id = rowData ? getItemId(rowData) : i;\n    var realIndex = index + from;\n    var active = computedActiveIndex === realIndex;\n    var indexInGroup = isGrouped ? computedIndexesInGroups[realIndex] : null;\n\n    if (empty) {\n      indexInGroup = realIndex + (totalCount % 2 - 1);\n    }\n\n    var keyIndex = rowKey === 'realIndex' ? realIndex : index;\n    var key = \"row-\".concat(keyIndex);\n    var isSelected = !empty && computedRowSelectionEnabled && (computedRowMultiSelectionEnabled ? computedSelected === true ? computedUnselected ? computedUnselected[id] === undefined : true : computedSelected.hasOwnProperty(id) : computedSelected == id);\n    var rowExpanded = isRowExpandedById(id);\n    var rowProps = {\n      availableWidth: availableWidth,\n      computedGroupBy: computedGroupBy,\n      expandGroupTitle: expandGroupTitle,\n      getCellSelectionKey: getCellSelectionKey,\n      id: id,\n      depth: depth,\n      columns: columns,\n      columnsMap: columnsMap,\n      computedHasColSpan: computedHasColSpan,\n      lockedStartColumns: lockedStartColumns,\n      lockedEndColumns: lockedEndColumns,\n      hasLockedStart: hasLockedStart,\n      rowDetailsWidth: rowDetailsWidth,\n      hasLockedEnd: hasLockedEnd,\n      columnUserSelect: columnUserSelect,\n      minWidth: minRowWidth,\n      width: totalComputedWidth,\n      active: active,\n      activeRowRef: activeRowRef,\n      emptyScrollOffset: emptyScrollOffset,\n      empty: empty,\n      editable: editable,\n      key: key,\n      scrollLeft: scrollLeft,\n      getScrollLeftMax: getScrollLeftMax,\n      groupColumn: groupColumn,\n      renderRow: renderRow,\n      onRenderRow: onRenderRow,\n      cellFactory: cellFactory,\n      computedActiveCell: computedActiveCell,\n      computedShowZebraRows: computedShowZebraRows,\n      lastCellInRange: lastCellInRange,\n      groupNestingSize: groupNestingSize,\n      treeNestingSize: treeNestingSize,\n      columnRenderCount: columnRenderCount,\n      rowStyle: rowStyle,\n      rowClassName: rowClassName,\n      onTransitionEnd: onTransitionEnd,\n      onRowContextMenu: onRowContextMenu,\n      renderNodeTool: renderNodeTool,\n      indexInGroup: isGrouped ? indexInGroup : null,\n      groupCount: isGrouped && computedGroupCounts ? computedGroupCounts[realIndex] : 0,\n      editStartEvent: editStartEvent,\n      virtualizeColumns: virtualizeColumns,\n      firstUnlockedIndex: firstUnlockedIndex,\n      firstLockedStartIndex: firstLockedStartIndex,\n      firstLockedEndIndex: firstLockedEndIndex,\n      tryNextRowEdit: tryNextRowEdit,\n      totalComputedWidth: totalComputedWidth,\n      totalLockedStartWidth: totalLockedStartWidth,\n      totalLockedEndWidth: totalLockedEndWidth,\n      totalUnlockedWidth: totalUnlockedWidth,\n      sticky: sticky,\n      computedCellSelection: computedCellSelection,\n      computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n      shouldRenderCollapsedRowDetails: shouldRenderCollapsedRowDetails,\n      rowDetailsStyle: rowDetailsStyle,\n      renderDetailsGrid: renderDetailsGrid,\n      renderIndex: renderIndex,\n      realIndex: realIndex,\n      rowIndex: realIndex,\n      remoteRowIndex: remoteOffset + realIndex,\n      maxVisibleRows: maxVisibleRows,\n      last: !computedShowEmptyRows ? realIndex == totalCount - 1 : !!(maxVisibleRows && realIndex >= maxVisibleRows - 1 && realIndex == totalCount - 1),\n      lastNonEmpty: realIndex === totalCount - 1,\n      totalDataCount: totalCount,\n      rowHeight: rowHeight,\n      defaultRowHeight: defaultRowHeight,\n      rowExpandHeight: rowExpandHeight,\n      initialRowHeight: initialRowHeight,\n      setRowSpan: setRowSpan,\n      maxRowHeight: maxRowHeight,\n      minRowHeight: minRowHeight,\n      getItemId: getItemId,\n      computedShowCellBorders: computedShowCellBorders,\n      showHorizontalCellBorders: showHorizontalCellBorders,\n      showVerticalCellBorders: showVerticalCellBorders,\n      passedProps: passedProps,\n      setRowSelected: setRowSelected,\n      setRowExpanded: setRowExpanded,\n      renderLockedStartCells: renderLockedStartCells,\n      renderLockedEndCells: renderLockedEndCells,\n      computedRowExpandEnabled: computedRowExpandEnabled,\n      computedRenderRowDetails: computedRenderRowDetails,\n      isRowExpandableAt: isRowExpandableAt,\n      treeColumn: treeColumn,\n      rtl: rtl,\n      toggleRowExpand: toggleRowExpand,\n      toggleNodeExpand: toggleNodeExpand,\n      edition: edition,\n      computedLicenseValid: computedLicenseValid,\n      computedEnableRowspan: computedEnableRowspan,\n      computedTreeEnabled: computedTreeEnabled,\n      naturalRowHeight: naturalRowHeight,\n      selectAll: selectAll,\n      deselectAll: deselectAll,\n      totalColumnCount: totalColumnCount,\n      computedPivot: computedPivot,\n      multiSelect: computedRowMultiSelectionEnabled,\n      selection: computedSelected,\n      selected: isSelected,\n      expanded: rowExpanded,\n      lastLockedStartIndex: lastLockedStartIndex,\n      lastLockedEndIndex: lastLockedEndIndex,\n      lastUnlockedIndex: lastUnlockedIndex,\n      data: rowData,\n      dataSourceArray: data,\n      onMouseEnter: !empty ? onRowMouseEnter : null,\n      onMouseLeave: !empty ? onRowMouseLeave : null,\n      onClick: !empty ? computedOnRowClick : null,\n      scrollToColumn: scrollToColumn,\n      onCellClick: onCellClick,\n      onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n      onCellMouseDown: computedOnCellMouseDown,\n      onCellEnter: onCellEnter,\n      onEditStop: onEditStop,\n      onEditStart: onEditStart,\n      onEditCancel: onEditCancel,\n      onEditValueChange: onEditValueChange,\n      onEditComplete: onEditComplete,\n      scrollbars: scrollbars,\n      even: false,\n      odd: false,\n      nativeScroll: nativeScroll,\n      onRowReorder: onRowReorder,\n      onDragRowMouseDown: onDragRowMouseDown,\n      theme: theme,\n      onContextMenu: onContextMenu\n    };\n\n    if (rowProps.rowIndex === editRowIndex) {\n      rowProps.editing = true;\n      rowProps.editValue = editValue;\n      rowProps.editColumnIndex = editColumnIndex;\n      rowProps.editColumnId = editColumnId;\n    }\n\n    if (rowData && rowData.__group) {\n      rowProps.indexInGroup = null;\n      rowProps.groupProps = {\n        renderGroupTitle: renderGroupTitle,\n        renderGroupTool: renderGroupTool,\n        renderLockedEndGroupTitle: renderLockedEndGroupTitle,\n        renderUnlockedGroupTitle: renderUnlockedGroupTitle,\n        onGroupToggle: onGroupToggle,\n        collapsed: allCollapsed || (computedCollapsedGroups ? computedCollapsedGroups[\"\".concat(rowData.keyPath.join(groupPathSeparator))] : false),\n        groupNestingSize: groupNestingSize,\n        depth: rowData.depth - 1\n      };\n      rowProps.onGroupToggle = onGroupToggle;\n      rowProps.groupSummary = rowData.groupSummary;\n      rowProps.groupColumnSummaries = rowData.groupColumnSummaries;\n      rowProps.selected = false;\n    }\n\n    if (isGrouped) {\n      rowProps.parentGroupDataArray = [];\n    }\n\n    var even = !!((isGrouped && !computedPivot ? indexInGroup : realIndex) % 2);\n\n    if (empty && isGrouped) {\n      var tmpIndex = (computedIndexesInGroups[currentDataSourceCount - 1] || 0) + (realIndex - currentDataSourceCount - 1);\n      even = !!(tmpIndex % 2);\n    }\n\n    if (rowData && rowData.__summary) {\n      rowProps.summaryProps = {\n        position: rowData.__summary,\n        groupProps: rowData.__parentGroup,\n        value: rowData.__parentGroup.groupColumnSummaries,\n        depth: rowData.__parentGroup.depth - 1\n      };\n      even = true;\n    }\n\n    if (maxWidth != null) {\n      rowProps.maxWidth = maxWidth;\n    }\n\n    rowProps.even = even;\n    rowProps.odd = !even;\n    var row;\n\n    if (rowFactory) {\n      row = rowFactory(rowProps);\n    }\n\n    if (computedEnableRowspan) {\n      rowProps.computedRowspans = (0, _getRowSpans.default)(rowProps);\n      setRowSpan(Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(rowProps.computedRowspans).map(function (key) {\n        return rowProps.computedRowspans[key];\n      }))));\n    }\n\n    if (row === undefined) {\n      row = _react.default.createElement(_Row.default, rowProps);\n    }\n\n    return row;\n  });\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/renderRows.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_react","_Row","_getRowSpans","emptyObject","freeze","_default","_ref","_ref2","from","to","empty","renderIndex","editRowIndex","editValue","editColumnIndex","editColumnId","setRowSpan","sticky","rowHeight","tryNextRowEdit","onEditStop","onEditStart","onEditValueChange","scrollLeft","columnRenderCount","columnRenderStartIndex","availableWidth","data","onTransitionEnd","columns","computedPivot","groupColumn","activeRowRef","columnsMap","renderLockedStartCells","renderLockedEndCells","computedOnCellMouseDown","computedEnableRowspan","lockedStartColumns","lockedEndColumns","renderDetailsGrid","editable","rowDetailsWidth","scrollbars","scrollToColumn","hasLockedStart","hasLockedEnd","computedShowEmptyRows","setRowSelected","setRowExpanded","toggleRowExpand","toggleNodeExpand","computedTreeEnabled","computedActiveCell","rtl","naturalRowHeight","lastCellInRange","getCellSelectionKey","onRowContextMenu","columnGroupCount","columnGroupIndex","columnUserSelect","selectAll","deselectAll","expandGroupTitle","computedCellSelection","lastLockedStartIndex","lastLockedEndIndex","lastUnlockedIndex","computedGroupBy","computedIndexesInGroups","edition","computedLicenseValid","computedGroupCounts","rowHeightManager","maxRowHeight","minRowHeight","editStartEvent","getItemId","firstUnlockedIndex","firstLockedStartIndex","firstLockedEndIndex","maxVisibleRows","onRowMouseEnter","onRowMouseLeave","computedOnRowClick","onCellClick","onCellSelectionDraggerMouseDown","onCellMouseDown","onCellEnter","onEditCancel","onEditComplete","computedCellMultiSelectionEnabled","nativeScroll","renderRow","onRenderRow","rowClassName","rowStyle","rowFactory","_ref2$rowProps","rowProps","passedProps","rowKey","cellFactory","computedSelected","computedUnselected","treeColumn","renderNodeTool","isRowExpanded","rowExpandHeight","isRowExpandedById","computedRenderRowDetails","isRowExpandableAt","computedRowExpandEnabled","computedRowMultiSelectionEnabled","computedRowSelectionEnabled","computedActiveIndex","computedSkip","computedShowZebraRows","computedHasColSpan","initialRowHeight","totalColumnCount","totalComputedWidth","totalLockedStartWidth","totalLockedEndWidth","totalUnlockedWidth","currentDataSourceCount","computedShowCellBorders","emptyScrollOffset","showHorizontalCellBorders","showVerticalCellBorders","getScrollLeftMax","shouldRenderCollapsedRowDetails","rowDetailsStyle","minRowWidth","maxWidth","_ref2$startIndex","startIndex","groupNestingSize","treeNestingSize","onGroupToggle","computedCollapsedGroups","groupPathSeparator","renderGroupTitle","renderGroupTool","renderLockedEndGroupTitle","renderUnlockedGroupTitle","virtualizeColumns","computedLivePagination","onRowReorder","onDragRowMouseDown","theme","onContextMenu","remoteOffset","totalCount","length","dataArray","slice","isGrouped","defaultRowHeight","getDefaultRowHeight","depth","allCollapsed","map","rowData","i","index","id","realIndex","active","indexInGroup","keyIndex","key","concat","isSelected","undefined","hasOwnProperty","rowExpanded","minWidth","width","groupCount","rowIndex","remoteRowIndex","last","lastNonEmpty","totalDataCount","multiSelect","selection","selected","expanded","dataSourceArray","onMouseEnter","onMouseLeave","onClick","even","odd","editing","__group","groupProps","collapsed","keyPath","join","groupSummary","groupColumnSummaries","parentGroupDataArray","tmpIndex","__summary","summaryProps","position","__parentGroup","row","computedRowspans","Math","max","apply","keys","createElement"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Row = _interopRequireDefault(require(\"./Row\"));\n\nvar _getRowSpans = _interopRequireDefault(require(\"./getRowSpans\"));\n\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\n\nvar _default = function _default(_ref, _ref2) {\n  var from = _ref.from,\n      to = _ref.to,\n      empty = _ref.empty,\n      renderIndex = _ref.renderIndex,\n      editRowIndex = _ref.editRowIndex,\n      editValue = _ref.editValue,\n      editColumnIndex = _ref.editColumnIndex,\n      editColumnId = _ref.editColumnId,\n      setRowSpan = _ref.setRowSpan,\n      sticky = _ref.sticky,\n      rowHeight = _ref.rowHeight,\n      tryNextRowEdit = _ref.tryNextRowEdit,\n      onEditStop = _ref.onEditStop,\n      onEditStart = _ref.onEditStart,\n      onEditValueChange = _ref.onEditValueChange,\n      scrollLeft = _ref.scrollLeft,\n      columnRenderCount = _ref.columnRenderCount,\n      columnRenderStartIndex = _ref.columnRenderStartIndex;\n  var availableWidth = _ref2.availableWidth,\n      data = _ref2.data,\n      onTransitionEnd = _ref2.onTransitionEnd,\n      columns = _ref2.columns,\n      computedPivot = _ref2.computedPivot,\n      groupColumn = _ref2.groupColumn,\n      activeRowRef = _ref2.activeRowRef,\n      columnsMap = _ref2.columnsMap,\n      renderLockedStartCells = _ref2.renderLockedStartCells,\n      renderLockedEndCells = _ref2.renderLockedEndCells,\n      computedOnCellMouseDown = _ref2.computedOnCellMouseDown,\n      computedEnableRowspan = _ref2.computedEnableRowspan,\n      lockedStartColumns = _ref2.lockedStartColumns,\n      lockedEndColumns = _ref2.lockedEndColumns,\n      renderDetailsGrid = _ref2.renderDetailsGrid,\n      editable = _ref2.editable,\n      rowDetailsWidth = _ref2.rowDetailsWidth,\n      scrollbars = _ref2.scrollbars,\n      scrollToColumn = _ref2.scrollToColumn,\n      hasLockedStart = _ref2.hasLockedStart,\n      hasLockedEnd = _ref2.hasLockedEnd,\n      computedShowEmptyRows = _ref2.computedShowEmptyRows,\n      setRowSelected = _ref2.setRowSelected,\n      setRowExpanded = _ref2.setRowExpanded,\n      toggleRowExpand = _ref2.toggleRowExpand,\n      toggleNodeExpand = _ref2.toggleNodeExpand,\n      computedTreeEnabled = _ref2.computedTreeEnabled,\n      computedActiveCell = _ref2.computedActiveCell,\n      rtl = _ref2.rtl,\n      naturalRowHeight = _ref2.naturalRowHeight,\n      lastCellInRange = _ref2.lastCellInRange,\n      getCellSelectionKey = _ref2.getCellSelectionKey,\n      onRowContextMenu = _ref2.onRowContextMenu,\n      columnGroupCount = _ref2.columnGroupCount,\n      columnGroupIndex = _ref2.columnGroupIndex,\n      columnUserSelect = _ref2.columnUserSelect,\n      selectAll = _ref2.selectAll,\n      deselectAll = _ref2.deselectAll,\n      expandGroupTitle = _ref2.expandGroupTitle,\n      computedCellSelection = _ref2.computedCellSelection,\n      lastLockedStartIndex = _ref2.lastLockedStartIndex,\n      lastLockedEndIndex = _ref2.lastLockedEndIndex,\n      lastUnlockedIndex = _ref2.lastUnlockedIndex,\n      computedGroupBy = _ref2.computedGroupBy,\n      computedIndexesInGroups = _ref2.computedIndexesInGroups,\n      edition = _ref2.edition,\n      computedLicenseValid = _ref2.computedLicenseValid,\n      computedGroupCounts = _ref2.computedGroupCounts,\n      rowHeightManager = _ref2.rowHeightManager,\n      maxRowHeight = _ref2.maxRowHeight,\n      minRowHeight = _ref2.minRowHeight,\n      editStartEvent = _ref2.editStartEvent,\n      getItemId = _ref2.getItemId,\n      firstUnlockedIndex = _ref2.firstUnlockedIndex,\n      firstLockedStartIndex = _ref2.firstLockedStartIndex,\n      firstLockedEndIndex = _ref2.firstLockedEndIndex,\n      maxVisibleRows = _ref2.maxVisibleRows,\n      onRowMouseEnter = _ref2.onRowMouseEnter,\n      onRowMouseLeave = _ref2.onRowMouseLeave,\n      computedOnRowClick = _ref2.computedOnRowClick,\n      onCellClick = _ref2.onCellClick,\n      onCellSelectionDraggerMouseDown = _ref2.onCellSelectionDraggerMouseDown,\n      onCellMouseDown = _ref2.onCellMouseDown,\n      onCellEnter = _ref2.onCellEnter,\n      onEditCancel = _ref2.onEditCancel,\n      onEditComplete = _ref2.onEditComplete,\n      computedCellMultiSelectionEnabled = _ref2.computedCellMultiSelectionEnabled,\n      nativeScroll = _ref2.nativeScroll,\n      renderRow = _ref2.renderRow,\n      onRenderRow = _ref2.onRenderRow,\n      rowClassName = _ref2.rowClassName,\n      rowStyle = _ref2.rowStyle,\n      rowFactory = _ref2.rowFactory,\n      _ref2$rowProps = _ref2.rowProps,\n      passedProps = _ref2$rowProps === void 0 ? emptyObject : _ref2$rowProps,\n      rowKey = _ref2.rowKey,\n      cellFactory = _ref2.cellFactory,\n      computedSelected = _ref2.computedSelected,\n      computedUnselected = _ref2.computedUnselected,\n      treeColumn = _ref2.treeColumn,\n      renderNodeTool = _ref2.renderNodeTool,\n      isRowExpanded = _ref2.isRowExpanded,\n      rowExpandHeight = _ref2.rowExpandHeight,\n      isRowExpandedById = _ref2.isRowExpandedById,\n      computedRenderRowDetails = _ref2.computedRenderRowDetails,\n      isRowExpandableAt = _ref2.isRowExpandableAt,\n      computedRowExpandEnabled = _ref2.computedRowExpandEnabled,\n      computedRowMultiSelectionEnabled = _ref2.computedRowMultiSelectionEnabled,\n      computedRowSelectionEnabled = _ref2.computedRowSelectionEnabled,\n      computedActiveIndex = _ref2.computedActiveIndex,\n      computedSkip = _ref2.computedSkip,\n      computedShowZebraRows = _ref2.computedShowZebraRows,\n      computedHasColSpan = _ref2.computedHasColSpan,\n      initialRowHeight = _ref2.rowHeight,\n      totalColumnCount = _ref2.totalColumnCount,\n      totalComputedWidth = _ref2.totalComputedWidth,\n      totalLockedStartWidth = _ref2.totalLockedStartWidth,\n      totalLockedEndWidth = _ref2.totalLockedEndWidth,\n      totalUnlockedWidth = _ref2.totalUnlockedWidth,\n      currentDataSourceCount = _ref2.currentDataSourceCount,\n      computedShowCellBorders = _ref2.computedShowCellBorders,\n      emptyScrollOffset = _ref2.emptyScrollOffset,\n      showHorizontalCellBorders = _ref2.showHorizontalCellBorders,\n      showVerticalCellBorders = _ref2.showVerticalCellBorders,\n      getScrollLeftMax = _ref2.getScrollLeftMax,\n      shouldRenderCollapsedRowDetails = _ref2.shouldRenderCollapsedRowDetails,\n      rowDetailsStyle = _ref2.rowDetailsStyle,\n      minRowWidth = _ref2.minRowWidth,\n      maxWidth = _ref2.maxWidth,\n      _ref2$startIndex = _ref2.startIndex,\n      startIndex = _ref2$startIndex === void 0 ? 0 : _ref2$startIndex,\n      groupNestingSize = _ref2.groupNestingSize,\n      treeNestingSize = _ref2.treeNestingSize,\n      onGroupToggle = _ref2.onGroupToggle,\n      computedCollapsedGroups = _ref2.computedCollapsedGroups,\n      groupPathSeparator = _ref2.groupPathSeparator,\n      renderGroupTitle = _ref2.renderGroupTitle,\n      renderGroupTool = _ref2.renderGroupTool,\n      renderLockedEndGroupTitle = _ref2.renderLockedEndGroupTitle,\n      renderUnlockedGroupTitle = _ref2.renderUnlockedGroupTitle,\n      virtualizeColumns = _ref2.virtualizeColumns,\n      computedLivePagination = _ref2.computedLivePagination,\n      onRowReorder = _ref2.onRowReorder,\n      onDragRowMouseDown = _ref2.onDragRowMouseDown,\n      theme = _ref2.theme,\n      onContextMenu = _ref2.onContextMenu;\n  var remoteOffset = computedLivePagination ? 0 : computedSkip || 0;\n  var totalCount = data.length;\n  var dataArray = data.slice(from, to);\n  var isGrouped = computedGroupBy && computedGroupBy.length;\n  var defaultRowHeight = rowHeightManager.getDefaultRowHeight();\n\n  if (computedShowEmptyRows && !dataArray.length) {\n    dataArray = [null];\n  }\n\n  var depth = null;\n\n  if (isGrouped) {\n    depth = computedGroupBy.length;\n  }\n\n  var allCollapsed = computedCollapsedGroups === true;\n  return dataArray.map(function (rowData, i) {\n    var index = i + startIndex;\n    var id = rowData ? getItemId(rowData) : i;\n    var realIndex = index + from;\n    var active = computedActiveIndex === realIndex;\n    var indexInGroup = isGrouped ? computedIndexesInGroups[realIndex] : null;\n\n    if (empty) {\n      indexInGroup = realIndex + (totalCount % 2 - 1);\n    }\n\n    var keyIndex = rowKey === 'realIndex' ? realIndex : index;\n    var key = \"row-\".concat(keyIndex);\n    var isSelected = !empty && computedRowSelectionEnabled && (computedRowMultiSelectionEnabled ? computedSelected === true ? computedUnselected ? computedUnselected[id] === undefined : true : computedSelected.hasOwnProperty(id) : computedSelected == id);\n    var rowExpanded = isRowExpandedById(id);\n    var rowProps = {\n      availableWidth: availableWidth,\n      computedGroupBy: computedGroupBy,\n      expandGroupTitle: expandGroupTitle,\n      getCellSelectionKey: getCellSelectionKey,\n      id: id,\n      depth: depth,\n      columns: columns,\n      columnsMap: columnsMap,\n      computedHasColSpan: computedHasColSpan,\n      lockedStartColumns: lockedStartColumns,\n      lockedEndColumns: lockedEndColumns,\n      hasLockedStart: hasLockedStart,\n      rowDetailsWidth: rowDetailsWidth,\n      hasLockedEnd: hasLockedEnd,\n      columnUserSelect: columnUserSelect,\n      minWidth: minRowWidth,\n      width: totalComputedWidth,\n      active: active,\n      activeRowRef: activeRowRef,\n      emptyScrollOffset: emptyScrollOffset,\n      empty: empty,\n      editable: editable,\n      key: key,\n      scrollLeft: scrollLeft,\n      getScrollLeftMax: getScrollLeftMax,\n      groupColumn: groupColumn,\n      renderRow: renderRow,\n      onRenderRow: onRenderRow,\n      cellFactory: cellFactory,\n      computedActiveCell: computedActiveCell,\n      computedShowZebraRows: computedShowZebraRows,\n      lastCellInRange: lastCellInRange,\n      groupNestingSize: groupNestingSize,\n      treeNestingSize: treeNestingSize,\n      columnRenderCount: columnRenderCount,\n      rowStyle: rowStyle,\n      rowClassName: rowClassName,\n      onTransitionEnd: onTransitionEnd,\n      onRowContextMenu: onRowContextMenu,\n      renderNodeTool: renderNodeTool,\n      indexInGroup: isGrouped ? indexInGroup : null,\n      groupCount: isGrouped && computedGroupCounts ? computedGroupCounts[realIndex] : 0,\n      editStartEvent: editStartEvent,\n      virtualizeColumns: virtualizeColumns,\n      firstUnlockedIndex: firstUnlockedIndex,\n      firstLockedStartIndex: firstLockedStartIndex,\n      firstLockedEndIndex: firstLockedEndIndex,\n      tryNextRowEdit: tryNextRowEdit,\n      totalComputedWidth: totalComputedWidth,\n      totalLockedStartWidth: totalLockedStartWidth,\n      totalLockedEndWidth: totalLockedEndWidth,\n      totalUnlockedWidth: totalUnlockedWidth,\n      sticky: sticky,\n      computedCellSelection: computedCellSelection,\n      computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n      shouldRenderCollapsedRowDetails: shouldRenderCollapsedRowDetails,\n      rowDetailsStyle: rowDetailsStyle,\n      renderDetailsGrid: renderDetailsGrid,\n      renderIndex: renderIndex,\n      realIndex: realIndex,\n      rowIndex: realIndex,\n      remoteRowIndex: remoteOffset + realIndex,\n      maxVisibleRows: maxVisibleRows,\n      last: !computedShowEmptyRows ? realIndex == totalCount - 1 : !!(maxVisibleRows && realIndex >= maxVisibleRows - 1 && realIndex == totalCount - 1),\n      lastNonEmpty: realIndex === totalCount - 1,\n      totalDataCount: totalCount,\n      rowHeight: rowHeight,\n      defaultRowHeight: defaultRowHeight,\n      rowExpandHeight: rowExpandHeight,\n      initialRowHeight: initialRowHeight,\n      setRowSpan: setRowSpan,\n      maxRowHeight: maxRowHeight,\n      minRowHeight: minRowHeight,\n      getItemId: getItemId,\n      computedShowCellBorders: computedShowCellBorders,\n      showHorizontalCellBorders: showHorizontalCellBorders,\n      showVerticalCellBorders: showVerticalCellBorders,\n      passedProps: passedProps,\n      setRowSelected: setRowSelected,\n      setRowExpanded: setRowExpanded,\n      renderLockedStartCells: renderLockedStartCells,\n      renderLockedEndCells: renderLockedEndCells,\n      computedRowExpandEnabled: computedRowExpandEnabled,\n      computedRenderRowDetails: computedRenderRowDetails,\n      isRowExpandableAt: isRowExpandableAt,\n      treeColumn: treeColumn,\n      rtl: rtl,\n      toggleRowExpand: toggleRowExpand,\n      toggleNodeExpand: toggleNodeExpand,\n      edition: edition,\n      computedLicenseValid: computedLicenseValid,\n      computedEnableRowspan: computedEnableRowspan,\n      computedTreeEnabled: computedTreeEnabled,\n      naturalRowHeight: naturalRowHeight,\n      selectAll: selectAll,\n      deselectAll: deselectAll,\n      totalColumnCount: totalColumnCount,\n      computedPivot: computedPivot,\n      multiSelect: computedRowMultiSelectionEnabled,\n      selection: computedSelected,\n      selected: isSelected,\n      expanded: rowExpanded,\n      lastLockedStartIndex: lastLockedStartIndex,\n      lastLockedEndIndex: lastLockedEndIndex,\n      lastUnlockedIndex: lastUnlockedIndex,\n      data: rowData,\n      dataSourceArray: data,\n      onMouseEnter: !empty ? onRowMouseEnter : null,\n      onMouseLeave: !empty ? onRowMouseLeave : null,\n      onClick: !empty ? computedOnRowClick : null,\n      scrollToColumn: scrollToColumn,\n      onCellClick: onCellClick,\n      onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n      onCellMouseDown: computedOnCellMouseDown,\n      onCellEnter: onCellEnter,\n      onEditStop: onEditStop,\n      onEditStart: onEditStart,\n      onEditCancel: onEditCancel,\n      onEditValueChange: onEditValueChange,\n      onEditComplete: onEditComplete,\n      scrollbars: scrollbars,\n      even: false,\n      odd: false,\n      nativeScroll: nativeScroll,\n      onRowReorder: onRowReorder,\n      onDragRowMouseDown: onDragRowMouseDown,\n      theme: theme,\n      onContextMenu: onContextMenu\n    };\n\n    if (rowProps.rowIndex === editRowIndex) {\n      rowProps.editing = true;\n      rowProps.editValue = editValue;\n      rowProps.editColumnIndex = editColumnIndex;\n      rowProps.editColumnId = editColumnId;\n    }\n\n    if (rowData && rowData.__group) {\n      rowProps.indexInGroup = null;\n      rowProps.groupProps = {\n        renderGroupTitle: renderGroupTitle,\n        renderGroupTool: renderGroupTool,\n        renderLockedEndGroupTitle: renderLockedEndGroupTitle,\n        renderUnlockedGroupTitle: renderUnlockedGroupTitle,\n        onGroupToggle: onGroupToggle,\n        collapsed: allCollapsed || (computedCollapsedGroups ? computedCollapsedGroups[\"\".concat(rowData.keyPath.join(groupPathSeparator))] : false),\n        groupNestingSize: groupNestingSize,\n        depth: rowData.depth - 1\n      };\n      rowProps.onGroupToggle = onGroupToggle;\n      rowProps.groupSummary = rowData.groupSummary;\n      rowProps.groupColumnSummaries = rowData.groupColumnSummaries;\n      rowProps.selected = false;\n    }\n\n    if (isGrouped) {\n      rowProps.parentGroupDataArray = [];\n    }\n\n    var even = !!((isGrouped && !computedPivot ? indexInGroup : realIndex) % 2);\n\n    if (empty && isGrouped) {\n      var tmpIndex = (computedIndexesInGroups[currentDataSourceCount - 1] || 0) + (realIndex - currentDataSourceCount - 1);\n      even = !!(tmpIndex % 2);\n    }\n\n    if (rowData && rowData.__summary) {\n      rowProps.summaryProps = {\n        position: rowData.__summary,\n        groupProps: rowData.__parentGroup,\n        value: rowData.__parentGroup.groupColumnSummaries,\n        depth: rowData.__parentGroup.depth - 1\n      };\n      even = true;\n    }\n\n    if (maxWidth != null) {\n      rowProps.maxWidth = maxWidth;\n    }\n\n    rowProps.even = even;\n    rowProps.odd = !even;\n    var row;\n\n    if (rowFactory) {\n      row = rowFactory(rowProps);\n    }\n\n    if (computedEnableRowspan) {\n      rowProps.computedRowspans = (0, _getRowSpans.default)(rowProps);\n      setRowSpan(Math.max.apply(Math, (0, _toConsumableArray2.default)(Object.keys(rowProps.computedRowspans).map(function (key) {\n        return rowProps.computedRowspans[key];\n      }))));\n    }\n\n    if (row === undefined) {\n      row = _react.default.createElement(_Row.default, rowProps);\n    }\n\n    return row;\n  });\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}