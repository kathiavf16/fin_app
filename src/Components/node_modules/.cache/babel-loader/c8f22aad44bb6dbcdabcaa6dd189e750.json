{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getScrollbarWidth\", {\n  enumerable: true,\n  get: function get() {\n    return _src.getScrollbarWidth;\n  }\n});\nObject.defineProperty(exports, \"RowHeightManager\", {\n  enumerable: true,\n  get: function get() {\n    return _RowHeightManager.default;\n  }\n});\nObject.defineProperty(exports, \"shouldComponentUpdate\", {\n  enumerable: true,\n  get: function get() {\n    return _shouldComponentUpdate2.default;\n  }\n});\nexports.propTypes = exports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _contains = _interopRequireDefault(require(\"../../../packages/contains\"));\n\nvar _reactCleanProps = _interopRequireDefault(require(\"../../../packages/react-clean-props\"));\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nvar _src = _interopRequireWildcard(require(\"../../../packages/react-virtual-scroll-container-pro/src\"));\n\nvar _uglified = _interopRequireDefault(require(\"../../../packages/uglified\"));\n\nvar _join = _interopRequireDefault(require(\"../../../packages/join\"));\n\nvar _binarySearch = _interopRequireDefault(require(\"../../../packages/binary-search\"));\n\nvar _RowHeightManager = _interopRequireDefault(require(\"./RowHeightManager\"));\n\nvar _getFocusableElements = _interopRequireDefault(require(\"../../getFocusableElements\"));\n\nvar _renderRows2 = _interopRequireDefault(require(\"./renderRows\"));\n\nvar _shouldComponentUpdate2 = _interopRequireDefault(require(\"../../../packages/shouldComponentUpdate\"));\n\nvar _getVisibleRange = _interopRequireDefault(require(\"./getVisibleRange\"));\n\nvar _StickyRowsContainer = _interopRequireDefault(require(\"./StickyRowsContainer\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.throttle\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar emptyFn = function emptyFn() {};\n\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar ua = global.navigator ? global.navigator.userAgent : '';\nvar IS_EDGE = ua.indexOf('Edge/') !== -1;\nvar IS_FF = ua.toLowerCase().indexOf('firefox') > -1;\nvar BASE_CLASS_NAME = 'inovua-react-virtual-list';\nvar ResizeObserver = global.ResizeObserver || _resizeObserverPolyfill.default;\n\nvar sum = function sum(a, b) {\n  return a + b;\n};\n\nvar unique = function unique(arr) {\n  if (Set) {\n    return (0, _toConsumableArray2.default)(new Set(arr));\n  }\n\n  return Object.keys(arr.reduce(function (acc, item) {\n    acc[item] = true;\n    return acc;\n  }, {}));\n};\n\nvar InovuaVirtualList = function (_Component) {\n  (0, _inherits2.default)(InovuaVirtualList, _Component);\n\n  var _super = _createSuper(InovuaVirtualList);\n\n  function InovuaVirtualList(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, InovuaVirtualList);\n    _this = _super.call(this, props);\n\n    _this.renderScroller = function (props) {\n      var offset = _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      var style = _objectSpread(_objectSpread({}, props.style), {}, {\n        overscrollBehavior: _this.props.overscrollBehavior || 'none',\n        backfaceVisibility: 'hidden',\n        WebkitOverscrollBehavior: _this.props.overscrollBehavior || 'none',\n        right: -offset,\n        bottom: -offset\n      });\n\n      props.style = style;\n      style.overflowY = '';\n\n      if (_this.props.showEmptyRows && _this.props.count < _this.strictVisibleCount) {\n        style.overflowY = 'hidden';\n      }\n\n      var result;\n\n      if (_this.props.renderScroller) {\n        result = _this.props.renderScroller(props);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", Object.assign({}, props));\n      }\n\n      return result;\n    };\n\n    _this.renderScrollerSpacerOnNaturalRowHeight = function (spacerProps) {\n      spacerProps.style.height = _this.getScrollHeight();\n    };\n\n    _this.renderView = function (props) {\n      var offset = _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      var minHeight = offset ? \"calc(100% - \".concat(offset, \"px)\") : '100%';\n      var maxWidth = offset ? \"calc(100% - \".concat(offset, \"px)\") : '100%';\n\n      if (_this.props.rtl && !_this.props.nativeScroll) {\n        maxWidth = '100%';\n      }\n\n      var style = _objectSpread(_objectSpread({}, props.style), {}, {\n        minHeight: minHeight,\n        maxWidth: maxWidth\n      });\n\n      if (_this.props.rtl && !(0, _src.getScrollbarWidth)()) {\n        style.transform = \"translateX(\".concat(-offset, \"px)\");\n      }\n\n      var viewProps = _objectSpread(_objectSpread({}, props), {}, {\n        style: style,\n        'data-name': 'view'\n      });\n\n      var result;\n\n      if (_this.props.renderView) {\n        result = _this.props.renderView(viewProps);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", Object.assign({}, viewProps));\n      }\n\n      return result;\n    };\n\n    _this.getTotalRowHeight = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      return props.rowHeightManager ? props.rowHeightManager.getTotalSize(props.count) : props.count * props.rowHeight;\n    };\n\n    _this.getScrollHeight = function () {\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      var offset = SCROLLBAR_WIDTH ? 0 : _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      var height = _this.getTotalRowHeight();\n\n      return height + offset;\n    };\n\n    _this.getScrollSize = function (node) {\n      var res = {\n        width: node.scrollWidth,\n        height: _this.getScrollHeight()\n      };\n      return res;\n    };\n\n    _this.getClientSize = function (n) {\n      var node = n.firstChild;\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      var offset = SCROLLBAR_WIDTH ? 0 : _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      return {\n        width: node.clientWidth + offset,\n        height: node.clientHeight + offset\n      };\n    };\n\n    _this.initSizes = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var minRowHeight = props.minRowHeight,\n          rowHeightManager = props.rowHeightManager;\n\n      if (rowHeightManager) {\n        return;\n      }\n\n      var count = _this.getMaxRenderCount(props);\n\n      var rowOffsets = [];\n      var totalHeight = 0;\n      var rowHeights = (0, _toConsumableArray2.default)(Array(count)).map(function () {\n        rowOffsets.push(totalHeight);\n        totalHeight += minRowHeight;\n        return minRowHeight;\n      });\n      rowOffsets[count] = totalHeight;\n      _this.rowOffsets = rowOffsets;\n      _this.rowHeights = rowHeights;\n    };\n\n    _this.setHeightForRows = function (indexes, heights) {\n      if (!indexes.length || !heights.length) {\n        return 0;\n      }\n\n      if (_this.props.showWarnings) {\n        if (indexes.length != heights.length) {\n          console.warn('setHeightForRows signature mismatch!!!');\n          return 0;\n        }\n\n        indexes.forEach(function (_, i) {\n          if (i > 0) {\n            var _diff = indexes[i] - indexes[i - 1];\n\n            if (_diff !== 1) {\n              console.warn('setHeightForRows should be called with successive indexes!', indexes);\n            }\n          }\n        });\n      }\n\n      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),\n          rowHeights = _assertThisInitialize.rowHeights,\n          rowOffsets = _assertThisInitialize.rowOffsets;\n\n      var count = _this.props.count;\n      var diff = 0;\n      indexes.forEach(function (index, i) {\n        var height = heights[i] || 0;\n        var oldHeight = rowHeights[index] || 0;\n        rowHeights[index] = height;\n        rowOffsets[index] = diff + (rowOffsets[index] || 0);\n        diff += height - oldHeight;\n      });\n\n      for (var i = indexes[indexes.length - 1] + 1; i <= count; i++) {\n        rowOffsets[i] = diff + (rowOffsets[i] || 0);\n      }\n\n      return diff;\n    };\n\n    _this.renderSizer = function (scrollHeight) {\n      var _this$props = _this.props,\n          renderSizer = _this$props.renderSizer,\n          minRowWidth = _this$props.minRowWidth,\n          emptyScrollOffset = _this$props.emptyScrollOffset,\n          rowHeightManager = _this$props.rowHeightManager,\n          showEmptyRows = _this$props.showEmptyRows;\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      var offset = SCROLLBAR_WIDTH ? 0 : emptyScrollOffset || 0;\n      var minHeight = scrollHeight + offset;\n\n      if (showEmptyRows) {\n        minHeight = Math.max(minHeight, _this.strictVisibleCount * rowHeightManager.getDefaultRowHeight());\n      }\n\n      var style = {\n        minHeight: isNaN(minHeight) ? '' : minHeight,\n        minWidth: minRowWidth ? minRowWidth + offset : 0\n      };\n      var result;\n\n      if (renderSizer) {\n        result = renderSizer({\n          style: style\n        }, scrollHeight);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", {\n          key: \"sizer\",\n          \"data-name\": \"sizer\",\n          style: style\n        });\n      }\n\n      return result;\n    };\n\n    _this.renderRowContainer = function () {\n      var props = {\n        key: 'rowContainer',\n        className: \"\".concat(BASE_CLASS_NAME, \"__row-container\"),\n        ref: _this.refContainerNode,\n        children: _this.renderRows()\n      };\n      var result;\n\n      if (_this.props.renderRowContainer) {\n        result = _this.props.renderRowContainer(props);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", Object.assign({}, props));\n      }\n\n      return result;\n    };\n\n    _this.onViewResize = function () {\n      requestAnimationFrame(function () {\n        _this.rafSync();\n      });\n    };\n\n    _this.onScrollbarsChange = function (_ref) {\n      var vertical = _ref.vertical,\n          horizontal = _ref.horizontal;\n\n      if (!vertical && _this.scrollTopPos || !horizontal && _this.scrollLeftPos) {\n        _this.applyScrollStyle({\n          scrollTop: !vertical ? 0 : _this.scrollTopPos,\n          scrollLeft: !horizontal ? 0 : _this.scrollLeftPos\n        });\n      }\n\n      if (_this.props.onScrollbarsChange) {\n        _this.props.onScrollbarsChange({\n          vertical: vertical,\n          horizontal: horizontal\n        });\n      }\n    };\n\n    _this.onRowUnmount = function (row) {\n      if (!_this.rows) {\n        return;\n      }\n\n      var currentRowIndex = row.getIndex();\n      var isFound = _this.mapping[currentRowIndex];\n\n      if (!isFound) {\n        return;\n      }\n\n      delete _this.mapping[currentRowIndex];\n\n      var index = _this.rows.indexOf(row);\n\n      if (index != -1) {\n        _this.rows.splice(index, 1);\n      }\n    };\n\n    _this.rowRef = function (r) {\n      if (!r) {\n        return;\n      }\n\n      _this.mapping[r.props.index] = r;\n      _this.rows[r.props.index] = r;\n    };\n\n    _this.onScrollStart = function () {\n      _this.scrolling = true;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (_this.props.scrollOneDirectionOnly) {\n        var scrollPos = args[0],\n            prevScrollPos = args[1];\n        var absTop = Math.abs(scrollPos.scrollTop - prevScrollPos.scrollTop);\n        var absLeft = Math.abs(scrollPos.scrollLeft - prevScrollPos.scrollLeft);\n\n        var scrollerNode = _this.getScrollerNode();\n\n        if (absTop != absLeft) {\n          _this.disableScrollPropName = absTop > absLeft ? 'overflowX' : 'overflowY';\n          _this.disableScrollOtherPropName = absTop > absLeft ? 'overflowY' : 'overflowX';\n          _this.disableScrollPropValue = scrollerNode.style[_this.disableScrollPropName];\n          scrollerNode.style[_this.disableScrollOtherPropName] = 'scroll';\n          scrollerNode.style[_this.disableScrollPropName] = 'hidden';\n        }\n      }\n\n      if (_this.props.onScrollStart) {\n        var _this$props2;\n\n        (_this$props2 = _this.props).onScrollStart.apply(_this$props2, args);\n      }\n    };\n\n    _this.getScrollerNode = function () {\n      return _this.scrollContainer.scrollerNode;\n    };\n\n    _this.onScrollStop = function () {\n      _this.scrolling = false;\n\n      if (_this.props.scrollOneDirectionOnly) {\n        var scrollerNode = _this.getScrollerNode();\n\n        scrollerNode.style[_this.disableScrollPropName] = _this.disableScrollPropValue;\n        scrollerNode.style.overflow = 'scroll';\n      }\n\n      if (_this.props.onScrollStop) {\n        var _this$props3;\n\n        (_this$props3 = _this.props).onScrollStop.apply(_this$props3, arguments);\n      }\n    };\n\n    _this.getRows = function () {\n      var rows = [];\n\n      _this.forEachRow(function (row) {\n        if (row) {\n          rows.push(row);\n        }\n      });\n\n      return rows;\n    };\n\n    _this.forEachRow = function (fn) {\n      var onlyVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var rows = _this.rows;\n\n      var visibleCount = _this.getVisibleCount();\n\n      var i = -1;\n\n      for (var initialIndex in rows) {\n        if (rows.hasOwnProperty(initialIndex) && (!onlyVisible || onlyVisible && initialIndex < visibleCount)) {\n          i++;\n          fn(rows[initialIndex], i);\n        }\n      }\n    };\n\n    _this.sortRows = function (rows) {\n      return rows.slice().sort(function (row1, row2) {\n        return row1.getIndex() - row2.getIndex();\n      });\n    };\n\n    _this.getRowAt = function (index) {\n      var row = _this.mapping[index];\n\n      if (row && row.getIndex() != index) {\n        row = null;\n      }\n\n      return row;\n    };\n\n    _this.getVisibleCount = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var virtualized = props.virtualized,\n          enableRowSpan = props.enableRowSpan;\n      var extraRows = enableRowSpan ? 2 : 0;\n\n      if (_this.visibleCount === undefined) {\n        return 0;\n      }\n\n      if (!virtualized) {\n        return (props.showEmptyRows ? Math.max(_this.visibleCount || 0, props.count || 0) : props.count) + extraRows;\n      }\n\n      return (props.showEmptyRows ? _this.visibleCount || props.count : Math.min(_this.visibleCount || props.count, props.count)) + extraRows;\n    };\n\n    _this.setRowIndex = function (row, index, callback) {\n      var existingRow = _this.mapping[index];\n\n      if (existingRow) {\n        existingRow.setIndex(index, callback);\n\n        if (existingRow !== row) {\n          row.setVisible(false);\n        }\n\n        return;\n      }\n\n      var oldIndex = row.getIndex();\n      row.setIndex(index, callback);\n      delete _this.mapping[oldIndex];\n      _this.mapping[index] = row;\n    };\n\n    _this.getSortedRows = function () {\n      var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.getRows();\n      return _this.sortRows(rows);\n    };\n\n    _this.onRowsUpdated = function (newIndexes, range, updateScroll) {\n      newIndexes.sort(function (i1, i2) {\n        return i1 - i2;\n      });\n      var start = newIndexes[0];\n      var end = _this.props.showEmptyRows ? newIndexes[newIndexes.length - 1] : Math.min(newIndexes[newIndexes.length - 1], _this.props.count - 1);\n      var minRowHeight = _this.props.minRowHeight;\n      var rowIndexes = [];\n      var rowHeights = [];\n      var rows = [];\n\n      for (var row, rowHeight, i = start; i <= end; i++) {\n        row = _this.mapping[i];\n        rowHeight = row ? row.getInfo().height : minRowHeight;\n\n        if (row) {\n          rows.push(row);\n        }\n\n        rowIndexes.push(i);\n        rowHeights.push(rowHeight);\n      }\n\n      var newToTopHeight = 0;\n      var oldTop;\n\n      if (_this.oldRowIndexes) {\n        oldTop = _this.oldRowIndexes[0];\n        rowIndexes.forEach(function (rowIndex, i) {\n          var diff;\n\n          if (rowIndex < oldTop) {\n            diff = rowHeights[i] - _this.rowHeights[rowIndex];\n            newToTopHeight += diff;\n          }\n        });\n      }\n\n      if (rowIndexes.length) {\n        _this.setHeightForRows(rowIndexes, rowHeights);\n      }\n\n      rows.forEach(function (row) {\n        var index = row.getIndex();\n        var offset = _this.rowOffsets[index];\n        row.setOffset(offset);\n      });\n      _this.oldRowIndexes = rowIndexes;\n      var newScrollTop;\n\n      if (newToTopHeight) {\n        newScrollTop = _this.scrollTopPos + newToTopHeight;\n        updateScroll(newScrollTop);\n        _this.forceScrollTop = newScrollTop;\n        _this.scrollTop = newScrollTop;\n      } else {\n        updateScroll();\n      }\n    };\n\n    _this.getVisibleRange = function (args) {\n      return (0, _getVisibleRange.default)(args);\n    };\n\n    _this.getCurrentVisibleRange = function () {\n      var _this$props4 = _this.props,\n          count = _this$props4.count,\n          rowHeightManager = _this$props4.rowHeightManager,\n          rowHeight = _this$props4.rowHeight,\n          naturalRowHeight = _this$props4.naturalRowHeight,\n          showEmptyRows = _this$props4.showEmptyRows;\n      return _this.getVisibleRange({\n        scrollTop: _this.scrollTopPos,\n        size: _this.size,\n        count: count,\n        naturalRowHeight: naturalRowHeight,\n        rowHeightManager: rowHeightManager,\n        rowHeight: rowHeight,\n        showEmptyRows: showEmptyRows\n      });\n    };\n\n    _this.applyScrollStyle = function (_ref2, domNode) {\n      var scrollTop = _ref2.scrollTop,\n          scrollLeft = _ref2.scrollLeft,\n          force = _ref2.force,\n          reorder = _ref2.reorder;\n\n      if (scrollTop < 0) {\n        scrollTop = 0;\n      }\n\n      if (!_this.props.rtl) {\n        if (scrollLeft < 0) {\n          scrollLeft = 0;\n        }\n      } else {\n        if (scrollLeft > 0) {\n          scrollLeft = 0;\n        }\n      }\n\n      if (_this.forceScrollTop !== undefined) {\n        scrollTop = _this.forceScrollTop;\n        _this.forceScrollTop = undefined;\n        return;\n      }\n\n      if (_this.props.applyScrollLeft && scrollLeft !== undefined) {\n        scrollLeft = 0;\n\n        _this.props.applyScrollLeft(scrollLeft, domNode);\n      }\n\n      if (scrollTop === undefined) {\n        scrollTop = _this.prevScrollTopPos;\n      }\n\n      if (scrollLeft === undefined) {\n        scrollLeft = _this.prevScrollLeftPos;\n      }\n\n      _this.scrollTopPos = scrollTop;\n      _this.scrollLeftPos = scrollLeft;\n      var _this$props5 = _this.props,\n          count = _this$props5.count,\n          useTransformPosition = _this$props5.useTransformPosition,\n          rowHeightManager = _this$props5.rowHeightManager,\n          naturalRowHeight = _this$props5.naturalRowHeight,\n          virtualized = _this$props5.virtualized,\n          showEmptyRows = _this$props5.showEmptyRows;\n\n      var range = _this.getVisibleRange({\n        scrollTop: scrollTop,\n        size: _this.size,\n        count: count,\n        naturalRowHeight: naturalRowHeight,\n        rowHeightManager: rowHeightManager,\n        showEmptyRows: showEmptyRows\n      });\n\n      var startRowIndex = range.start;\n      var prevStartRowIndex = _this.prevStartRowIndex;\n      _this.prevScrollTopPos = scrollTop;\n      _this.prevScrollLeftPos = scrollLeft;\n      _this.prevStartRowIndex = startRowIndex;\n\n      _this.updateStickyRows(scrollTop, range.start, {\n        force: false\n      });\n\n      var updateScroll = function updateScroll() {\n        var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : scrollTop;\n        var parentNodeStyle = _this.containerNode.parentNode.style;\n        var scrollLeftTranslateValue = -scrollLeft;\n\n        if (useTransformPosition) {\n          parentNodeStyle.transform = \"translate3d(\".concat(scrollLeftTranslateValue, \"px, \").concat(-top, \"px, 0px)\");\n        } else {\n          parentNodeStyle.left = \"\".concat(scrollLeftTranslateValue, \"px\");\n          parentNodeStyle.top = \"\".concat(-top, \"px\");\n        }\n      };\n\n      if (rowHeightManager == null) {\n        force = true;\n      }\n\n      if (startRowIndex == prevStartRowIndex && !force || !virtualized) {\n        updateScroll();\n        return;\n      }\n\n      updateScroll();\n\n      _this.updateRows(range, reorder, emptyFn);\n    };\n\n    _this.getScrollingElement = function () {\n      return _this.scrollContainer;\n    };\n\n    _this.smoothScrollTo = function () {\n      var _this$scrollContainer;\n\n      (_this$scrollContainer = _this.scrollContainer).smoothScrollTo.apply(_this$scrollContainer, arguments);\n    };\n\n    _this.componentDidMount = function () {\n      _this.mounted = true;\n\n      _this.setupRowHeightManager(_this.props.rowHeightManager);\n    };\n\n    _this.fixEdgeScrollPosition = function () {\n      if (!(IS_EDGE || IS_FF)) {\n        return;\n      }\n\n      var maxTop = _this.getTotalRowHeight() - (_this.scrollContainer.viewNode ? _this.scrollContainer.viewNode.offsetHeight : 0);\n\n      if (_this.scrollTop > maxTop) {\n        global.requestAnimationFrame(function () {\n          if (_this.unmounted) {\n            return;\n          }\n\n          _this.scrollTop = maxTop;\n        });\n      }\n    };\n\n    _this.setupRowHeightManager = function (rowHeightManager) {\n      if (rowHeightManager) {\n        rowHeightManager.on('index', _this.onIndex);\n      }\n    };\n\n    _this.onIndex = function () {\n      _this.updateVisibleCount(_this.size.height);\n\n      _this.forceUpdate(function () {\n        if (_this.unmounted) {\n          return;\n        }\n\n        _this.refreshLayout({\n          reorder: false,\n          force: true\n        });\n\n        _this.cleanupRows();\n\n        _this.fixEdgeScrollPosition();\n\n        _this.rows.forEach(function (row) {\n          row.setIndex(row.getIndex(), undefined, undefined, true);\n        });\n      });\n    };\n\n    _this.refreshLayout = function (config) {\n      var defaults = {\n        force: true,\n        reorder: true\n      };\n\n      _this.adjustHeights();\n\n      var options = config ? _objectSpread(_objectSpread({}, defaults), config) : defaults;\n\n      _this.applyScrollStyle(options);\n    };\n\n    _this.getOverlappingHeight = function () {\n      if (_this.scrollContainer && _this.scrollContainer.getBeforeAndAfterHeight) {\n        return _this.scrollContainer.getBeforeAndAfterHeight();\n      }\n\n      return 0;\n    };\n\n    _this.updateVisibleCount = function (height, props) {\n      props = props || _this.props;\n      var _props = props,\n          rowHeightManager = _props.rowHeightManager,\n          minRowHeight = _props.minRowHeight,\n          showEmptyRows = _props.showEmptyRows;\n      var strictVisibleCount = rowHeightManager ? Math.ceil(height / rowHeightManager.getMinHeight()) : Math.ceil(height / (minRowHeight || 1));\n      _this.strictVisibleCount = strictVisibleCount;\n      _this.visibleCount = rowHeightManager ? strictVisibleCount + 1 : strictVisibleCount + 2;\n      var maxCount = props.count;\n\n      if (_this.visibleCount > maxCount && !showEmptyRows) {\n        _this.visibleCount = maxCount;\n      }\n    };\n\n    _this.getGapsFor = function (startRowIndex, endRowIndex, sortedRows) {\n      var visibleRowPositions = {};\n      var enableRowSpan = _this.props.enableRowSpan;\n\n      var rows = sortedRows || _this.getSortedRows();\n\n      rows.forEach(function (row) {\n        if (row.isVisible()) {\n          visibleRowPositions[row.getIndex()] = true;\n        }\n      });\n      var gaps = [];\n\n      if (enableRowSpan && _this.rowCoveredBy[startRowIndex] != null) {\n        startRowIndex = _this.rowCoveredBy[startRowIndex];\n      }\n\n      var alreadyVisible;\n      var coveredBy;\n\n      for (; startRowIndex <= endRowIndex; startRowIndex++) {\n        alreadyVisible = visibleRowPositions[startRowIndex];\n\n        if (enableRowSpan && !alreadyVisible) {\n          coveredBy = _this.rowCoveredBy[startRowIndex];\n\n          if (coveredBy != null) {\n            alreadyVisible = _this.props.recycleCoveredRows;\n          }\n        }\n\n        if (!alreadyVisible) {\n          gaps.push(startRowIndex);\n        }\n      }\n\n      return gaps;\n    };\n\n    _this.getCleanupRows = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var indexes = [];\n      var length = _this.rows.length;\n\n      var visibleCount = _this.getVisibleCount(props);\n\n      for (var i = visibleCount; i < length; i++) {\n        indexes.push(i);\n      }\n\n      return indexes;\n    };\n\n    _this.cleanupRows = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n\n      _this.getCleanupRows(props).forEach(function (i) {\n        var row = _this.rows[i];\n\n        if (row) {\n          delete _this.mapping[row.getIndex()];\n          delete _this.rows[i];\n        }\n      });\n    };\n\n    _this.onResize = function () {\n      var node = _this.getDOMNode();\n\n      if (!node) {\n        return;\n      }\n\n      var size = _this.props.measureSize ? _this.props.measureSize(node) : {\n        width: node.clientWidth,\n        height: node.clientHeight\n      };\n      size.height -= _this.getOverlappingHeight();\n      _this.size = size;\n\n      if (_this.props.scrollProps && typeof _this.props.scrollProps.onResize == 'function') {\n        _this.props.scrollProps.onResize(size);\n      }\n\n      _this.updateVisibleCount(size.height);\n\n      if (_this.props.virtualized) {\n        if (_this.props.showEmptyRows) {\n          _this.initSizes();\n        }\n\n        _this.forceUpdate(function () {\n          if (_this.unmounted) {\n            return;\n          }\n\n          _this.refreshLayout({\n            reorder: false,\n            force: true\n          });\n\n          _this.cleanupRows();\n        });\n      }\n\n      if (_this.props.onResize) {\n        _this.props.onResize(size);\n      }\n    };\n\n    _this.setRowRowSpan = function (rowIndex, rowSpan) {\n      if (rowSpan === 1) {\n        return;\n      }\n\n      _this.rowSpans[rowIndex] = rowSpan;\n      var current = rowIndex + 1;\n      var last = rowIndex + rowSpan - 1;\n\n      for (; current <= last; current++) {\n        _this.rowCoveredBy[current] = rowIndex;\n      }\n    };\n\n    _this.onRowKeyDown = function (index, event) {\n      if (event.key !== 'Tab') {\n        return;\n      }\n\n      if (_this.props.handleRowKeyDown) {\n        _this.props.handleRowKeyDown(index, event);\n\n        return;\n      }\n\n      var activeElement = global.document.activeElement;\n\n      var theRow = _this.getRowAt(index);\n\n      var rowNode = theRow.getDOMNode ? theRow.getDOMNode() : theRow.node;\n\n      if (!activeElement || !(0, _contains.default)(rowNode, activeElement)) {\n        return;\n      }\n\n      var dir = event.shiftKey ? -1 : 1;\n      var nextIndex = index + dir;\n\n      var maxCount = _this.getMaxRenderCount();\n\n      if (nextIndex < 0 || nextIndex >= maxCount) {\n        return;\n      }\n\n      var thisElements = _this.props.getRowFocusableElements ? _this.props.getRowFocusableElements(index, rowNode) : (0, _getFocusableElements.default)(rowNode);\n\n      if (thisElements && thisElements.length) {\n        var limit = dir === -1 ? 0 : thisElements.length - 1;\n\n        if (thisElements[limit] !== activeElement) {\n          return;\n        }\n      }\n\n      if (typeof _this.props.shouldPreventDefaultTabKeyOnRow !== 'function' || _this.props.shouldPreventDefaultTabKeyOnRow(index, event) !== false) {\n        event.preventDefault();\n      }\n\n      _this.focusRow(nextIndex, dir);\n    };\n\n    _this.getMaxRenderCount = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n\n      var visibleCount = _this.getVisibleCount(props);\n\n      var maxCount = props.showEmptyRows ? Math.max(visibleCount || 0, props.count) : Math.max(props.count || 0, 0);\n      return maxCount;\n    };\n\n    _this.focusRow = function (index, dir, callback) {\n      if (index >= _this.getMaxRenderCount() || index < 0) {\n        return;\n      }\n\n      _this.scrollToIndex(index, {\n        direction: dir == 1 ? 'bottom' : 'top'\n      }, function () {\n        var nextRow = _this.getRowAt(index);\n\n        var nextRowNode = nextRow.getDOMNode ? nextRow.getDOMNode() : nextRow.node;\n        var elements = _this.props.getRowFocusableElements ? _this.props.getRowFocusableElements(index, nextRowNode) : (0, _getFocusableElements.default)(nextRowNode);\n\n        if (elements.length) {\n          var focusIndex = dir === -1 ? elements.length - 1 : 0;\n          elements[focusIndex].focus();\n        }\n\n        if (typeof callback == 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.isRowRendered = function (index) {\n      return !!_this.getRowAt(index);\n    };\n\n    _this.getStickyRowsArray = function () {\n      var stickyRows = _this.props.stickyRows;\n      var scaleMap = {};\n      var rows = Object.keys(stickyRows).map(function (key, i) {\n        var scale = +(stickyRows[key] || 1);\n        var row = {\n          index: +key,\n          scale: scale,\n          indexInAllRows: i\n        };\n        scaleMap[scale] = scaleMap[scale] || [];\n        scaleMap[scale].push(row);\n        return row;\n      }).sort(function (a, b) {\n        return sortAsc(a.index, b.index);\n      });\n      var scales = unique(rows.map(function (r) {\n        return r.scale;\n      })).sort(sortAsc);\n      var result = {\n        rows: rows,\n        scales: scales,\n        rowsPerScales: scales.map(function (scale) {\n          return scaleMap[scale];\n        })\n      };\n      return result;\n    };\n\n    _this.currentStickyRows = [];\n\n    _this.updateStickyRows = function () {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.scrollTop;\n      var firstVisibleRowIndex = arguments.length > 1 ? arguments[1] : undefined;\n\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        force: true\n      },\n          force = _ref3.force;\n\n      if (!_this.props.stickyRows) {\n        return;\n      }\n\n      var _this$getStickyRowsAr = _this.getStickyRowsArray(),\n          rowsPerScales = _this$getStickyRowsAr.rowsPerScales,\n          allRows = _this$getStickyRowsAr.rows;\n\n      if (firstVisibleRowIndex === undefined) {\n        firstVisibleRowIndex = _this.getCurrentVisibleRange().start;\n      }\n\n      firstVisibleRowIndex = firstVisibleRowIndex || 0;\n      var enteringRows = [];\n\n      var comparator = function comparator(_ref4, b) {\n        var index = _ref4.index;\n        return sortAsc(index, b);\n      };\n\n      var initialIndex = -1;\n      var currentStickyRows = [];\n      var currentStickyRowsMap = [];\n      var maxStickyRowIndex = -1;\n      var firstFreeVisibleRowIndex = firstVisibleRowIndex;\n      rowsPerScales.forEach(function (rows) {\n        if (!rows.length) {\n          return;\n        }\n\n        var foundIndex = (0, _binarySearch.default)(rows, firstFreeVisibleRowIndex, comparator);\n        var computedFoundIndex = foundIndex;\n        var stickyRow;\n        var stickyRowIndex;\n\n        if (foundIndex < 0) {\n          computedFoundIndex = ~foundIndex - 1;\n        }\n\n        stickyRow = rows[computedFoundIndex];\n\n        if (stickyRow) {\n          stickyRowIndex = stickyRow.index;\n\n          if (stickyRowIndex > initialIndex) {\n            firstFreeVisibleRowIndex++;\n            currentStickyRows.push(stickyRow);\n            currentStickyRowsMap[stickyRowIndex] = true;\n            initialIndex = stickyRowIndex;\n            maxStickyRowIndex = Math.max(maxStickyRowIndex, stickyRowIndex);\n          }\n\n          var nextRow = allRows[stickyRow.indexInAllRows + 1];\n\n          if (nextRow && nextRow.index <= firstFreeVisibleRowIndex) {\n            enteringRows.push(nextRow);\n          }\n        }\n      });\n      enteringRows = enteringRows.filter(function (row) {\n        return !currentStickyRowsMap[row.index] && row.index > maxStickyRowIndex;\n      });\n      var enteringRow = enteringRows[0];\n\n      if (JSON.stringify(_this.currentStickyRows) === JSON.stringify(currentStickyRows) && !force) {\n        _this.stickyRowsContainer.setEnteringRow({\n          enteringRow: enteringRow,\n          scrollTop: scrollTop\n        });\n\n        return;\n      }\n\n      _this.setStickyRows(currentStickyRows, scrollTop, enteringRow);\n    };\n\n    _this.setStickyRows = function () {\n      var currentStickyRows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.currentStickyRows;\n      var scrollTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.scrollTop;\n      var enteringRow = arguments.length > 2 ? arguments[2] : undefined;\n      _this.currentStickyRows = currentStickyRows;\n      var rowElements = currentStickyRows.map(function (row) {\n        return _this.renderStickyRow(row.index);\n      });\n\n      _this.stickyRowsContainer.setStickyRows(rowElements.length ? rowElements : null, currentStickyRows, {\n        enteringRow: enteringRow,\n        scrollTop: scrollTop\n      });\n\n      _this.currentStickyRows = currentStickyRows;\n    };\n\n    _this.renderStickyRow = function (index) {\n      var _this$props6 = _this.props,\n          rowHeight = _this$props6.rowHeight,\n          renderRow = _this$props6.renderRow,\n          count = _this$props6.count,\n          pureRows = _this$props6.pureRows,\n          rowHeightManager = _this$props6.rowHeightManager,\n          showEmptyRows = _this$props6.showEmptyRows,\n          virtualized = _this$props6.virtualized,\n          rowContain = _this$props6.rowContain,\n          naturalRowHeight = _this$props6.naturalRowHeight,\n          useTransformRowPosition = _this$props6.useTransformRowPosition;\n      return (0, _renderRows2.default)({\n        pure: pureRows,\n        renderRow: renderRow,\n        rowHeightManager: rowHeightManager,\n        rowHeight: rowHeight,\n        rowContain: rowContain,\n        count: count,\n        from: index,\n        to: index + 1,\n        naturalRowHeight: naturalRowHeight,\n        sticky: true,\n        useTransformPosition: useTransformRowPosition,\n        virtualized: false\n      })[0];\n    };\n\n    _this.isRowVisible = function (index) {\n      if (!_this.isRowRendered(index)) {\n        return false;\n      }\n\n      var rowHeightManager = _this.props.rowHeightManager;\n      var top = _this.scrollTop;\n      var bottom = top + _this.size.height;\n      var rowTop;\n      var rowBottom;\n\n      if (rowHeightManager) {\n        rowTop = rowHeightManager.getRowOffset(index);\n        rowBottom = rowTop + rowHeightManager.getRowHeight(index);\n      } else {\n        var row = _this.getRowAt(index);\n\n        var info = row.getInfo();\n        rowTop = info.offset;\n        rowBottom = rowTop + info.height;\n      }\n\n      return top <= rowTop && rowBottom <= bottom;\n    };\n\n    _this.getRowVisibilityInfo = function (index, offset) {\n      var rendered = _this.isRowRendered(index);\n\n      var _this$props7 = _this.props,\n          rowHeightManager = _this$props7.rowHeightManager,\n          rowHeight = _this$props7.rowHeight,\n          minRowHeight = _this$props7.minRowHeight;\n      var scrollTop = _this.scrollTop;\n      var top = scrollTop + offset;\n      var bottom = scrollTop + _this.size.height - offset;\n      var rowTop;\n      var rowBottom;\n\n      if (rowHeightManager) {\n        rowTop = rowHeightManager.getRowOffset(index);\n        rowBottom = rowTop + rowHeightManager.getRowHeight(index);\n      } else {\n        var row = _this.getRowAt(index);\n\n        if (row) {\n          var info = row.getInfo();\n          rowTop = info.offset;\n          rowBottom = rowTop + info.height;\n        } else {\n          var indexes = _this.getRenderedIndexes();\n\n          var firstRenderedIndex = indexes[0];\n          var lastRenderedIndex = indexes[indexes.length - 1];\n\n          if (index < firstRenderedIndex) {\n            rowTop = _this.rowOffsets[firstRenderedIndex] - (firstRenderedIndex - index) * minRowHeight;\n          } else if (index > lastRenderedIndex) {\n            rowTop = _this.rowOffsets[lastRenderedIndex] + _this.rowHeights[lastRenderedIndex] + (index - lastRenderedIndex) * minRowHeight;\n          } else {\n            rowTop = _this.rowOffsets[index];\n          }\n\n          rowBottom = rowTop + _this.rowHeights[index];\n        }\n      }\n\n      var visible = top <= rowTop && rowBottom <= bottom;\n      return {\n        rendered: rendered,\n        visible: visible,\n        top: rowTop,\n        bottom: rowBottom,\n        topDiff: rowTop - top,\n        bottomDiff: bottom - rowBottom\n      };\n    };\n\n    _this.getRenderedIndexes = function () {\n      return Object.keys(_this.mapping).map(function (k) {\n        return k * 1;\n      });\n    };\n\n    _this.onRowFocus = function (index, event) {};\n\n    _this.rafSync = function () {\n      if (_this.scrollContainer) {\n        _this.scrollContainer.rafSync();\n      }\n\n      _this.adjustHeights();\n    };\n\n    _this.adjustHeights = function () {\n      if (Array.isArray(_this.rows)) {\n        _this.rows.forEach(function (r) {\n          return r.updateRowHeight();\n        });\n      }\n    };\n\n    _this.checkHeights = function () {\n      var rows = _this.getSortedRows();\n\n      var result = true;\n      rows.forEach(function (row) {\n        if (result !== true) {\n          return;\n        }\n\n        var index = row.getIndex();\n\n        if (row.node.offsetHeight != _this.rowHeights[index]) {\n          console.warn(\"row height mismatch at \".concat(index, \"!\"));\n          result = index;\n        }\n      });\n\n      if (result === true) {\n        _this.rowHeights.reduce(function (acc, height, index) {\n          if (_this.rowOffsets[index] !== acc && result === true && index < _this.props.count) {\n            console.warn(\"row offset mismatch at \".concat(index, \"!\"));\n            result = index;\n          }\n\n          return acc + height;\n        }, 0);\n      }\n\n      return result;\n    };\n\n    _this.initSizes(props);\n\n    _this.visibleCount = undefined;\n    _this.size = {\n      height: 0,\n      width: 0\n    };\n    _this.scrollTopPos = 0;\n    _this.scrollLeftPos = 0;\n    _this.prevScrollLeftPos = 0;\n    _this.prevScrollTopPos = 0;\n    _this.mapping = {};\n    _this.rowSpans = {};\n    _this.rowCoveredBy = {};\n    _this.rows = [];\n\n    _this.refScrollContainer = function (c) {\n      _this.scrollContainer = c;\n    };\n\n    _this.refStickyContainer = function (c) {\n      _this.stickyRowsContainer = c;\n    };\n\n    _this.refContainerNode = function (domNode) {\n      _this.containerNode = domNode;\n    };\n\n    var rafId;\n    _this.updateRows = (0, _lodash.default)(_this.updateRows, 16);\n    return _this;\n  }\n\n  (0, _createClass2.default)(InovuaVirtualList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);\n    }\n  }, {\n    key: \"renderStickyRowsContainer\",\n    value: function renderStickyRowsContainer() {\n      return this.props.stickyRows ? _react.default.createElement(_StickyRowsContainer.default, {\n        rtl: this.props.rtl,\n        stickyOffset: this.props.stickyOffset,\n        handle: this.refStickyContainer,\n        rowHeightManager: this.props.rowHeightManager\n      }) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var naturalRowHeight = props.naturalRowHeight,\n          scrollProps = props.scrollProps,\n          theme = props.theme,\n          minRowHeight = props.minRowHeight,\n          rowHeightManager = props.rowHeightManager,\n          count = props.count;\n\n      var style = _objectSpread({\n        position: 'relative'\n      }, this.props.style);\n\n      var className = (0, _join.default)(props.className, BASE_CLASS_NAME, theme && \"\".concat(BASE_CLASS_NAME, \"--theme-\").concat(theme), \"\".concat(BASE_CLASS_NAME, \"--virtual-scroll\"));\n      var scrollHeight = rowHeightManager ? rowHeightManager.getTotalSize(count) : this.scrollHeight || minRowHeight * count;\n      var rowContainer = this.renderRowContainer();\n      var sizer = this.renderSizer(scrollHeight);\n      var stickyRowsContainer = this.renderStickyRowsContainer();\n      var children;\n\n      if ((0, _src.hasSticky)()) {\n        children = _react.default.Fragment ? _react.default.createElement(_react.default.Fragment, null, rowContainer, sizer) : [rowContainer, sizer];\n      } else {\n        children = _react.default.createElement(\"div\", null, rowContainer, sizer);\n      }\n\n      var Factory = this.props.nativeScroll ? _src.NativeScrollContainer : _src.default;\n      var renderScrollerSpacer;\n\n      if (naturalRowHeight) {\n        renderScrollerSpacer = this.renderScrollerSpacerOnNaturalRowHeight;\n      }\n\n      return _react.default.createElement(Factory, Object.assign({\n        contain: this.props.contain,\n        ResizeObserver: this.props.ResizeObserver !== undefined ? this.props.ResizeObserver : ResizeObserver,\n        extraChildren: stickyRowsContainer,\n        useTransformToScroll: this.props.useTransformPosition\n      }, (0, _reactCleanProps.default)(props, InovuaVirtualList.propTypes), scrollProps, {\n        rtl: this.props.rtl,\n        nativeScroll: this.props.nativeScroll,\n        ref: this.refScrollContainer,\n        onScrollbarsChange: this.onScrollbarsChange,\n        style: style,\n        theme: theme,\n        className: className,\n        onScrollStart: this.onScrollStart,\n        onScrollStop: this.onScrollStop,\n        applyScrollStyle: this.applyScrollStyle,\n        onResize: this.onResize,\n        onViewResize: this.onViewResize,\n        renderScroller: this.renderScroller,\n        renderScrollerSpacer: renderScrollerSpacer,\n        renderView: this.renderView,\n        getClientSize: this.getClientSize,\n        getScrollSize: this.getScrollSize,\n        children: children\n      }));\n    }\n  }, {\n    key: \"updateRows\",\n    value: function updateRows(range, reorder, updateScroll) {\n      var _this2 = this;\n\n      var rowHeightManager = this.props.rowHeightManager;\n      var startRowIndex = range.start;\n      var endRowIndex = range.end;\n\n      if (this.props.onRenderRangeChange) {\n        this.props.onRenderRangeChange(startRowIndex, endRowIndex);\n      }\n\n      var rows = this.getSortedRows();\n      var gaps = this.getGapsFor(startRowIndex, endRowIndex, rows);\n      var newIndexes = [];\n      var _this$props8 = this.props,\n          recycleCoveredRows = _this$props8.recycleCoveredRows,\n          enableRowSpan = _this$props8.enableRowSpan;\n      var visited = {};\n      rows.forEach(function (row, i) {\n        var rowIndex = row.getIndex();\n\n        if (reorder) {\n          var newRowIndex = startRowIndex + i;\n\n          _this2.setRowIndex(row, newRowIndex);\n\n          if (rowHeightManager == null) {\n            newIndexes.push(newRowIndex);\n          }\n\n          return;\n        }\n\n        var extraRows = enableRowSpan ? row.getRowSpan() - 1 : 0;\n        var outOfView = rowIndex + extraRows < startRowIndex || rowIndex > endRowIndex || visited[rowIndex] || enableRowSpan && recycleCoveredRows && _this2.rowCoveredBy[rowIndex] !== undefined;\n        visited[rowIndex] = true;\n\n        if (rowHeightManager == null) {\n          if (outOfView) {\n            if (gaps.length) {\n              var newIndex = gaps.pop();\n              newIndexes.push(newIndex);\n\n              _this2.setRowIndex(row, newIndex);\n            } else {\n              row.setVisible(false);\n            }\n          } else {\n            row.setVisible(true);\n            newIndexes.push(row.getIndex());\n          }\n\n          return;\n        }\n\n        if (outOfView && gaps.length) {\n          var _newIndex = gaps.pop();\n\n          _this2.setRowIndex(row, _newIndex);\n        }\n      });\n\n      if (newIndexes.length && rowHeightManager == null) {\n        if (this.updateRafHandle) {\n          global.cancelAnimationFrame(this.updateRafHandle);\n        }\n\n        this.updateRafHandle = global.requestAnimationFrame(function () {\n          _this2.updateRafHandle = null;\n\n          _this2.onRowsUpdated(newIndexes, {\n            start: startRowIndex,\n            end: endRowIndex\n          }, function () {});\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.rowHeightManager) {\n        this.props.rowHeightManager.removeListener('index', this.onIndex);\n      }\n\n      this.mounted = false;\n      this.unmounted = true;\n      this.rows = null;\n      this.rowHeights = null;\n      this.rowOffsets = null;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var nextCount = Math.max(nextProps.count, 0);\n      var rowHeightChange = this.props.rowHeight && nextProps.rowHeight != this.props.rowHeight;\n\n      if (this.props.renderRow !== nextProps.renderRow) {\n        this.rowCoveredBy = {};\n        this.rowSpans = {};\n      }\n\n      if (nextCount != this.props.count || nextProps.showEmptyRows != this.props.showEmptyRows || rowHeightChange) {\n        var oldVisibleCount = this.getVisibleCount();\n        this.updateVisibleCount(this.size.height, nextProps);\n        this.cleanupRows(nextProps);\n        this.reorder = rowHeightChange || this.getVisibleCount(nextProps) < oldVisibleCount;\n        this.initSizes(nextProps);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      var prevScrollTopPos;\n      var prevScrollLeftPos;\n\n      if (this.props.nativeScroll !== prevProps.nativeScroll) {\n        prevScrollTopPos = this.scrollTopPos;\n        prevScrollLeftPos = this.scrollLeftPos;\n        global.requestAnimationFrame(function () {\n          if (_this3.unmounted) {\n            return;\n          }\n\n          _this3.scrollTop = prevScrollTopPos;\n          _this3.scrollLeft = prevScrollLeftPos;\n        });\n      }\n\n      if (this.props.rowHeightManager !== prevProps.rowHeightManager) {\n        if (prevProps.rowHeightManager) {\n          prevProps.rowHeightManager.removeListener('index', this.onIndex);\n        }\n\n        this.setupRowHeightManager(this.props.rowHeightManager);\n      }\n\n      if (this.props.count != prevProps.count || this.props.renderRow != prevProps.renderRow || this.props.rowHeightManager != prevProps.rowHeightManager || this.props.rowHeightManager == null || this.props.showEmptyRows != prevProps.showEmptyRows) {\n        var refreshConfig = {\n          reorder: this.reorder\n        };\n\n        if (prevScrollTopPos !== undefined) {\n          refreshConfig.scrollTop = prevScrollTopPos;\n          refreshConfig.scrollLeft = prevScrollLeftPos;\n        }\n\n        if (this.props.count <= this.visibleCount) {\n          refreshConfig.scrollTop = 0;\n        }\n\n        if ((IS_EDGE || IS_FF) && this.props.count < prevProps.count) {\n          this.fixEdgeScrollPosition();\n        }\n\n        this.reorder = false;\n        this.refreshLayout(refreshConfig);\n      }\n\n      if (prevProps.stickyRows !== this.props.stickyRows) {\n        this.updateStickyRows(undefined, undefined, {\n          force: true\n        });\n      }\n    }\n  }, {\n    key: \"getDOMNode\",\n    value: function getDOMNode() {\n      return this.scrollContainer ? this.scrollContainer.domNode || this.scrollContainer.getDOMNode() : null;\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var props = this.props;\n      var rowHeight = props.rowHeight,\n          renderRow = props.renderRow,\n          count = props.count,\n          pureRows = props.pureRows,\n          rowHeightManager = props.rowHeightManager,\n          showEmptyRows = props.showEmptyRows,\n          virtualized = props.virtualized,\n          rowContain = props.rowContain,\n          naturalRowHeight = props.naturalRowHeight,\n          useTransformRowPosition = props.useTransformRowPosition;\n      var to = this.getVisibleCount();\n      return (0, _renderRows2.default)({\n        ref: this.rowRef,\n        onUnmount: this.onRowUnmount,\n        notifyRowSpan: this.setRowRowSpan,\n        pure: pureRows,\n        renderRow: renderRow,\n        rowHeightManager: rowHeightManager,\n        rowHeight: rowHeight,\n        rowContain: rowContain,\n        count: count,\n        from: 0,\n        to: to,\n        naturalRowHeight: naturalRowHeight,\n        onKeyDown: this.onRowKeyDown,\n        onFocus: this.onRowFocus,\n        useTransformPosition: useTransformRowPosition,\n        showEmptyRows: showEmptyRows,\n        virtualized: virtualized\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(index) {\n      var _this4 = this;\n\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n          direction = _ref5.direction,\n          force = _ref5.force,\n          _ref5$duration = _ref5.duration,\n          duration = _ref5$duration === void 0 ? 0 : _ref5$duration,\n          _ref5$offset = _ref5.offset,\n          offset = _ref5$offset === void 0 ? 0 : _ref5$offset;\n\n      var callback = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (direction) {\n        if (direction != 'top' && direction != 'bottom') {\n          direction = null;\n        }\n      }\n\n      if (force && !direction) {\n        force = false;\n      }\n\n      if (index < 0 || index >= this.getMaxRenderCount()) {\n        return;\n      }\n\n      if (typeof callback != 'function') {\n        callback = emptyFn;\n      }\n\n      var info = this.getRowVisibilityInfo(index, offset);\n\n      if (!info.rendered) {\n        var rowHeight = this.props.rowHeight;\n\n        if (!direction) {\n          var existingIndex = this.rows[0].getIndex();\n          direction = index > existingIndex ? 'bottom' : 'top';\n        }\n\n        var newScrollTop = direction === 'top' ? info.top - offset : this.scrollTop - info.bottomDiff + offset;\n\n        var afterScroll = function afterScroll() {\n          if (!rowHeight) {\n            setTimeout(function () {\n              global.requestAnimationFrame(function () {\n                _this4.scrollToIndex(index, {\n                  direction: direction,\n                  force: force,\n                  duration: duration ? 100 : 0\n                }, callback);\n              });\n            });\n          } else {\n            callback();\n          }\n        };\n\n        if (duration) {\n          this.smoothScrollTo(newScrollTop, {\n            duration: duration\n          }, afterScroll);\n        } else {\n          this.scrollTop = newScrollTop;\n          afterScroll();\n        }\n\n        return;\n      }\n\n      var visible = info.visible;\n\n      if (!visible) {\n        if (!direction) {\n          direction = info.topDiff < 0 ? 'top' : 'bottom';\n          force = true;\n        }\n      }\n\n      if (!visible || direction && force) {\n        var _newScrollTop;\n\n        if (direction == 'top' || info.topDiff < 0) {\n          _newScrollTop = this.scrollTop + info.topDiff - offset;\n        } else if (direction == 'bottom' || info.bottomDiff < 0) {\n          _newScrollTop = this.scrollTop - info.bottomDiff + offset;\n        }\n\n        if (_newScrollTop != null) {\n          if (duration) {\n            this.smoothScrollTo(_newScrollTop, {\n              duration: duration\n            }, callback);\n            return;\n          }\n\n          this.scrollTop = _newScrollTop;\n        }\n      }\n\n      callback();\n    }\n  }, {\n    key: \"getEmptyScrollOffset\",\n    value: function getEmptyScrollOffset() {\n      if (this.props.emptyScrollOffset != null) {\n        return this.props.emptyScrollOffset;\n      }\n\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      return this.props.emptyScrollOffset || SCROLLBAR_WIDTH || 17;\n    }\n  }, {\n    key: \"scrollTopMax\",\n    get: function get() {\n      return this.mounted ? this.scrollContainer.scrollTopMax : 0;\n    }\n  }, {\n    key: \"scrollLeftMax\",\n    get: function get() {\n      return this.mounted ? this.scrollContainer.scrollLeftMax : 0;\n    }\n  }, {\n    key: \"scrollTop\",\n    get: function get() {\n      return this.mounted ? this.getScrollingElement().scrollTop : 0;\n    },\n    set: function set(value) {\n      var element = this.getScrollingElement();\n\n      if (element) {\n        element.scrollTop = value;\n      }\n    }\n  }, {\n    key: \"scrollLeft\",\n    get: function get() {\n      return this.mounted ? this.getScrollingElement().scrollLeft : 0;\n    },\n    set: function set(value) {\n      var element = this.getScrollingElement();\n\n      if (element) {\n        element.scrollLeft = value;\n      }\n    }\n  }]);\n  return InovuaVirtualList;\n}(_react.Component);\n\nexports.default = InovuaVirtualList;\nInovuaVirtualList.defaultProps = {\n  minRowHeight: 20,\n  nativeScroll: false,\n  shouldAllowScrollbars: function shouldAllowScrollbars() {\n    return true;\n  },\n  rafOnResize: false,\n  theme: 'default',\n  showEmptyRows: false,\n  showWarnings: !_uglified.default,\n  virtualized: true,\n  scrollOneDirectionOnly: false,\n  useTransformPosition: !IS_EDGE && (0, _src.hasSticky)(),\n  useTransformRowPosition: false,\n  recycleCoveredRows: true,\n  scrollProps: {}\n};\nvar propTypes = {\n  applyScrollLeft: _propTypes.default.func,\n  naturalRowHeight: _propTypes.default.bool,\n  count: function count(props) {\n    var count = props.count;\n\n    if (count == null) {\n      throw new Error(\"\\\"count\\\" is required!\");\n    }\n\n    if (typeof count != 'number') {\n      throw new Error(\"\\\"count\\\" should be a number!\");\n    }\n\n    if (count < 0) {\n      throw new Error(\"\\\"count\\\" should be >= 0!\");\n    }\n  },\n  getRowFocusableElements: _propTypes.default.func,\n  contain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n  rowContain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n  handleRowKeyDown: _propTypes.default.func,\n  rafOnResize: _propTypes.default.bool,\n  checkResizeDelay: _propTypes.default.number,\n  measureSize: _propTypes.default.func,\n  minRowHeight: _propTypes.default.number,\n  minRowWidth: _propTypes.default.number,\n  nativeScroll: _propTypes.default.bool,\n  onRenderRangeChange: _propTypes.default.func,\n  shouldFocusNextRow: _propTypes.default.func,\n  onResize: _propTypes.default.func,\n  onScrollStart: _propTypes.default.func,\n  onScrollbarsChange: _propTypes.default.func,\n  onScrollStop: _propTypes.default.func,\n  pureRows: _propTypes.default.bool,\n  rowHeight: _propTypes.default.number,\n  renderRow: _propTypes.default.func.isRequired,\n  renderRowContainer: _propTypes.default.func,\n  renderSizer: _propTypes.default.func,\n  showEmptyRows: _propTypes.default.bool,\n  useTransformPosition: _propTypes.default.bool,\n  useTransformRowPosition: _propTypes.default.bool,\n  scrollProps: _propTypes.default.object,\n  showWarnings: _propTypes.default.bool,\n  renderView: _propTypes.default.func,\n  renderScroller: _propTypes.default.func,\n  shouldComponentUpdate: _propTypes.default.func,\n  shouldPreventDefaultTabKeyOnRow: _propTypes.default.func,\n  theme: _propTypes.default.string,\n  overscrollBehavior: _propTypes.default.string,\n  virtualized: _propTypes.default.bool,\n  scrollOneDirectionOnly: _propTypes.default.bool,\n  stickyRows: _propTypes.default.object,\n  recycleCoveredRows: _propTypes.default.bool,\n  stickyOffset: _propTypes.default.number,\n  enableRowSpan: _propTypes.default.bool,\n  rowHeightManager: function rowHeightManager(props, propName) {\n    var value = props[propName];\n\n    if (!value) {\n      return new Error(\"\\nYou have to provide a \\\"rowHeightManager\\\" property, which should be an instance of RowHeightManager.\\n\");\n    }\n\n    if (!(value instanceof _RowHeightManager.default)) {\n      return new Error('The \"rowHeightManager\" property should be an instance of RowHeightManager!');\n    }\n  }\n};\nexports.propTypes = propTypes;\nInovuaVirtualList.propTypes = propTypes;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","enumerable","get","_src","getScrollbarWidth","_RowHeightManager","default","_shouldComponentUpdate2","propTypes","_defineProperty2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_toConsumableArray2","_react","_propTypes","_contains","_reactCleanProps","_resizeObserverPolyfill","_uglified","_join","_binarySearch","_getFocusableElements","_renderRows2","_getVisibleRange","_StickyRowsContainer","_lodash","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","sortAsc","a","b","emptyFn","emptyObject","freeze","ua","global","navigator","userAgent","IS_EDGE","indexOf","IS_FF","toLowerCase","BASE_CLASS_NAME","ResizeObserver","sum","unique","arr","Set","reduce","acc","item","InovuaVirtualList","_Component","_super","props","_this","renderScroller","offset","getEmptyScrollOffset","nativeScroll","style","overscrollBehavior","backfaceVisibility","WebkitOverscrollBehavior","right","bottom","overflowY","showEmptyRows","count","strictVisibleCount","undefined","createElement","assign","renderScrollerSpacerOnNaturalRowHeight","spacerProps","height","getScrollHeight","renderView","minHeight","concat","maxWidth","rtl","transform","viewProps","getTotalRowHeight","rowHeightManager","getTotalSize","rowHeight","SCROLLBAR_WIDTH","getScrollSize","node","res","width","scrollWidth","getClientSize","n","firstChild","clientWidth","clientHeight","initSizes","minRowHeight","getMaxRenderCount","rowOffsets","totalHeight","rowHeights","Array","map","setHeightForRows","indexes","heights","showWarnings","console","warn","_","_diff","_assertThisInitialize","diff","index","oldHeight","renderSizer","scrollHeight","_this$props","minRowWidth","emptyScrollOffset","Math","max","getDefaultRowHeight","isNaN","minWidth","renderRowContainer","className","ref","refContainerNode","children","renderRows","onViewResize","requestAnimationFrame","rafSync","onScrollbarsChange","_ref","vertical","horizontal","scrollTopPos","scrollLeftPos","applyScrollStyle","scrollTop","scrollLeft","onRowUnmount","row","rows","currentRowIndex","getIndex","isFound","mapping","splice","rowRef","r","onScrollStart","scrolling","_len","args","_key","scrollOneDirectionOnly","scrollPos","prevScrollPos","absTop","abs","absLeft","scrollerNode","getScrollerNode","disableScrollPropName","disableScrollOtherPropName","disableScrollPropValue","_this$props2","scrollContainer","onScrollStop","overflow","_this$props3","getRows","forEachRow","fn","onlyVisible","visibleCount","getVisibleCount","initialIndex","hasOwnProperty","sortRows","slice","sort","row1","row2","getRowAt","virtualized","enableRowSpan","extraRows","min","setRowIndex","callback","existingRow","setIndex","setVisible","oldIndex","getSortedRows","onRowsUpdated","newIndexes","range","updateScroll","i1","i2","start","end","rowIndexes","getInfo","newToTopHeight","oldTop","oldRowIndexes","rowIndex","setOffset","newScrollTop","forceScrollTop","getVisibleRange","getCurrentVisibleRange","_this$props4","naturalRowHeight","size","_ref2","domNode","force","reorder","applyScrollLeft","prevScrollTopPos","prevScrollLeftPos","_this$props5","useTransformPosition","startRowIndex","prevStartRowIndex","updateStickyRows","top","parentNodeStyle","containerNode","parentNode","scrollLeftTranslateValue","left","updateRows","getScrollingElement","smoothScrollTo","_this$scrollContainer","componentDidMount","mounted","setupRowHeightManager","fixEdgeScrollPosition","maxTop","viewNode","offsetHeight","unmounted","on","onIndex","updateVisibleCount","forceUpdate","refreshLayout","cleanupRows","config","defaults","adjustHeights","options","getOverlappingHeight","getBeforeAndAfterHeight","_props","ceil","getMinHeight","maxCount","getGapsFor","endRowIndex","sortedRows","visibleRowPositions","isVisible","gaps","rowCoveredBy","alreadyVisible","coveredBy","recycleCoveredRows","getCleanupRows","onResize","getDOMNode","measureSize","scrollProps","setRowRowSpan","rowSpan","rowSpans","current","last","onRowKeyDown","event","handleRowKeyDown","activeElement","document","theRow","rowNode","dir","shiftKey","nextIndex","thisElements","getRowFocusableElements","limit","shouldPreventDefaultTabKeyOnRow","preventDefault","focusRow","scrollToIndex","direction","nextRow","nextRowNode","elements","focusIndex","focus","isRowRendered","getStickyRowsArray","stickyRows","scaleMap","scale","indexInAllRows","scales","rowsPerScales","currentStickyRows","firstVisibleRowIndex","_ref3","_this$getStickyRowsAr","allRows","enteringRows","comparator","_ref4","currentStickyRowsMap","maxStickyRowIndex","firstFreeVisibleRowIndex","foundIndex","computedFoundIndex","stickyRow","stickyRowIndex","enteringRow","JSON","stringify","stickyRowsContainer","setEnteringRow","setStickyRows","rowElements","renderStickyRow","_this$props6","renderRow","pureRows","rowContain","useTransformRowPosition","pure","from","to","sticky","isRowVisible","rowTop","rowBottom","getRowOffset","getRowHeight","info","getRowVisibilityInfo","rendered","_this$props7","getRenderedIndexes","firstRenderedIndex","lastRenderedIndex","visible","topDiff","bottomDiff","k","onRowFocus","isArray","updateRowHeight","checkHeights","refScrollContainer","c","refStickyContainer","rafId","shouldComponentUpdate","nextProps","nextState","renderStickyRowsContainer","stickyOffset","handle","render","theme","position","rowContainer","sizer","hasSticky","Fragment","Factory","NativeScrollContainer","renderScrollerSpacer","contain","extraChildren","useTransformToScroll","_this2","onRenderRangeChange","_this$props8","visited","newRowIndex","getRowSpan","outOfView","newIndex","pop","_newIndex","updateRafHandle","cancelAnimationFrame","componentWillUnmount","removeListener","UNSAFE_componentWillReceiveProps","nextCount","rowHeightChange","oldVisibleCount","componentDidUpdate","prevProps","_this3","refreshConfig","onUnmount","notifyRowSpan","onKeyDown","onFocus","_this4","_ref5","_ref5$duration","duration","_ref5$offset","existingIndex","afterScroll","setTimeout","_newScrollTop","scrollTopMax","scrollLeftMax","set","element","Component","defaultProps","shouldAllowScrollbars","rafOnResize","func","bool","Error","oneOfType","string","checkResizeDelay","number","shouldFocusNextRow","isRequired","propName"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getScrollbarWidth\", {\n  enumerable: true,\n  get: function get() {\n    return _src.getScrollbarWidth;\n  }\n});\nObject.defineProperty(exports, \"RowHeightManager\", {\n  enumerable: true,\n  get: function get() {\n    return _RowHeightManager.default;\n  }\n});\nObject.defineProperty(exports, \"shouldComponentUpdate\", {\n  enumerable: true,\n  get: function get() {\n    return _shouldComponentUpdate2.default;\n  }\n});\nexports.propTypes = exports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _contains = _interopRequireDefault(require(\"../../../packages/contains\"));\n\nvar _reactCleanProps = _interopRequireDefault(require(\"../../../packages/react-clean-props\"));\n\nvar _resizeObserverPolyfill = _interopRequireDefault(require(\"resize-observer-polyfill\"));\n\nvar _src = _interopRequireWildcard(require(\"../../../packages/react-virtual-scroll-container-pro/src\"));\n\nvar _uglified = _interopRequireDefault(require(\"../../../packages/uglified\"));\n\nvar _join = _interopRequireDefault(require(\"../../../packages/join\"));\n\nvar _binarySearch = _interopRequireDefault(require(\"../../../packages/binary-search\"));\n\nvar _RowHeightManager = _interopRequireDefault(require(\"./RowHeightManager\"));\n\nvar _getFocusableElements = _interopRequireDefault(require(\"../../getFocusableElements\"));\n\nvar _renderRows2 = _interopRequireDefault(require(\"./renderRows\"));\n\nvar _shouldComponentUpdate2 = _interopRequireDefault(require(\"../../../packages/shouldComponentUpdate\"));\n\nvar _getVisibleRange = _interopRequireDefault(require(\"./getVisibleRange\"));\n\nvar _StickyRowsContainer = _interopRequireDefault(require(\"./StickyRowsContainer\"));\n\nvar _lodash = _interopRequireDefault(require(\"lodash.throttle\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar emptyFn = function emptyFn() {};\n\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar ua = global.navigator ? global.navigator.userAgent : '';\nvar IS_EDGE = ua.indexOf('Edge/') !== -1;\nvar IS_FF = ua.toLowerCase().indexOf('firefox') > -1;\nvar BASE_CLASS_NAME = 'inovua-react-virtual-list';\nvar ResizeObserver = global.ResizeObserver || _resizeObserverPolyfill.default;\n\nvar sum = function sum(a, b) {\n  return a + b;\n};\n\nvar unique = function unique(arr) {\n  if (Set) {\n    return (0, _toConsumableArray2.default)(new Set(arr));\n  }\n\n  return Object.keys(arr.reduce(function (acc, item) {\n    acc[item] = true;\n    return acc;\n  }, {}));\n};\n\nvar InovuaVirtualList = function (_Component) {\n  (0, _inherits2.default)(InovuaVirtualList, _Component);\n\n  var _super = _createSuper(InovuaVirtualList);\n\n  function InovuaVirtualList(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, InovuaVirtualList);\n    _this = _super.call(this, props);\n\n    _this.renderScroller = function (props) {\n      var offset = _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      var style = _objectSpread(_objectSpread({}, props.style), {}, {\n        overscrollBehavior: _this.props.overscrollBehavior || 'none',\n        backfaceVisibility: 'hidden',\n        WebkitOverscrollBehavior: _this.props.overscrollBehavior || 'none',\n        right: -offset,\n        bottom: -offset\n      });\n\n      props.style = style;\n      style.overflowY = '';\n\n      if (_this.props.showEmptyRows && _this.props.count < _this.strictVisibleCount) {\n        style.overflowY = 'hidden';\n      }\n\n      var result;\n\n      if (_this.props.renderScroller) {\n        result = _this.props.renderScroller(props);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", Object.assign({}, props));\n      }\n\n      return result;\n    };\n\n    _this.renderScrollerSpacerOnNaturalRowHeight = function (spacerProps) {\n      spacerProps.style.height = _this.getScrollHeight();\n    };\n\n    _this.renderView = function (props) {\n      var offset = _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      var minHeight = offset ? \"calc(100% - \".concat(offset, \"px)\") : '100%';\n      var maxWidth = offset ? \"calc(100% - \".concat(offset, \"px)\") : '100%';\n\n      if (_this.props.rtl && !_this.props.nativeScroll) {\n        maxWidth = '100%';\n      }\n\n      var style = _objectSpread(_objectSpread({}, props.style), {}, {\n        minHeight: minHeight,\n        maxWidth: maxWidth\n      });\n\n      if (_this.props.rtl && !(0, _src.getScrollbarWidth)()) {\n        style.transform = \"translateX(\".concat(-offset, \"px)\");\n      }\n\n      var viewProps = _objectSpread(_objectSpread({}, props), {}, {\n        style: style,\n        'data-name': 'view'\n      });\n\n      var result;\n\n      if (_this.props.renderView) {\n        result = _this.props.renderView(viewProps);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", Object.assign({}, viewProps));\n      }\n\n      return result;\n    };\n\n    _this.getTotalRowHeight = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      return props.rowHeightManager ? props.rowHeightManager.getTotalSize(props.count) : props.count * props.rowHeight;\n    };\n\n    _this.getScrollHeight = function () {\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      var offset = SCROLLBAR_WIDTH ? 0 : _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      var height = _this.getTotalRowHeight();\n\n      return height + offset;\n    };\n\n    _this.getScrollSize = function (node) {\n      var res = {\n        width: node.scrollWidth,\n        height: _this.getScrollHeight()\n      };\n      return res;\n    };\n\n    _this.getClientSize = function (n) {\n      var node = n.firstChild;\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      var offset = SCROLLBAR_WIDTH ? 0 : _this.getEmptyScrollOffset() || 0;\n\n      if (_this.props.nativeScroll) {\n        offset = 0;\n      }\n\n      return {\n        width: node.clientWidth + offset,\n        height: node.clientHeight + offset\n      };\n    };\n\n    _this.initSizes = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var minRowHeight = props.minRowHeight,\n          rowHeightManager = props.rowHeightManager;\n\n      if (rowHeightManager) {\n        return;\n      }\n\n      var count = _this.getMaxRenderCount(props);\n\n      var rowOffsets = [];\n      var totalHeight = 0;\n      var rowHeights = (0, _toConsumableArray2.default)(Array(count)).map(function () {\n        rowOffsets.push(totalHeight);\n        totalHeight += minRowHeight;\n        return minRowHeight;\n      });\n      rowOffsets[count] = totalHeight;\n      _this.rowOffsets = rowOffsets;\n      _this.rowHeights = rowHeights;\n    };\n\n    _this.setHeightForRows = function (indexes, heights) {\n      if (!indexes.length || !heights.length) {\n        return 0;\n      }\n\n      if (_this.props.showWarnings) {\n        if (indexes.length != heights.length) {\n          console.warn('setHeightForRows signature mismatch!!!');\n          return 0;\n        }\n\n        indexes.forEach(function (_, i) {\n          if (i > 0) {\n            var _diff = indexes[i] - indexes[i - 1];\n\n            if (_diff !== 1) {\n              console.warn('setHeightForRows should be called with successive indexes!', indexes);\n            }\n          }\n        });\n      }\n\n      var _assertThisInitialize = (0, _assertThisInitialized2.default)(_this),\n          rowHeights = _assertThisInitialize.rowHeights,\n          rowOffsets = _assertThisInitialize.rowOffsets;\n\n      var count = _this.props.count;\n      var diff = 0;\n      indexes.forEach(function (index, i) {\n        var height = heights[i] || 0;\n        var oldHeight = rowHeights[index] || 0;\n        rowHeights[index] = height;\n        rowOffsets[index] = diff + (rowOffsets[index] || 0);\n        diff += height - oldHeight;\n      });\n\n      for (var i = indexes[indexes.length - 1] + 1; i <= count; i++) {\n        rowOffsets[i] = diff + (rowOffsets[i] || 0);\n      }\n\n      return diff;\n    };\n\n    _this.renderSizer = function (scrollHeight) {\n      var _this$props = _this.props,\n          renderSizer = _this$props.renderSizer,\n          minRowWidth = _this$props.minRowWidth,\n          emptyScrollOffset = _this$props.emptyScrollOffset,\n          rowHeightManager = _this$props.rowHeightManager,\n          showEmptyRows = _this$props.showEmptyRows;\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      var offset = SCROLLBAR_WIDTH ? 0 : emptyScrollOffset || 0;\n      var minHeight = scrollHeight + offset;\n\n      if (showEmptyRows) {\n        minHeight = Math.max(minHeight, _this.strictVisibleCount * rowHeightManager.getDefaultRowHeight());\n      }\n\n      var style = {\n        minHeight: isNaN(minHeight) ? '' : minHeight,\n        minWidth: minRowWidth ? minRowWidth + offset : 0\n      };\n      var result;\n\n      if (renderSizer) {\n        result = renderSizer({\n          style: style\n        }, scrollHeight);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", {\n          key: \"sizer\",\n          \"data-name\": \"sizer\",\n          style: style\n        });\n      }\n\n      return result;\n    };\n\n    _this.renderRowContainer = function () {\n      var props = {\n        key: 'rowContainer',\n        className: \"\".concat(BASE_CLASS_NAME, \"__row-container\"),\n        ref: _this.refContainerNode,\n        children: _this.renderRows()\n      };\n      var result;\n\n      if (_this.props.renderRowContainer) {\n        result = _this.props.renderRowContainer(props);\n      }\n\n      if (result === undefined) {\n        result = _react.default.createElement(\"div\", Object.assign({}, props));\n      }\n\n      return result;\n    };\n\n    _this.onViewResize = function () {\n      requestAnimationFrame(function () {\n        _this.rafSync();\n      });\n    };\n\n    _this.onScrollbarsChange = function (_ref) {\n      var vertical = _ref.vertical,\n          horizontal = _ref.horizontal;\n\n      if (!vertical && _this.scrollTopPos || !horizontal && _this.scrollLeftPos) {\n        _this.applyScrollStyle({\n          scrollTop: !vertical ? 0 : _this.scrollTopPos,\n          scrollLeft: !horizontal ? 0 : _this.scrollLeftPos\n        });\n      }\n\n      if (_this.props.onScrollbarsChange) {\n        _this.props.onScrollbarsChange({\n          vertical: vertical,\n          horizontal: horizontal\n        });\n      }\n    };\n\n    _this.onRowUnmount = function (row) {\n      if (!_this.rows) {\n        return;\n      }\n\n      var currentRowIndex = row.getIndex();\n      var isFound = _this.mapping[currentRowIndex];\n\n      if (!isFound) {\n        return;\n      }\n\n      delete _this.mapping[currentRowIndex];\n\n      var index = _this.rows.indexOf(row);\n\n      if (index != -1) {\n        _this.rows.splice(index, 1);\n      }\n    };\n\n    _this.rowRef = function (r) {\n      if (!r) {\n        return;\n      }\n\n      _this.mapping[r.props.index] = r;\n      _this.rows[r.props.index] = r;\n    };\n\n    _this.onScrollStart = function () {\n      _this.scrolling = true;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      if (_this.props.scrollOneDirectionOnly) {\n        var scrollPos = args[0],\n            prevScrollPos = args[1];\n        var absTop = Math.abs(scrollPos.scrollTop - prevScrollPos.scrollTop);\n        var absLeft = Math.abs(scrollPos.scrollLeft - prevScrollPos.scrollLeft);\n\n        var scrollerNode = _this.getScrollerNode();\n\n        if (absTop != absLeft) {\n          _this.disableScrollPropName = absTop > absLeft ? 'overflowX' : 'overflowY';\n          _this.disableScrollOtherPropName = absTop > absLeft ? 'overflowY' : 'overflowX';\n          _this.disableScrollPropValue = scrollerNode.style[_this.disableScrollPropName];\n          scrollerNode.style[_this.disableScrollOtherPropName] = 'scroll';\n          scrollerNode.style[_this.disableScrollPropName] = 'hidden';\n        }\n      }\n\n      if (_this.props.onScrollStart) {\n        var _this$props2;\n\n        (_this$props2 = _this.props).onScrollStart.apply(_this$props2, args);\n      }\n    };\n\n    _this.getScrollerNode = function () {\n      return _this.scrollContainer.scrollerNode;\n    };\n\n    _this.onScrollStop = function () {\n      _this.scrolling = false;\n\n      if (_this.props.scrollOneDirectionOnly) {\n        var scrollerNode = _this.getScrollerNode();\n\n        scrollerNode.style[_this.disableScrollPropName] = _this.disableScrollPropValue;\n        scrollerNode.style.overflow = 'scroll';\n      }\n\n      if (_this.props.onScrollStop) {\n        var _this$props3;\n\n        (_this$props3 = _this.props).onScrollStop.apply(_this$props3, arguments);\n      }\n    };\n\n    _this.getRows = function () {\n      var rows = [];\n\n      _this.forEachRow(function (row) {\n        if (row) {\n          rows.push(row);\n        }\n      });\n\n      return rows;\n    };\n\n    _this.forEachRow = function (fn) {\n      var onlyVisible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var rows = _this.rows;\n\n      var visibleCount = _this.getVisibleCount();\n\n      var i = -1;\n\n      for (var initialIndex in rows) {\n        if (rows.hasOwnProperty(initialIndex) && (!onlyVisible || onlyVisible && initialIndex < visibleCount)) {\n          i++;\n          fn(rows[initialIndex], i);\n        }\n      }\n    };\n\n    _this.sortRows = function (rows) {\n      return rows.slice().sort(function (row1, row2) {\n        return row1.getIndex() - row2.getIndex();\n      });\n    };\n\n    _this.getRowAt = function (index) {\n      var row = _this.mapping[index];\n\n      if (row && row.getIndex() != index) {\n        row = null;\n      }\n\n      return row;\n    };\n\n    _this.getVisibleCount = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var virtualized = props.virtualized,\n          enableRowSpan = props.enableRowSpan;\n      var extraRows = enableRowSpan ? 2 : 0;\n\n      if (_this.visibleCount === undefined) {\n        return 0;\n      }\n\n      if (!virtualized) {\n        return (props.showEmptyRows ? Math.max(_this.visibleCount || 0, props.count || 0) : props.count) + extraRows;\n      }\n\n      return (props.showEmptyRows ? _this.visibleCount || props.count : Math.min(_this.visibleCount || props.count, props.count)) + extraRows;\n    };\n\n    _this.setRowIndex = function (row, index, callback) {\n      var existingRow = _this.mapping[index];\n\n      if (existingRow) {\n        existingRow.setIndex(index, callback);\n\n        if (existingRow !== row) {\n          row.setVisible(false);\n        }\n\n        return;\n      }\n\n      var oldIndex = row.getIndex();\n      row.setIndex(index, callback);\n      delete _this.mapping[oldIndex];\n      _this.mapping[index] = row;\n    };\n\n    _this.getSortedRows = function () {\n      var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.getRows();\n      return _this.sortRows(rows);\n    };\n\n    _this.onRowsUpdated = function (newIndexes, range, updateScroll) {\n      newIndexes.sort(function (i1, i2) {\n        return i1 - i2;\n      });\n      var start = newIndexes[0];\n      var end = _this.props.showEmptyRows ? newIndexes[newIndexes.length - 1] : Math.min(newIndexes[newIndexes.length - 1], _this.props.count - 1);\n      var minRowHeight = _this.props.minRowHeight;\n      var rowIndexes = [];\n      var rowHeights = [];\n      var rows = [];\n\n      for (var row, rowHeight, i = start; i <= end; i++) {\n        row = _this.mapping[i];\n        rowHeight = row ? row.getInfo().height : minRowHeight;\n\n        if (row) {\n          rows.push(row);\n        }\n\n        rowIndexes.push(i);\n        rowHeights.push(rowHeight);\n      }\n\n      var newToTopHeight = 0;\n      var oldTop;\n\n      if (_this.oldRowIndexes) {\n        oldTop = _this.oldRowIndexes[0];\n        rowIndexes.forEach(function (rowIndex, i) {\n          var diff;\n\n          if (rowIndex < oldTop) {\n            diff = rowHeights[i] - _this.rowHeights[rowIndex];\n            newToTopHeight += diff;\n          }\n        });\n      }\n\n      if (rowIndexes.length) {\n        _this.setHeightForRows(rowIndexes, rowHeights);\n      }\n\n      rows.forEach(function (row) {\n        var index = row.getIndex();\n        var offset = _this.rowOffsets[index];\n        row.setOffset(offset);\n      });\n      _this.oldRowIndexes = rowIndexes;\n      var newScrollTop;\n\n      if (newToTopHeight) {\n        newScrollTop = _this.scrollTopPos + newToTopHeight;\n        updateScroll(newScrollTop);\n        _this.forceScrollTop = newScrollTop;\n        _this.scrollTop = newScrollTop;\n      } else {\n        updateScroll();\n      }\n    };\n\n    _this.getVisibleRange = function (args) {\n      return (0, _getVisibleRange.default)(args);\n    };\n\n    _this.getCurrentVisibleRange = function () {\n      var _this$props4 = _this.props,\n          count = _this$props4.count,\n          rowHeightManager = _this$props4.rowHeightManager,\n          rowHeight = _this$props4.rowHeight,\n          naturalRowHeight = _this$props4.naturalRowHeight,\n          showEmptyRows = _this$props4.showEmptyRows;\n      return _this.getVisibleRange({\n        scrollTop: _this.scrollTopPos,\n        size: _this.size,\n        count: count,\n        naturalRowHeight: naturalRowHeight,\n        rowHeightManager: rowHeightManager,\n        rowHeight: rowHeight,\n        showEmptyRows: showEmptyRows\n      });\n    };\n\n    _this.applyScrollStyle = function (_ref2, domNode) {\n      var scrollTop = _ref2.scrollTop,\n          scrollLeft = _ref2.scrollLeft,\n          force = _ref2.force,\n          reorder = _ref2.reorder;\n\n      if (scrollTop < 0) {\n        scrollTop = 0;\n      }\n\n      if (!_this.props.rtl) {\n        if (scrollLeft < 0) {\n          scrollLeft = 0;\n        }\n      } else {\n        if (scrollLeft > 0) {\n          scrollLeft = 0;\n        }\n      }\n\n      if (_this.forceScrollTop !== undefined) {\n        scrollTop = _this.forceScrollTop;\n        _this.forceScrollTop = undefined;\n        return;\n      }\n\n      if (_this.props.applyScrollLeft && scrollLeft !== undefined) {\n        scrollLeft = 0;\n\n        _this.props.applyScrollLeft(scrollLeft, domNode);\n      }\n\n      if (scrollTop === undefined) {\n        scrollTop = _this.prevScrollTopPos;\n      }\n\n      if (scrollLeft === undefined) {\n        scrollLeft = _this.prevScrollLeftPos;\n      }\n\n      _this.scrollTopPos = scrollTop;\n      _this.scrollLeftPos = scrollLeft;\n      var _this$props5 = _this.props,\n          count = _this$props5.count,\n          useTransformPosition = _this$props5.useTransformPosition,\n          rowHeightManager = _this$props5.rowHeightManager,\n          naturalRowHeight = _this$props5.naturalRowHeight,\n          virtualized = _this$props5.virtualized,\n          showEmptyRows = _this$props5.showEmptyRows;\n\n      var range = _this.getVisibleRange({\n        scrollTop: scrollTop,\n        size: _this.size,\n        count: count,\n        naturalRowHeight: naturalRowHeight,\n        rowHeightManager: rowHeightManager,\n        showEmptyRows: showEmptyRows\n      });\n\n      var startRowIndex = range.start;\n      var prevStartRowIndex = _this.prevStartRowIndex;\n      _this.prevScrollTopPos = scrollTop;\n      _this.prevScrollLeftPos = scrollLeft;\n      _this.prevStartRowIndex = startRowIndex;\n\n      _this.updateStickyRows(scrollTop, range.start, {\n        force: false\n      });\n\n      var updateScroll = function updateScroll() {\n        var top = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : scrollTop;\n        var parentNodeStyle = _this.containerNode.parentNode.style;\n        var scrollLeftTranslateValue = -scrollLeft;\n\n        if (useTransformPosition) {\n          parentNodeStyle.transform = \"translate3d(\".concat(scrollLeftTranslateValue, \"px, \").concat(-top, \"px, 0px)\");\n        } else {\n          parentNodeStyle.left = \"\".concat(scrollLeftTranslateValue, \"px\");\n          parentNodeStyle.top = \"\".concat(-top, \"px\");\n        }\n      };\n\n      if (rowHeightManager == null) {\n        force = true;\n      }\n\n      if (startRowIndex == prevStartRowIndex && !force || !virtualized) {\n        updateScroll();\n        return;\n      }\n\n      updateScroll();\n\n      _this.updateRows(range, reorder, emptyFn);\n    };\n\n    _this.getScrollingElement = function () {\n      return _this.scrollContainer;\n    };\n\n    _this.smoothScrollTo = function () {\n      var _this$scrollContainer;\n\n      (_this$scrollContainer = _this.scrollContainer).smoothScrollTo.apply(_this$scrollContainer, arguments);\n    };\n\n    _this.componentDidMount = function () {\n      _this.mounted = true;\n\n      _this.setupRowHeightManager(_this.props.rowHeightManager);\n    };\n\n    _this.fixEdgeScrollPosition = function () {\n      if (!(IS_EDGE || IS_FF)) {\n        return;\n      }\n\n      var maxTop = _this.getTotalRowHeight() - (_this.scrollContainer.viewNode ? _this.scrollContainer.viewNode.offsetHeight : 0);\n\n      if (_this.scrollTop > maxTop) {\n        global.requestAnimationFrame(function () {\n          if (_this.unmounted) {\n            return;\n          }\n\n          _this.scrollTop = maxTop;\n        });\n      }\n    };\n\n    _this.setupRowHeightManager = function (rowHeightManager) {\n      if (rowHeightManager) {\n        rowHeightManager.on('index', _this.onIndex);\n      }\n    };\n\n    _this.onIndex = function () {\n      _this.updateVisibleCount(_this.size.height);\n\n      _this.forceUpdate(function () {\n        if (_this.unmounted) {\n          return;\n        }\n\n        _this.refreshLayout({\n          reorder: false,\n          force: true\n        });\n\n        _this.cleanupRows();\n\n        _this.fixEdgeScrollPosition();\n\n        _this.rows.forEach(function (row) {\n          row.setIndex(row.getIndex(), undefined, undefined, true);\n        });\n      });\n    };\n\n    _this.refreshLayout = function (config) {\n      var defaults = {\n        force: true,\n        reorder: true\n      };\n\n      _this.adjustHeights();\n\n      var options = config ? _objectSpread(_objectSpread({}, defaults), config) : defaults;\n\n      _this.applyScrollStyle(options);\n    };\n\n    _this.getOverlappingHeight = function () {\n      if (_this.scrollContainer && _this.scrollContainer.getBeforeAndAfterHeight) {\n        return _this.scrollContainer.getBeforeAndAfterHeight();\n      }\n\n      return 0;\n    };\n\n    _this.updateVisibleCount = function (height, props) {\n      props = props || _this.props;\n      var _props = props,\n          rowHeightManager = _props.rowHeightManager,\n          minRowHeight = _props.minRowHeight,\n          showEmptyRows = _props.showEmptyRows;\n      var strictVisibleCount = rowHeightManager ? Math.ceil(height / rowHeightManager.getMinHeight()) : Math.ceil(height / (minRowHeight || 1));\n      _this.strictVisibleCount = strictVisibleCount;\n      _this.visibleCount = rowHeightManager ? strictVisibleCount + 1 : strictVisibleCount + 2;\n      var maxCount = props.count;\n\n      if (_this.visibleCount > maxCount && !showEmptyRows) {\n        _this.visibleCount = maxCount;\n      }\n    };\n\n    _this.getGapsFor = function (startRowIndex, endRowIndex, sortedRows) {\n      var visibleRowPositions = {};\n      var enableRowSpan = _this.props.enableRowSpan;\n\n      var rows = sortedRows || _this.getSortedRows();\n\n      rows.forEach(function (row) {\n        if (row.isVisible()) {\n          visibleRowPositions[row.getIndex()] = true;\n        }\n      });\n      var gaps = [];\n\n      if (enableRowSpan && _this.rowCoveredBy[startRowIndex] != null) {\n        startRowIndex = _this.rowCoveredBy[startRowIndex];\n      }\n\n      var alreadyVisible;\n      var coveredBy;\n\n      for (; startRowIndex <= endRowIndex; startRowIndex++) {\n        alreadyVisible = visibleRowPositions[startRowIndex];\n\n        if (enableRowSpan && !alreadyVisible) {\n          coveredBy = _this.rowCoveredBy[startRowIndex];\n\n          if (coveredBy != null) {\n            alreadyVisible = _this.props.recycleCoveredRows;\n          }\n        }\n\n        if (!alreadyVisible) {\n          gaps.push(startRowIndex);\n        }\n      }\n\n      return gaps;\n    };\n\n    _this.getCleanupRows = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n      var indexes = [];\n      var length = _this.rows.length;\n\n      var visibleCount = _this.getVisibleCount(props);\n\n      for (var i = visibleCount; i < length; i++) {\n        indexes.push(i);\n      }\n\n      return indexes;\n    };\n\n    _this.cleanupRows = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n\n      _this.getCleanupRows(props).forEach(function (i) {\n        var row = _this.rows[i];\n\n        if (row) {\n          delete _this.mapping[row.getIndex()];\n          delete _this.rows[i];\n        }\n      });\n    };\n\n    _this.onResize = function () {\n      var node = _this.getDOMNode();\n\n      if (!node) {\n        return;\n      }\n\n      var size = _this.props.measureSize ? _this.props.measureSize(node) : {\n        width: node.clientWidth,\n        height: node.clientHeight\n      };\n      size.height -= _this.getOverlappingHeight();\n      _this.size = size;\n\n      if (_this.props.scrollProps && typeof _this.props.scrollProps.onResize == 'function') {\n        _this.props.scrollProps.onResize(size);\n      }\n\n      _this.updateVisibleCount(size.height);\n\n      if (_this.props.virtualized) {\n        if (_this.props.showEmptyRows) {\n          _this.initSizes();\n        }\n\n        _this.forceUpdate(function () {\n          if (_this.unmounted) {\n            return;\n          }\n\n          _this.refreshLayout({\n            reorder: false,\n            force: true\n          });\n\n          _this.cleanupRows();\n        });\n      }\n\n      if (_this.props.onResize) {\n        _this.props.onResize(size);\n      }\n    };\n\n    _this.setRowRowSpan = function (rowIndex, rowSpan) {\n      if (rowSpan === 1) {\n        return;\n      }\n\n      _this.rowSpans[rowIndex] = rowSpan;\n      var current = rowIndex + 1;\n      var last = rowIndex + rowSpan - 1;\n\n      for (; current <= last; current++) {\n        _this.rowCoveredBy[current] = rowIndex;\n      }\n    };\n\n    _this.onRowKeyDown = function (index, event) {\n      if (event.key !== 'Tab') {\n        return;\n      }\n\n      if (_this.props.handleRowKeyDown) {\n        _this.props.handleRowKeyDown(index, event);\n\n        return;\n      }\n\n      var activeElement = global.document.activeElement;\n\n      var theRow = _this.getRowAt(index);\n\n      var rowNode = theRow.getDOMNode ? theRow.getDOMNode() : theRow.node;\n\n      if (!activeElement || !(0, _contains.default)(rowNode, activeElement)) {\n        return;\n      }\n\n      var dir = event.shiftKey ? -1 : 1;\n      var nextIndex = index + dir;\n\n      var maxCount = _this.getMaxRenderCount();\n\n      if (nextIndex < 0 || nextIndex >= maxCount) {\n        return;\n      }\n\n      var thisElements = _this.props.getRowFocusableElements ? _this.props.getRowFocusableElements(index, rowNode) : (0, _getFocusableElements.default)(rowNode);\n\n      if (thisElements && thisElements.length) {\n        var limit = dir === -1 ? 0 : thisElements.length - 1;\n\n        if (thisElements[limit] !== activeElement) {\n          return;\n        }\n      }\n\n      if (typeof _this.props.shouldPreventDefaultTabKeyOnRow !== 'function' || _this.props.shouldPreventDefaultTabKeyOnRow(index, event) !== false) {\n        event.preventDefault();\n      }\n\n      _this.focusRow(nextIndex, dir);\n    };\n\n    _this.getMaxRenderCount = function () {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props;\n\n      var visibleCount = _this.getVisibleCount(props);\n\n      var maxCount = props.showEmptyRows ? Math.max(visibleCount || 0, props.count) : Math.max(props.count || 0, 0);\n      return maxCount;\n    };\n\n    _this.focusRow = function (index, dir, callback) {\n      if (index >= _this.getMaxRenderCount() || index < 0) {\n        return;\n      }\n\n      _this.scrollToIndex(index, {\n        direction: dir == 1 ? 'bottom' : 'top'\n      }, function () {\n        var nextRow = _this.getRowAt(index);\n\n        var nextRowNode = nextRow.getDOMNode ? nextRow.getDOMNode() : nextRow.node;\n        var elements = _this.props.getRowFocusableElements ? _this.props.getRowFocusableElements(index, nextRowNode) : (0, _getFocusableElements.default)(nextRowNode);\n\n        if (elements.length) {\n          var focusIndex = dir === -1 ? elements.length - 1 : 0;\n          elements[focusIndex].focus();\n        }\n\n        if (typeof callback == 'function') {\n          callback();\n        }\n      });\n    };\n\n    _this.isRowRendered = function (index) {\n      return !!_this.getRowAt(index);\n    };\n\n    _this.getStickyRowsArray = function () {\n      var stickyRows = _this.props.stickyRows;\n      var scaleMap = {};\n      var rows = Object.keys(stickyRows).map(function (key, i) {\n        var scale = +(stickyRows[key] || 1);\n        var row = {\n          index: +key,\n          scale: scale,\n          indexInAllRows: i\n        };\n        scaleMap[scale] = scaleMap[scale] || [];\n        scaleMap[scale].push(row);\n        return row;\n      }).sort(function (a, b) {\n        return sortAsc(a.index, b.index);\n      });\n      var scales = unique(rows.map(function (r) {\n        return r.scale;\n      })).sort(sortAsc);\n      var result = {\n        rows: rows,\n        scales: scales,\n        rowsPerScales: scales.map(function (scale) {\n          return scaleMap[scale];\n        })\n      };\n      return result;\n    };\n\n    _this.currentStickyRows = [];\n\n    _this.updateStickyRows = function () {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.scrollTop;\n      var firstVisibleRowIndex = arguments.length > 1 ? arguments[1] : undefined;\n\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        force: true\n      },\n          force = _ref3.force;\n\n      if (!_this.props.stickyRows) {\n        return;\n      }\n\n      var _this$getStickyRowsAr = _this.getStickyRowsArray(),\n          rowsPerScales = _this$getStickyRowsAr.rowsPerScales,\n          allRows = _this$getStickyRowsAr.rows;\n\n      if (firstVisibleRowIndex === undefined) {\n        firstVisibleRowIndex = _this.getCurrentVisibleRange().start;\n      }\n\n      firstVisibleRowIndex = firstVisibleRowIndex || 0;\n      var enteringRows = [];\n\n      var comparator = function comparator(_ref4, b) {\n        var index = _ref4.index;\n        return sortAsc(index, b);\n      };\n\n      var initialIndex = -1;\n      var currentStickyRows = [];\n      var currentStickyRowsMap = [];\n      var maxStickyRowIndex = -1;\n      var firstFreeVisibleRowIndex = firstVisibleRowIndex;\n      rowsPerScales.forEach(function (rows) {\n        if (!rows.length) {\n          return;\n        }\n\n        var foundIndex = (0, _binarySearch.default)(rows, firstFreeVisibleRowIndex, comparator);\n        var computedFoundIndex = foundIndex;\n        var stickyRow;\n        var stickyRowIndex;\n\n        if (foundIndex < 0) {\n          computedFoundIndex = ~foundIndex - 1;\n        }\n\n        stickyRow = rows[computedFoundIndex];\n\n        if (stickyRow) {\n          stickyRowIndex = stickyRow.index;\n\n          if (stickyRowIndex > initialIndex) {\n            firstFreeVisibleRowIndex++;\n            currentStickyRows.push(stickyRow);\n            currentStickyRowsMap[stickyRowIndex] = true;\n            initialIndex = stickyRowIndex;\n            maxStickyRowIndex = Math.max(maxStickyRowIndex, stickyRowIndex);\n          }\n\n          var nextRow = allRows[stickyRow.indexInAllRows + 1];\n\n          if (nextRow && nextRow.index <= firstFreeVisibleRowIndex) {\n            enteringRows.push(nextRow);\n          }\n        }\n      });\n      enteringRows = enteringRows.filter(function (row) {\n        return !currentStickyRowsMap[row.index] && row.index > maxStickyRowIndex;\n      });\n      var enteringRow = enteringRows[0];\n\n      if (JSON.stringify(_this.currentStickyRows) === JSON.stringify(currentStickyRows) && !force) {\n        _this.stickyRowsContainer.setEnteringRow({\n          enteringRow: enteringRow,\n          scrollTop: scrollTop\n        });\n\n        return;\n      }\n\n      _this.setStickyRows(currentStickyRows, scrollTop, enteringRow);\n    };\n\n    _this.setStickyRows = function () {\n      var currentStickyRows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.currentStickyRows;\n      var scrollTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.scrollTop;\n      var enteringRow = arguments.length > 2 ? arguments[2] : undefined;\n      _this.currentStickyRows = currentStickyRows;\n      var rowElements = currentStickyRows.map(function (row) {\n        return _this.renderStickyRow(row.index);\n      });\n\n      _this.stickyRowsContainer.setStickyRows(rowElements.length ? rowElements : null, currentStickyRows, {\n        enteringRow: enteringRow,\n        scrollTop: scrollTop\n      });\n\n      _this.currentStickyRows = currentStickyRows;\n    };\n\n    _this.renderStickyRow = function (index) {\n      var _this$props6 = _this.props,\n          rowHeight = _this$props6.rowHeight,\n          renderRow = _this$props6.renderRow,\n          count = _this$props6.count,\n          pureRows = _this$props6.pureRows,\n          rowHeightManager = _this$props6.rowHeightManager,\n          showEmptyRows = _this$props6.showEmptyRows,\n          virtualized = _this$props6.virtualized,\n          rowContain = _this$props6.rowContain,\n          naturalRowHeight = _this$props6.naturalRowHeight,\n          useTransformRowPosition = _this$props6.useTransformRowPosition;\n      return (0, _renderRows2.default)({\n        pure: pureRows,\n        renderRow: renderRow,\n        rowHeightManager: rowHeightManager,\n        rowHeight: rowHeight,\n        rowContain: rowContain,\n        count: count,\n        from: index,\n        to: index + 1,\n        naturalRowHeight: naturalRowHeight,\n        sticky: true,\n        useTransformPosition: useTransformRowPosition,\n        virtualized: false\n      })[0];\n    };\n\n    _this.isRowVisible = function (index) {\n      if (!_this.isRowRendered(index)) {\n        return false;\n      }\n\n      var rowHeightManager = _this.props.rowHeightManager;\n      var top = _this.scrollTop;\n      var bottom = top + _this.size.height;\n      var rowTop;\n      var rowBottom;\n\n      if (rowHeightManager) {\n        rowTop = rowHeightManager.getRowOffset(index);\n        rowBottom = rowTop + rowHeightManager.getRowHeight(index);\n      } else {\n        var row = _this.getRowAt(index);\n\n        var info = row.getInfo();\n        rowTop = info.offset;\n        rowBottom = rowTop + info.height;\n      }\n\n      return top <= rowTop && rowBottom <= bottom;\n    };\n\n    _this.getRowVisibilityInfo = function (index, offset) {\n      var rendered = _this.isRowRendered(index);\n\n      var _this$props7 = _this.props,\n          rowHeightManager = _this$props7.rowHeightManager,\n          rowHeight = _this$props7.rowHeight,\n          minRowHeight = _this$props7.minRowHeight;\n      var scrollTop = _this.scrollTop;\n      var top = scrollTop + offset;\n      var bottom = scrollTop + _this.size.height - offset;\n      var rowTop;\n      var rowBottom;\n\n      if (rowHeightManager) {\n        rowTop = rowHeightManager.getRowOffset(index);\n        rowBottom = rowTop + rowHeightManager.getRowHeight(index);\n      } else {\n        var row = _this.getRowAt(index);\n\n        if (row) {\n          var info = row.getInfo();\n          rowTop = info.offset;\n          rowBottom = rowTop + info.height;\n        } else {\n          var indexes = _this.getRenderedIndexes();\n\n          var firstRenderedIndex = indexes[0];\n          var lastRenderedIndex = indexes[indexes.length - 1];\n\n          if (index < firstRenderedIndex) {\n            rowTop = _this.rowOffsets[firstRenderedIndex] - (firstRenderedIndex - index) * minRowHeight;\n          } else if (index > lastRenderedIndex) {\n            rowTop = _this.rowOffsets[lastRenderedIndex] + _this.rowHeights[lastRenderedIndex] + (index - lastRenderedIndex) * minRowHeight;\n          } else {\n            rowTop = _this.rowOffsets[index];\n          }\n\n          rowBottom = rowTop + _this.rowHeights[index];\n        }\n      }\n\n      var visible = top <= rowTop && rowBottom <= bottom;\n      return {\n        rendered: rendered,\n        visible: visible,\n        top: rowTop,\n        bottom: rowBottom,\n        topDiff: rowTop - top,\n        bottomDiff: bottom - rowBottom\n      };\n    };\n\n    _this.getRenderedIndexes = function () {\n      return Object.keys(_this.mapping).map(function (k) {\n        return k * 1;\n      });\n    };\n\n    _this.onRowFocus = function (index, event) {};\n\n    _this.rafSync = function () {\n      if (_this.scrollContainer) {\n        _this.scrollContainer.rafSync();\n      }\n\n      _this.adjustHeights();\n    };\n\n    _this.adjustHeights = function () {\n      if (Array.isArray(_this.rows)) {\n        _this.rows.forEach(function (r) {\n          return r.updateRowHeight();\n        });\n      }\n    };\n\n    _this.checkHeights = function () {\n      var rows = _this.getSortedRows();\n\n      var result = true;\n      rows.forEach(function (row) {\n        if (result !== true) {\n          return;\n        }\n\n        var index = row.getIndex();\n\n        if (row.node.offsetHeight != _this.rowHeights[index]) {\n          console.warn(\"row height mismatch at \".concat(index, \"!\"));\n          result = index;\n        }\n      });\n\n      if (result === true) {\n        _this.rowHeights.reduce(function (acc, height, index) {\n          if (_this.rowOffsets[index] !== acc && result === true && index < _this.props.count) {\n            console.warn(\"row offset mismatch at \".concat(index, \"!\"));\n            result = index;\n          }\n\n          return acc + height;\n        }, 0);\n      }\n\n      return result;\n    };\n\n    _this.initSizes(props);\n\n    _this.visibleCount = undefined;\n    _this.size = {\n      height: 0,\n      width: 0\n    };\n    _this.scrollTopPos = 0;\n    _this.scrollLeftPos = 0;\n    _this.prevScrollLeftPos = 0;\n    _this.prevScrollTopPos = 0;\n    _this.mapping = {};\n    _this.rowSpans = {};\n    _this.rowCoveredBy = {};\n    _this.rows = [];\n\n    _this.refScrollContainer = function (c) {\n      _this.scrollContainer = c;\n    };\n\n    _this.refStickyContainer = function (c) {\n      _this.stickyRowsContainer = c;\n    };\n\n    _this.refContainerNode = function (domNode) {\n      _this.containerNode = domNode;\n    };\n\n    var rafId;\n    _this.updateRows = (0, _lodash.default)(_this.updateRows, 16);\n    return _this;\n  }\n\n  (0, _createClass2.default)(InovuaVirtualList, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return (0, _shouldComponentUpdate2.default)(this, nextProps, nextState);\n    }\n  }, {\n    key: \"renderStickyRowsContainer\",\n    value: function renderStickyRowsContainer() {\n      return this.props.stickyRows ? _react.default.createElement(_StickyRowsContainer.default, {\n        rtl: this.props.rtl,\n        stickyOffset: this.props.stickyOffset,\n        handle: this.refStickyContainer,\n        rowHeightManager: this.props.rowHeightManager\n      }) : null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var naturalRowHeight = props.naturalRowHeight,\n          scrollProps = props.scrollProps,\n          theme = props.theme,\n          minRowHeight = props.minRowHeight,\n          rowHeightManager = props.rowHeightManager,\n          count = props.count;\n\n      var style = _objectSpread({\n        position: 'relative'\n      }, this.props.style);\n\n      var className = (0, _join.default)(props.className, BASE_CLASS_NAME, theme && \"\".concat(BASE_CLASS_NAME, \"--theme-\").concat(theme), \"\".concat(BASE_CLASS_NAME, \"--virtual-scroll\"));\n      var scrollHeight = rowHeightManager ? rowHeightManager.getTotalSize(count) : this.scrollHeight || minRowHeight * count;\n      var rowContainer = this.renderRowContainer();\n      var sizer = this.renderSizer(scrollHeight);\n      var stickyRowsContainer = this.renderStickyRowsContainer();\n      var children;\n\n      if ((0, _src.hasSticky)()) {\n        children = _react.default.Fragment ? _react.default.createElement(_react.default.Fragment, null, rowContainer, sizer) : [rowContainer, sizer];\n      } else {\n        children = _react.default.createElement(\"div\", null, rowContainer, sizer);\n      }\n\n      var Factory = this.props.nativeScroll ? _src.NativeScrollContainer : _src.default;\n      var renderScrollerSpacer;\n\n      if (naturalRowHeight) {\n        renderScrollerSpacer = this.renderScrollerSpacerOnNaturalRowHeight;\n      }\n\n      return _react.default.createElement(Factory, Object.assign({\n        contain: this.props.contain,\n        ResizeObserver: this.props.ResizeObserver !== undefined ? this.props.ResizeObserver : ResizeObserver,\n        extraChildren: stickyRowsContainer,\n        useTransformToScroll: this.props.useTransformPosition\n      }, (0, _reactCleanProps.default)(props, InovuaVirtualList.propTypes), scrollProps, {\n        rtl: this.props.rtl,\n        nativeScroll: this.props.nativeScroll,\n        ref: this.refScrollContainer,\n        onScrollbarsChange: this.onScrollbarsChange,\n        style: style,\n        theme: theme,\n        className: className,\n        onScrollStart: this.onScrollStart,\n        onScrollStop: this.onScrollStop,\n        applyScrollStyle: this.applyScrollStyle,\n        onResize: this.onResize,\n        onViewResize: this.onViewResize,\n        renderScroller: this.renderScroller,\n        renderScrollerSpacer: renderScrollerSpacer,\n        renderView: this.renderView,\n        getClientSize: this.getClientSize,\n        getScrollSize: this.getScrollSize,\n        children: children\n      }));\n    }\n  }, {\n    key: \"updateRows\",\n    value: function updateRows(range, reorder, updateScroll) {\n      var _this2 = this;\n\n      var rowHeightManager = this.props.rowHeightManager;\n      var startRowIndex = range.start;\n      var endRowIndex = range.end;\n\n      if (this.props.onRenderRangeChange) {\n        this.props.onRenderRangeChange(startRowIndex, endRowIndex);\n      }\n\n      var rows = this.getSortedRows();\n      var gaps = this.getGapsFor(startRowIndex, endRowIndex, rows);\n      var newIndexes = [];\n      var _this$props8 = this.props,\n          recycleCoveredRows = _this$props8.recycleCoveredRows,\n          enableRowSpan = _this$props8.enableRowSpan;\n      var visited = {};\n      rows.forEach(function (row, i) {\n        var rowIndex = row.getIndex();\n\n        if (reorder) {\n          var newRowIndex = startRowIndex + i;\n\n          _this2.setRowIndex(row, newRowIndex);\n\n          if (rowHeightManager == null) {\n            newIndexes.push(newRowIndex);\n          }\n\n          return;\n        }\n\n        var extraRows = enableRowSpan ? row.getRowSpan() - 1 : 0;\n        var outOfView = rowIndex + extraRows < startRowIndex || rowIndex > endRowIndex || visited[rowIndex] || enableRowSpan && recycleCoveredRows && _this2.rowCoveredBy[rowIndex] !== undefined;\n        visited[rowIndex] = true;\n\n        if (rowHeightManager == null) {\n          if (outOfView) {\n            if (gaps.length) {\n              var newIndex = gaps.pop();\n              newIndexes.push(newIndex);\n\n              _this2.setRowIndex(row, newIndex);\n            } else {\n              row.setVisible(false);\n            }\n          } else {\n            row.setVisible(true);\n            newIndexes.push(row.getIndex());\n          }\n\n          return;\n        }\n\n        if (outOfView && gaps.length) {\n          var _newIndex = gaps.pop();\n\n          _this2.setRowIndex(row, _newIndex);\n        }\n      });\n\n      if (newIndexes.length && rowHeightManager == null) {\n        if (this.updateRafHandle) {\n          global.cancelAnimationFrame(this.updateRafHandle);\n        }\n\n        this.updateRafHandle = global.requestAnimationFrame(function () {\n          _this2.updateRafHandle = null;\n\n          _this2.onRowsUpdated(newIndexes, {\n            start: startRowIndex,\n            end: endRowIndex\n          }, function () {});\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.rowHeightManager) {\n        this.props.rowHeightManager.removeListener('index', this.onIndex);\n      }\n\n      this.mounted = false;\n      this.unmounted = true;\n      this.rows = null;\n      this.rowHeights = null;\n      this.rowOffsets = null;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      var nextCount = Math.max(nextProps.count, 0);\n      var rowHeightChange = this.props.rowHeight && nextProps.rowHeight != this.props.rowHeight;\n\n      if (this.props.renderRow !== nextProps.renderRow) {\n        this.rowCoveredBy = {};\n        this.rowSpans = {};\n      }\n\n      if (nextCount != this.props.count || nextProps.showEmptyRows != this.props.showEmptyRows || rowHeightChange) {\n        var oldVisibleCount = this.getVisibleCount();\n        this.updateVisibleCount(this.size.height, nextProps);\n        this.cleanupRows(nextProps);\n        this.reorder = rowHeightChange || this.getVisibleCount(nextProps) < oldVisibleCount;\n        this.initSizes(nextProps);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this3 = this;\n\n      var prevScrollTopPos;\n      var prevScrollLeftPos;\n\n      if (this.props.nativeScroll !== prevProps.nativeScroll) {\n        prevScrollTopPos = this.scrollTopPos;\n        prevScrollLeftPos = this.scrollLeftPos;\n        global.requestAnimationFrame(function () {\n          if (_this3.unmounted) {\n            return;\n          }\n\n          _this3.scrollTop = prevScrollTopPos;\n          _this3.scrollLeft = prevScrollLeftPos;\n        });\n      }\n\n      if (this.props.rowHeightManager !== prevProps.rowHeightManager) {\n        if (prevProps.rowHeightManager) {\n          prevProps.rowHeightManager.removeListener('index', this.onIndex);\n        }\n\n        this.setupRowHeightManager(this.props.rowHeightManager);\n      }\n\n      if (this.props.count != prevProps.count || this.props.renderRow != prevProps.renderRow || this.props.rowHeightManager != prevProps.rowHeightManager || this.props.rowHeightManager == null || this.props.showEmptyRows != prevProps.showEmptyRows) {\n        var refreshConfig = {\n          reorder: this.reorder\n        };\n\n        if (prevScrollTopPos !== undefined) {\n          refreshConfig.scrollTop = prevScrollTopPos;\n          refreshConfig.scrollLeft = prevScrollLeftPos;\n        }\n\n        if (this.props.count <= this.visibleCount) {\n          refreshConfig.scrollTop = 0;\n        }\n\n        if ((IS_EDGE || IS_FF) && this.props.count < prevProps.count) {\n          this.fixEdgeScrollPosition();\n        }\n\n        this.reorder = false;\n        this.refreshLayout(refreshConfig);\n      }\n\n      if (prevProps.stickyRows !== this.props.stickyRows) {\n        this.updateStickyRows(undefined, undefined, {\n          force: true\n        });\n      }\n    }\n  }, {\n    key: \"getDOMNode\",\n    value: function getDOMNode() {\n      return this.scrollContainer ? this.scrollContainer.domNode || this.scrollContainer.getDOMNode() : null;\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var props = this.props;\n      var rowHeight = props.rowHeight,\n          renderRow = props.renderRow,\n          count = props.count,\n          pureRows = props.pureRows,\n          rowHeightManager = props.rowHeightManager,\n          showEmptyRows = props.showEmptyRows,\n          virtualized = props.virtualized,\n          rowContain = props.rowContain,\n          naturalRowHeight = props.naturalRowHeight,\n          useTransformRowPosition = props.useTransformRowPosition;\n      var to = this.getVisibleCount();\n      return (0, _renderRows2.default)({\n        ref: this.rowRef,\n        onUnmount: this.onRowUnmount,\n        notifyRowSpan: this.setRowRowSpan,\n        pure: pureRows,\n        renderRow: renderRow,\n        rowHeightManager: rowHeightManager,\n        rowHeight: rowHeight,\n        rowContain: rowContain,\n        count: count,\n        from: 0,\n        to: to,\n        naturalRowHeight: naturalRowHeight,\n        onKeyDown: this.onRowKeyDown,\n        onFocus: this.onRowFocus,\n        useTransformPosition: useTransformRowPosition,\n        showEmptyRows: showEmptyRows,\n        virtualized: virtualized\n      });\n    }\n  }, {\n    key: \"scrollToIndex\",\n    value: function scrollToIndex(index) {\n      var _this4 = this;\n\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n          direction = _ref5.direction,\n          force = _ref5.force,\n          _ref5$duration = _ref5.duration,\n          duration = _ref5$duration === void 0 ? 0 : _ref5$duration,\n          _ref5$offset = _ref5.offset,\n          offset = _ref5$offset === void 0 ? 0 : _ref5$offset;\n\n      var callback = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (direction) {\n        if (direction != 'top' && direction != 'bottom') {\n          direction = null;\n        }\n      }\n\n      if (force && !direction) {\n        force = false;\n      }\n\n      if (index < 0 || index >= this.getMaxRenderCount()) {\n        return;\n      }\n\n      if (typeof callback != 'function') {\n        callback = emptyFn;\n      }\n\n      var info = this.getRowVisibilityInfo(index, offset);\n\n      if (!info.rendered) {\n        var rowHeight = this.props.rowHeight;\n\n        if (!direction) {\n          var existingIndex = this.rows[0].getIndex();\n          direction = index > existingIndex ? 'bottom' : 'top';\n        }\n\n        var newScrollTop = direction === 'top' ? info.top - offset : this.scrollTop - info.bottomDiff + offset;\n\n        var afterScroll = function afterScroll() {\n          if (!rowHeight) {\n            setTimeout(function () {\n              global.requestAnimationFrame(function () {\n                _this4.scrollToIndex(index, {\n                  direction: direction,\n                  force: force,\n                  duration: duration ? 100 : 0\n                }, callback);\n              });\n            });\n          } else {\n            callback();\n          }\n        };\n\n        if (duration) {\n          this.smoothScrollTo(newScrollTop, {\n            duration: duration\n          }, afterScroll);\n        } else {\n          this.scrollTop = newScrollTop;\n          afterScroll();\n        }\n\n        return;\n      }\n\n      var visible = info.visible;\n\n      if (!visible) {\n        if (!direction) {\n          direction = info.topDiff < 0 ? 'top' : 'bottom';\n          force = true;\n        }\n      }\n\n      if (!visible || direction && force) {\n        var _newScrollTop;\n\n        if (direction == 'top' || info.topDiff < 0) {\n          _newScrollTop = this.scrollTop + info.topDiff - offset;\n        } else if (direction == 'bottom' || info.bottomDiff < 0) {\n          _newScrollTop = this.scrollTop - info.bottomDiff + offset;\n        }\n\n        if (_newScrollTop != null) {\n          if (duration) {\n            this.smoothScrollTo(_newScrollTop, {\n              duration: duration\n            }, callback);\n            return;\n          }\n\n          this.scrollTop = _newScrollTop;\n        }\n      }\n\n      callback();\n    }\n  }, {\n    key: \"getEmptyScrollOffset\",\n    value: function getEmptyScrollOffset() {\n      if (this.props.emptyScrollOffset != null) {\n        return this.props.emptyScrollOffset;\n      }\n\n      var SCROLLBAR_WIDTH = (0, _src.getScrollbarWidth)();\n      return this.props.emptyScrollOffset || SCROLLBAR_WIDTH || 17;\n    }\n  }, {\n    key: \"scrollTopMax\",\n    get: function get() {\n      return this.mounted ? this.scrollContainer.scrollTopMax : 0;\n    }\n  }, {\n    key: \"scrollLeftMax\",\n    get: function get() {\n      return this.mounted ? this.scrollContainer.scrollLeftMax : 0;\n    }\n  }, {\n    key: \"scrollTop\",\n    get: function get() {\n      return this.mounted ? this.getScrollingElement().scrollTop : 0;\n    },\n    set: function set(value) {\n      var element = this.getScrollingElement();\n\n      if (element) {\n        element.scrollTop = value;\n      }\n    }\n  }, {\n    key: \"scrollLeft\",\n    get: function get() {\n      return this.mounted ? this.getScrollingElement().scrollLeft : 0;\n    },\n    set: function set(value) {\n      var element = this.getScrollingElement();\n\n      if (element) {\n        element.scrollLeft = value;\n      }\n    }\n  }]);\n  return InovuaVirtualList;\n}(_react.Component);\n\nexports.default = InovuaVirtualList;\nInovuaVirtualList.defaultProps = {\n  minRowHeight: 20,\n  nativeScroll: false,\n  shouldAllowScrollbars: function shouldAllowScrollbars() {\n    return true;\n  },\n  rafOnResize: false,\n  theme: 'default',\n  showEmptyRows: false,\n  showWarnings: !_uglified.default,\n  virtualized: true,\n  scrollOneDirectionOnly: false,\n  useTransformPosition: !IS_EDGE && (0, _src.hasSticky)(),\n  useTransformRowPosition: false,\n  recycleCoveredRows: true,\n  scrollProps: {}\n};\nvar propTypes = {\n  applyScrollLeft: _propTypes.default.func,\n  naturalRowHeight: _propTypes.default.bool,\n  count: function count(props) {\n    var count = props.count;\n\n    if (count == null) {\n      throw new Error(\"\\\"count\\\" is required!\");\n    }\n\n    if (typeof count != 'number') {\n      throw new Error(\"\\\"count\\\" should be a number!\");\n    }\n\n    if (count < 0) {\n      throw new Error(\"\\\"count\\\" should be >= 0!\");\n    }\n  },\n  getRowFocusableElements: _propTypes.default.func,\n  contain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n  rowContain: _propTypes.default.oneOfType([_propTypes.default.bool, _propTypes.default.string]),\n  handleRowKeyDown: _propTypes.default.func,\n  rafOnResize: _propTypes.default.bool,\n  checkResizeDelay: _propTypes.default.number,\n  measureSize: _propTypes.default.func,\n  minRowHeight: _propTypes.default.number,\n  minRowWidth: _propTypes.default.number,\n  nativeScroll: _propTypes.default.bool,\n  onRenderRangeChange: _propTypes.default.func,\n  shouldFocusNextRow: _propTypes.default.func,\n  onResize: _propTypes.default.func,\n  onScrollStart: _propTypes.default.func,\n  onScrollbarsChange: _propTypes.default.func,\n  onScrollStop: _propTypes.default.func,\n  pureRows: _propTypes.default.bool,\n  rowHeight: _propTypes.default.number,\n  renderRow: _propTypes.default.func.isRequired,\n  renderRowContainer: _propTypes.default.func,\n  renderSizer: _propTypes.default.func,\n  showEmptyRows: _propTypes.default.bool,\n  useTransformPosition: _propTypes.default.bool,\n  useTransformRowPosition: _propTypes.default.bool,\n  scrollProps: _propTypes.default.object,\n  showWarnings: _propTypes.default.bool,\n  renderView: _propTypes.default.func,\n  renderScroller: _propTypes.default.func,\n  shouldComponentUpdate: _propTypes.default.func,\n  shouldPreventDefaultTabKeyOnRow: _propTypes.default.func,\n  theme: _propTypes.default.string,\n  overscrollBehavior: _propTypes.default.string,\n  virtualized: _propTypes.default.bool,\n  scrollOneDirectionOnly: _propTypes.default.bool,\n  stickyRows: _propTypes.default.object,\n  recycleCoveredRows: _propTypes.default.bool,\n  stickyOffset: _propTypes.default.number,\n  enableRowSpan: _propTypes.default.bool,\n  rowHeightManager: function rowHeightManager(props, propName) {\n    var value = props[propName];\n\n    if (!value) {\n      return new Error(\"\\nYou have to provide a \\\"rowHeightManager\\\" property, which should be an instance of RowHeightManager.\\n\");\n    }\n\n    if (!(value instanceof _RowHeightManager.default)) {\n      return new Error('The \"rowHeightManager\" property should be an instance of RowHeightManager!');\n    }\n  }\n};\nexports.propTypes = propTypes;\nInovuaVirtualList.propTypes = propTypes;"]},"metadata":{},"sourceType":"script"}