{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _deepGet = _interopRequireDefault(require(\"../../deep-get\"));\n\nvar curry = require('./curry');\n\nvar TYPES = require('./types');\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nvar sorty = curry(function (sortInfo, array) {\n  return array.sort(getMultiSortFunction(sortInfo));\n});\nsorty.types = TYPES;\n\nvar getSingleSortFunction = function getSingleSortFunction(info) {\n  if (!info) {\n    return;\n  }\n\n  var field = info.name;\n  var dir = info.dir === 'desc' || info.dir < 0 ? -1 : info.dir === 'asc' || info.dir > 0 ? 1 : 0;\n\n  if (!dir) {\n    return;\n  }\n\n  if (!info.fn && info.type) {\n    info.fn = sorty.types[info.type];\n  }\n\n  if (!info.fn) {\n    info.fn = sorty.types.string || TYPES.string;\n  }\n\n  var fn = info.fn;\n  return function (first, second) {\n    var a = field ? (0, _deepGet.default)(first, field) : first;\n    var b = field ? (0, _deepGet.default)(second, field) : second;\n    return dir * fn(a, b, first, second, info);\n  };\n};\n\nvar getSortFunctions = function getSortFunctions(sortInfo) {\n  if (!Array.isArray(sortInfo)) {\n    sortInfo = [sortInfo];\n  }\n\n  return sortInfo.map(getSingleSortFunction).filter(isFn);\n};\n\nvar getMultiSortFunction = function getMultiSortFunction(sortInfo) {\n  var fns = getSortFunctions(sortInfo);\n  return function (first, second) {\n    var result = 0;\n    var i = 0;\n    var len = fns.length;\n    var fn;\n\n    for (; i < len; i++) {\n      fn = fns[i];\n\n      if (!fn) {\n        continue;\n      }\n\n      result = fn(first, second);\n\n      if (result != 0) {\n        return result;\n      }\n    }\n\n    return result;\n  };\n};\n\nsorty._getSortFunctions = getSortFunctions;\nsorty.getFunction = getMultiSortFunction;\nvar _default = sorty;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/sorty/src/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_deepGet","curry","TYPES","isFn","fn","sorty","sortInfo","array","sort","getMultiSortFunction","types","getSingleSortFunction","info","field","name","dir","type","string","first","second","a","b","getSortFunctions","Array","isArray","map","filter","fns","result","i","len","length","_getSortFunctions","getFunction","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _deepGet = _interopRequireDefault(require(\"../../deep-get\"));\n\nvar curry = require('./curry');\n\nvar TYPES = require('./types');\n\nfunction isFn(fn) {\n  return typeof fn === 'function';\n}\n\nvar sorty = curry(function (sortInfo, array) {\n  return array.sort(getMultiSortFunction(sortInfo));\n});\nsorty.types = TYPES;\n\nvar getSingleSortFunction = function getSingleSortFunction(info) {\n  if (!info) {\n    return;\n  }\n\n  var field = info.name;\n  var dir = info.dir === 'desc' || info.dir < 0 ? -1 : info.dir === 'asc' || info.dir > 0 ? 1 : 0;\n\n  if (!dir) {\n    return;\n  }\n\n  if (!info.fn && info.type) {\n    info.fn = sorty.types[info.type];\n  }\n\n  if (!info.fn) {\n    info.fn = sorty.types.string || TYPES.string;\n  }\n\n  var fn = info.fn;\n  return function (first, second) {\n    var a = field ? (0, _deepGet.default)(first, field) : first;\n    var b = field ? (0, _deepGet.default)(second, field) : second;\n    return dir * fn(a, b, first, second, info);\n  };\n};\n\nvar getSortFunctions = function getSortFunctions(sortInfo) {\n  if (!Array.isArray(sortInfo)) {\n    sortInfo = [sortInfo];\n  }\n\n  return sortInfo.map(getSingleSortFunction).filter(isFn);\n};\n\nvar getMultiSortFunction = function getMultiSortFunction(sortInfo) {\n  var fns = getSortFunctions(sortInfo);\n  return function (first, second) {\n    var result = 0;\n    var i = 0;\n    var len = fns.length;\n    var fn;\n\n    for (; i < len; i++) {\n      fn = fns[i];\n\n      if (!fn) {\n        continue;\n      }\n\n      result = fn(first, second);\n\n      if (result != 0) {\n        return result;\n      }\n    }\n\n    return result;\n  };\n};\n\nsorty._getSortFunctions = getSortFunctions;\nsorty.getFunction = getMultiSortFunction;\nvar _default = sorty;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}