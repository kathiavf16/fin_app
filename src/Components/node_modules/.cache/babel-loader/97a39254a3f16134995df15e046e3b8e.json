{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _autoBind = _interopRequireDefault(require(\"../../../packages/react-class/autoBind\"));\n\nvar _reactCleanProps = _interopRequireDefault(require(\"../../../packages/react-clean-props\"));\n\nvar _shallowequal = _interopRequireWildcard(require(\"../../../packages/shallowequal\"));\n\nvar _join = _interopRequireDefault(require(\"../../../packages/join\"));\n\nvar _clamp = _interopRequireDefault(require(\"../../../utils/clamp\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nvar _renderCellsMaybeLocked = _interopRequireDefault(require(\"./renderCellsMaybeLocked\"));\n\nvar _adjustCellProps = _interopRequireDefault(require(\"./adjustCellProps\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar CLASS_NAME = 'InovuaReactDataGrid__row';\n\nvar rowClean = function rowClean(p) {\n  var result = _objectSpread({}, p);\n\n  delete result.activeRowRef;\n  return result;\n};\n\nvar skipSelect = function skipSelect(event) {\n  event.nativeEvent.skipSelect = true;\n};\n\nvar getValueForPivotColumn = function getValueForPivotColumn(item, path) {\n  return path.reduce(function (acc, field, index) {\n    if (!acc || acc[field] == null) {\n      return null;\n    }\n\n    if (index === path.length - 1) {\n      return acc[field];\n    }\n\n    return acc[field].pivotSummary || acc[field].values;\n  }, item);\n};\n\nvar getValueForPivotColumnSummary = function getValueForPivotColumnSummary(item, _ref) {\n  var path = _ref.pivotSummaryPath;\n  var i = 0;\n  var root = item;\n  var current;\n\n  while ((current = path[i]) && root) {\n    if (!root.pivotSummary) {\n      return null;\n    }\n\n    root = root.pivotSummary[current.value];\n    i++;\n  }\n\n  if (root && root.pivotColumnSummary) {\n    return root.pivotColumnSummary[path[path.length - 1].field];\n  }\n\n  return null;\n};\n\nvar DataGridRow = function (_React$Component) {\n  (0, _inherits2.default)(DataGridRow, _React$Component);\n\n  var _super = _createSuper(DataGridRow);\n\n  function DataGridRow(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DataGridRow);\n    _this = _super.call(this, props);\n    _this.cells = [];\n    _this.columnRenderStartIndex = 0;\n    _this.scrollingDirection = 'vertical';\n    _this.scrollingInProgress = false;\n    _this.hasBorderTop = false;\n    _this.hasBorderBottom = false;\n    _this.rafId = null;\n    _this.shouldUpdate = false;\n\n    _this.getVirtualizeColumns = function () {\n      return _this.props.virtualizeColumns;\n      return _this.scrollingDirection !== 'horizontal' ? _this.props.virtualizeColumns : false;\n    };\n\n    _this.cellRef = function (c) {\n      if (!c) {\n        return;\n      }\n\n      _this.cells.push(c);\n    };\n\n    _this.domRef = (0, _react.createRef)();\n    _this.cells = [];\n    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(DataGridRow, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var areEqual = (0, _shallowequal.equalReturnKey)(this.props, nextProps, {\n        computedActiveCell: 1,\n        computedActiveIndex: 1,\n        activeRowRef: 1,\n        active: 1,\n        onKeyDown: 1,\n        onFocus: 1,\n        setRowSpan: 1,\n        passedProps: 1,\n        computedRowspans: 1,\n        lockedStartColumns: 1,\n        selection: 1,\n        lockedEndColumns: 1,\n        unlockedColumns: 1,\n        maxVisibleRows: 1,\n        onClick: 1,\n        style: 1\n      });\n\n      if (!areEqual.result) {\n        return true;\n      }\n\n      if (this.props.active !== nextProps.active) {\n        return true;\n      }\n\n      if (JSON.stringify(this.props.style) !== JSON.stringify(nextProps.style)) {\n        return true;\n      }\n\n      var prevActiveCellRow, prevActiveColumn;\n      var activeCellRow, activeColumn;\n\n      if (this.props.computedActiveCell) {\n        var _this$props$computedA = (0, _slicedToArray2.default)(this.props.computedActiveCell, 2);\n\n        prevActiveCellRow = _this$props$computedA[0];\n        prevActiveColumn = _this$props$computedA[1];\n      }\n\n      if (nextProps.computedActiveCell) {\n        var _nextProps$computedAc = (0, _slicedToArray2.default)(nextProps.computedActiveCell, 2);\n\n        activeCellRow = _nextProps$computedAc[0];\n        activeColumn = _nextProps$computedAc[1];\n      }\n\n      if (activeCellRow !== prevActiveCellRow) {\n        if (nextProps.rowIndex === activeCellRow || nextProps.rowIndex === prevActiveCellRow) {\n          return true;\n        }\n      } else {\n        if (nextProps.rowIndex === activeCellRow && activeColumn !== prevActiveColumn) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"onCellUnmount\",\n    value: function onCellUnmount(cellProps, cell) {\n      if (this.cells) {\n        this.cells = this.cells.filter(function (c) {\n          return c !== cell;\n        });\n      }\n    }\n  }, {\n    key: \"cleanupCells\",\n    value: function cleanupCells() {\n      this.cells = this.cells.filter(Boolean);\n      return this.cells;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cells = [];\n    }\n  }, {\n    key: \"xshouldComponentUpdate\",\n    value: function xshouldComponentUpdate(nextProps) {\n      var _this2 = this;\n\n      if (this.rafId != null) {\n        cancelAnimationFrame(this.rafId);\n        this.rafId = null;\n      }\n\n      if (this.shouldUpdate) {\n        this.shouldUpdate = false;\n        return true;\n      }\n\n      var props = this.props;\n      this.rafId = requestAnimationFrame(function () {\n        _this2.rafId = null;\n\n        if (!(0, _shallowequal.default)(nextProps, props)) {\n          _this2.shouldUpdate = true;\n\n          _this2.forceUpdate();\n        }\n      });\n      return false;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.columnRenderCount < this.props.columnRenderCount) {\n        this.cleanupCells();\n        this.getCells().forEach(function (cell) {\n          if (cell.getProps().computedLocked) {\n            return;\n          }\n\n          cell.setStateProps(null);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.props.activeRowRef.current = {\n          instance: this,\n          node: this.getDOMNode()\n        };\n      }\n    }\n  }, {\n    key: \"getDOMNode\",\n    value: function getDOMNode() {\n      return this.domRef.current;\n    }\n  }, {\n    key: \"orderCells\",\n    value: function orderCells() {\n      var cells = this.cleanupCells();\n      var sortedProps = cells.map(function (c) {\n        return c.getProps();\n      }).sort(function (p1, p2) {\n        return p1.index - p2.index;\n      });\n      cells.sort(function (cell1, cell2) {\n        return cell1.props.renderIndex - cell2.props.renderIndex;\n      });\n      cells.forEach(function (c, i) {\n        c.setStateProps(sortedProps[i]);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.groupProps && this.props.rowIndex != prevProps.rowIndex) {\n        this.fixForColspan();\n      }\n\n      if (this.props.editing && !prevProps.editing) {\n        this.updateEditCell();\n      }\n\n      if (!prevProps.active && this.props.active) {\n        this.props.activeRowRef.current = {\n          instance: this,\n          node: this.getDOMNode()\n        };\n      }\n    }\n  }, {\n    key: \"updateEditCell\",\n    value: function updateEditCell() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var cells = this.getCells();\n      var editColumnIndex = props.editColumnIndex;\n\n      for (var i = 0, len = cells.length, cell; i < len; i++) {\n        cell = cells[i];\n\n        if (this.getCellIndex(cell) === editColumnIndex) {\n          this.setCellIndex(cell, editColumnIndex);\n        }\n\n        if (cell.getProps().inEdit) {\n          this.setCellIndex(cell, this.getCellIndex(cell));\n        }\n      }\n    }\n  }, {\n    key: \"fixForColspan\",\n    value: function fixForColspan() {\n      if (this.props.computedHasColSpan) {\n        this.setColumnRenderStartIndex(this.columnRenderStartIndex);\n      }\n    }\n  }, {\n    key: \"setScrolling\",\n    value: function setScrolling(scrolling) {\n      var node = this.getDOMNode() || this.domRef.current;\n      var scrollingDirection = this.scrollingDirection;\n\n      if (scrolling !== false) {\n        scrollingDirection = scrolling;\n      }\n\n      var oldScrollingInProgress = this.scrollingInProgress;\n      var oldScrollingDirection = this.scrollingDirection;\n      this.scrollingDirection = scrollingDirection;\n      this.scrollingInProgress = scrolling ? true : false;\n\n      if (!node) {\n        return;\n      }\n\n      if (oldScrollingInProgress !== this.scrollingInProgress) {\n        var className = \"\".concat(CLASS_NAME, \"--scrolling\");\n\n        if (this.scrollingInProgress) {\n          node.classList.add(className);\n        } else {\n          node.classList.remove(className);\n        }\n      }\n\n      return;\n\n      if (this.scrollingDirection === oldScrollingDirection) {\n        return;\n      }\n\n      var virtualizeColumnsClassName = \"\".concat(CLASS_NAME, \"--virtualize-columns\");\n      var virtualizeColumns = this.getVirtualizeColumns();\n\n      if (virtualizeColumns) {\n        node.classList.add(virtualizeColumnsClassName);\n      } else {\n        node.classList.remove(virtualizeColumnsClassName);\n      }\n\n      if (oldScrollingDirection !== this.scrollingDirection) {\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var rowHeight = props.rowHeight,\n          defaultRowHeight = props.defaultRowHeight,\n          rowExpandHeight = props.rowExpandHeight,\n          initialRowHeight = props.initialRowHeight,\n          maxRowHeight = props.maxRowHeight,\n          groupNestingSize = props.groupNestingSize,\n          summaryProps = props.summaryProps,\n          data = props.data,\n          id = props.id,\n          columns = props.columns,\n          minWidth = props.minWidth,\n          maxWidth = props.maxWidth,\n          rowStyle = props.rowStyle,\n          scrollbars = props.scrollbars,\n          renderRow = props.renderRow,\n          computedRowExpandEnabled = props.computedRowExpandEnabled,\n          even = props.even,\n          odd = props.odd,\n          active = props.active,\n          selected = props.selected,\n          expanded = props.expanded,\n          passedProps = props.passedProps,\n          realIndex = props.realIndex,\n          remoteRowIndex = props.remoteRowIndex,\n          nativeScroll = props.nativeScroll,\n          indexInGroup = props.indexInGroup,\n          naturalRowHeight = props.naturalRowHeight,\n          rowDetailsStyle = props.rowDetailsStyle,\n          renderDetailsGrid = props.renderDetailsGrid,\n          last = props.last,\n          empty = props.empty,\n          computedPivot = props.computedPivot,\n          computedShowZebraRows = props.computedShowZebraRows,\n          rowDetailsWidth = props.rowDetailsWidth,\n          scrollLeft = props.scrollLeft,\n          availableWidth = props.availableWidth,\n          groupProps = props.groupProps,\n          groupColumn = props.groupColumn,\n          computedRenderRowDetails = props.computedRenderRowDetails,\n          dataSourceArray = props.dataSourceArray,\n          onRenderRow = props.onRenderRow,\n          shouldRenderCollapsedRowDetails = props.shouldRenderCollapsedRowDetails,\n          editing = props.editing,\n          rtl = props.rtl,\n          sticky = props.sticky,\n          hasLockedEnd = props.hasLockedEnd,\n          hasLockedStart = props.hasLockedStart,\n          showHorizontalCellBorders = props.showHorizontalCellBorders;\n      var rowClassName = props.rowClassName;\n      var virtualizeColumns = this.getVirtualizeColumns();\n      var lastInGroup = indexInGroup == props.groupCount - 1;\n      var className = (0, _join.default)(props.className, CLASS_NAME, this.scrollingInProgress && \"\".concat(CLASS_NAME, \"--scrolling\"), empty && \"\".concat(CLASS_NAME, \"--empty\"), editing && \"\".concat(CLASS_NAME, \"--editing\"), \"\".concat(CLASS_NAME, \"--direction-\").concat(rtl ? 'rtl' : 'ltr'), computedShowZebraRows && even && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--even\"), computedShowZebraRows && odd && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--odd\"), !computedShowZebraRows && !groupProps && \"\".concat(CLASS_NAME, \"--no-zebra\"), groupProps && \"\".concat(CLASS_NAME, \"--group-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-position-\").concat(summaryProps.position), groupProps && groupProps.collapsed && \"\".concat(CLASS_NAME, \"--collapsed\"), selected && \"\".concat(CLASS_NAME, \"--selected\"), expanded && \"\".concat(CLASS_NAME, \"--expanded\"), hasLockedStart ? \"\".concat(CLASS_NAME, \"--has-locked-start\") : \"\".concat(CLASS_NAME, \"--no-locked-start\"), hasLockedEnd ? \"\".concat(CLASS_NAME, \"--has-locked-end\") : \"\".concat(CLASS_NAME, \"--no-locked-end\"), showHorizontalCellBorders && \"\".concat(CLASS_NAME, \"--show-horizontal-borders\"), active && \"\".concat(CLASS_NAME, \"--active\"), virtualizeColumns && \"\".concat(CLASS_NAME, \"--virtualize-columns\"), rowHeight && \"\".concat(CLASS_NAME, \"--rowheight\"), realIndex == 0 && \"\".concat(CLASS_NAME, \"--first\"), last && \"\".concat(CLASS_NAME, \"--last\"), indexInGroup == 0 && \"\".concat(CLASS_NAME, \"--first-in-group\"), lastInGroup && \"\".concat(CLASS_NAME, \"--last-in-group\"));\n\n      if (passedProps) {\n        className = (0, _join.default)(className, selected && passedProps.selectedClassName);\n      }\n\n      var style = _objectSpread(_objectSpread({}, props.style), {}, {\n        height: naturalRowHeight ? null : rowHeight,\n        width: props.width,\n        minWidth: minWidth,\n        direction: 'ltr'\n      });\n\n      if (maxWidth != null) {\n        style.maxWidth = maxWidth;\n      }\n\n      if (maxRowHeight != null) {\n        style.maxHeight = maxRowHeight;\n      }\n\n      if (rowStyle) {\n        if (typeof rowStyle === 'function') {\n          var rowStyleResult = rowStyle({\n            data: data,\n            props: props,\n            style: style\n          });\n\n          if (rowStyleResult !== undefined) {\n            style = _objectSpread(_objectSpread({}, style), rowStyleResult);\n          }\n        } else {\n          style = _objectSpread(_objectSpread({}, style), rowStyle);\n        }\n      }\n\n      if (rowClassName) {\n        if (typeof rowClassName == 'function') {\n          rowClassName = rowClassName({\n            data: data,\n            props: props,\n            className: className\n          });\n        }\n\n        if (rowClassName && typeof rowClassName == 'string') {\n          className = (0, _join.default)(className, rowClassName);\n        }\n      }\n\n      var rowProps = _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n        className: className,\n        style: style,\n        ref: this.domRef\n      }, passedProps), {}, {\n        onClick: this.onClick,\n        onContextMenu: this.onContextMenu\n      });\n\n      rowProps.children = [_react.default.createElement(\"div\", {\n        key: \"cellWrap\",\n        className: \"InovuaReactDataGrid__row-cell-wrap InovuaReactDataGrid__row-hover-target\",\n        style: {\n          width: props.width,\n          height: naturalRowHeight ? null : rowHeight,\n          position: 'absolute',\n          top: 0,\n          left: rtl ? -(props.emptyScrollOffset || 0) : 0\n        }\n      }, this.renderRow(data, columns, style))];\n      var groupDepth = groupColumn ? 0 : data && data.__group ? data.depth - 1 : data && data.__summary ? rowProps.summaryProps.depth : this.props.depth || 0;\n      var activeBordersDiv = sticky ? _react.default.createElement(\"div\", {\n        key: \"active-row-borders\",\n        className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-active-borders\"), this.hasBorderTop && \"\".concat(CLASS_NAME, \"-active-borders--has-border-top\"), this.hasBorderBottom && \"\".concat(CLASS_NAME, \"-actived-borders--has-border-bottom\"))\n      }) : null;\n      var shouldRender = expanded || shouldRenderCollapsedRowDetails;\n\n      if (computedRowExpandEnabled && shouldRender && !data.__group) {\n        var rowDetailsInfo = {\n          data: data,\n          rtl: rtl,\n          isRowExpandable: this.isRowExpandable,\n          rowIndex: realIndex,\n          remoteRowIndex: remoteRowIndex,\n          rowId: this.props.getItemId(data),\n          rowExpanded: expanded,\n          id: id,\n          rowSelected: selected,\n          rowActive: active,\n          toggleRowExpand: this.toggleRowExpand,\n          setRowExpanded: this.setRowExpanded,\n          dataSource: dataSourceArray\n        };\n        var detailsStyle = {\n          position: 'absolute',\n          height: rowHeight - initialRowHeight,\n          overflow: renderDetailsGrid ? 'visible' : 'auto',\n          top: initialRowHeight\n        };\n\n        if (rtl) {\n          detailsStyle.direction = 'rtl';\n        }\n\n        if (rowDetailsWidth == 'max-viewport-width') {\n          detailsStyle.width = Math.min(availableWidth, props.width || maxWidth);\n        }\n\n        if (rowDetailsWidth === 'min-viewport-width') {\n          detailsStyle.width = Math.max(availableWidth, props.width || maxWidth);\n        }\n\n        if (rowDetailsWidth === 'viewport-width') {\n          detailsStyle.width = availableWidth;\n        }\n\n        if (groupDepth) {\n          detailsStyle[rtl ? 'paddingRight' : 'paddingLeft'] = (groupNestingSize || 0) * groupDepth;\n        }\n\n        detailsStyle[rtl ? 'right' : 'left'] = 0;\n\n        if (isNaN(detailsStyle.width)) {\n          delete detailsStyle.width;\n        }\n\n        if (!expanded) {\n          detailsStyle.display = 'none';\n        }\n\n        if (rowDetailsStyle) {\n          if (typeof rowDetailsStyle === 'function') {\n            var styleResult = rowDetailsStyle(detailsStyle, rowDetailsInfo);\n\n            if (styleResult !== undefined) {\n              detailsStyle = styleResult;\n            }\n          } else {\n            detailsStyle = _objectSpread(_objectSpread({}, detailsStyle), rowDetailsStyle);\n          }\n        }\n\n        var showBorderBottom = !lastInGroup || last;\n\n        if (nativeScroll && last && expanded) {\n          showBorderBottom = false;\n        }\n\n        rowProps.children.push(_react.default.createElement(\"div\", {\n          key: \"rowDetails\",\n          style: detailsStyle,\n          onClick: skipSelect,\n          className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-details\"), \"\".concat(CLASS_NAME, \"-details--\").concat(rowDetailsWidth), renderDetailsGrid ? \"\".concat(CLASS_NAME, \"-details--details-grid\") : null, !nativeScroll || nativeScroll && scrollbars && !scrollbars.vertical || availableWidth > minWidth ? \"\".concat(CLASS_NAME, \"-details--show-border-right\") : null, showBorderBottom ? \"\".concat(CLASS_NAME, \"-details--show-border-bottom\") : '')\n        }, this.renderRowDetails(rowDetailsInfo, rowProps)), _react.default.createElement(\"div\", {\n          className: \"\".concat(CLASS_NAME, \"-details-special-bottom-border\"),\n          style: (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize)\n        }), groupDepth ? (0, _toConsumableArray2.default)(new Array(groupDepth)).map(function (_, index) {\n          var _style2;\n\n          return _react.default.createElement(\"div\", {\n            key: index,\n            className: \"\".concat(CLASS_NAME, \"-details-border\"),\n            style: (_style2 = {\n              height: '100%',\n              position: 'absolute'\n            }, (0, _defineProperty2.default)(_style2, rtl ? 'right' : 'left', (index + 1) * groupNestingSize), (0, _defineProperty2.default)(_style2, \"top\", 0), _style2)\n          });\n        }) : null, rowDetailsWidth != 'max-viewport-width' ? _react.default.createElement(\"div\", {\n          key: \"rowDetailsBorder\",\n          style: (0, _defineProperty2.default)({\n            top: initialRowHeight - 1,\n            width: availableWidth\n          }, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize),\n          className: \"\".concat(CLASS_NAME, \"-details-special-top-border\")\n        }) : null);\n      }\n\n      if (sticky) {\n        if (activeBordersDiv) {\n          var _style4;\n\n          rowProps.children.push(_react.default.createElement(\"div\", {\n            key: \"active-row-borders\",\n            className: \"InovuaReactDataGrid__row-active-borders-wrapper\",\n            style: (_style4 = {\n              height: initialRowHeight,\n              position: 'absolute',\n              top: 0\n            }, (0, _defineProperty2.default)(_style4, rtl ? 'right' : 'left', (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"width\", availableWidth - (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"pointerEvents\", 'none'), _style4)\n          }, activeBordersDiv));\n        }\n      }\n\n      var row;\n\n      if (renderRow) {\n        row = renderRow(rowProps);\n      }\n\n      if (onRenderRow) {\n        onRenderRow(rowProps);\n      }\n\n      if (row === undefined) {\n        row = _react.default.createElement(\"div\", Object.assign({}, (0, _reactCleanProps.default)(rowProps, DataGridRow.propTypes), {\n          id: null,\n          data: null,\n          value: null\n        }));\n      }\n\n      return row;\n    }\n  }, {\n    key: \"renderRowDetails\",\n    value: function renderRowDetails(rowDetailsInfo, rowProps) {\n      var computedRenderRowDetails = this.props.computedRenderRowDetails;\n\n      if (computedRenderRowDetails) {\n        return computedRenderRowDetails(rowDetailsInfo);\n      }\n\n      return 'Please specify `renderRowDetails`';\n    }\n  }, {\n    key: \"onContextMenu\",\n    value: function onContextMenu(event) {\n      var props = this.props;\n      var passedProps = props.passedProps,\n          onRowContextMenu = props.onRowContextMenu;\n\n      if (onRowContextMenu) {\n        onRowContextMenu(props, event);\n      }\n\n      if (passedProps && passedProps.onContextMenu) {\n        passedProps.onContextMenu(event, props);\n      }\n    }\n  }, {\n    key: \"setCellIndex\",\n    value: function setCellIndex(cell, index, cellProps) {\n      cellProps = cellProps || (this.props.computedHasColSpan ? this.getPropsForCells().slice(index, index + 1)[0] : this.getPropsForCells(index, index)[0]);\n      cell.setStateProps(cellProps);\n    }\n  }, {\n    key: \"getCellIndex\",\n    value: function getCellIndex(cell) {\n      return cell.getProps().computedVisibleIndex;\n    }\n  }, {\n    key: \"sortCells\",\n    value: function sortCells(cells) {\n      var _this3 = this;\n\n      return cells.sort(function (cell1, cell2) {\n        return _this3.getCellIndex(cell1) - _this3.getCellIndex(cell2);\n      });\n    }\n  }, {\n    key: \"getCellAt\",\n    value: function getCellAt(index) {\n      return this.getCells().filter(function (c) {\n        return c.getProps().computedVisibleIndex === index;\n      })[0];\n    }\n  }, {\n    key: \"getCellById\",\n    value: function getCellById(id) {\n      return this.getCells().filter(function (c) {\n        return c.getProps().id === id;\n      })[0];\n    }\n  }, {\n    key: \"getCells\",\n    value: function getCells() {\n      return this.cells;\n    }\n  }, {\n    key: \"getSortedCells\",\n    value: function getSortedCells() {\n      return this.sortCells(this.getCells().slice());\n    }\n  }, {\n    key: \"getGaps\",\n    value: function getGaps(startIndex, endIndex) {\n      var visibleCellPositions = {};\n      this.getSortedCells().forEach(function (cell) {\n        var cellProps = cell.getProps();\n\n        if (cellProps.computedLocked) {\n          return;\n        }\n\n        var computedVisibleIndex = cellProps.computedVisibleIndex,\n            computedColspan = cellProps.computedColspan,\n            groupProps = cellProps.groupProps;\n\n        if (groupProps && computedVisibleIndex <= groupProps.depth + 1) {\n          return;\n        }\n\n        visibleCellPositions[computedVisibleIndex] = true;\n\n        if (computedColspan) {\n          for (var i = 0; i < computedColspan; i++) {\n            visibleCellPositions[computedVisibleIndex + i] = true;\n          }\n        }\n      });\n      var gaps = [];\n\n      for (; startIndex <= endIndex; startIndex++) {\n        if (!visibleCellPositions[startIndex]) {\n          gaps.push(startIndex);\n        }\n      }\n\n      return gaps;\n    }\n  }, {\n    key: \"toggleRowExpand\",\n    value: function toggleRowExpand(rowIndex) {\n      if (typeof rowIndex !== 'number') {\n        rowIndex = this.props.realIndex;\n      }\n\n      this.props.toggleRowExpand(rowIndex);\n    }\n  }, {\n    key: \"toggleNodeExpand\",\n    value: function toggleNodeExpand(rowIndex) {\n      if (typeof rowIndex !== 'number') {\n        rowIndex = this.props.realIndex;\n      }\n\n      this.props.toggleNodeExpand(rowIndex);\n    }\n  }, {\n    key: \"isRowExpandable\",\n    value: function isRowExpandable(rowIndex) {\n      if (typeof rowIndex !== 'number') {\n        rowIndex = this.props.realIndex;\n      }\n\n      return this.props.isRowExpandableAt(rowIndex);\n    }\n  }, {\n    key: \"setRowExpanded\",\n    value: function setRowExpanded(expanded, _) {\n      var rowIndex = this.props.realIndex;\n      var _expanded = expanded;\n\n      if (typeof expanded === 'number') {\n        rowIndex = expanded;\n        _expanded = _;\n      }\n\n      this.props.setRowExpanded(rowIndex, _expanded);\n    }\n  }, {\n    key: \"getCurrentGaps\",\n    value: function getCurrentGaps() {}\n  }, {\n    key: \"setColumnRenderStartIndex\",\n    value: function setColumnRenderStartIndex(columnRenderStartIndex) {\n      var _this4 = this;\n\n      if (this.columnRenderStartIndex === columnRenderStartIndex) {\n        return;\n      }\n\n      this.columnRenderStartIndex = columnRenderStartIndex;\n\n      if (this.getVirtualizeColumns() === false) {\n        return;\n      }\n\n      var newCellProps;\n      var renderRange;\n      var cellPropsAt;\n\n      if (this.props.computedHasColSpan) {\n        newCellProps = this.getPropsForCells();\n        renderRange = this.getColumnRenderRange(newCellProps);\n\n        cellPropsAt = function cellPropsAt(index) {\n          return newCellProps[index];\n        };\n      } else {\n        var _renderRange, _renderRange2;\n\n        renderRange = this.getColumnRenderRange();\n        newCellProps = this.getPropsForCells((_renderRange = renderRange) === null || _renderRange === void 0 ? void 0 : _renderRange.start, (((_renderRange2 = renderRange) === null || _renderRange2 === void 0 ? void 0 : _renderRange2.end) || 0) + 1);\n\n        cellPropsAt = function cellPropsAt(index) {\n          return newCellProps.filter(function (cellProps) {\n            return cellProps.computedVisibleIndex === index;\n          })[0];\n        };\n      }\n\n      if (!renderRange) {\n        return;\n      }\n\n      var _renderRange3 = renderRange,\n          start = _renderRange3.start,\n          end = _renderRange3.end;\n      var gaps = this.getGaps(start, end);\n\n      if (!gaps.length) {\n        return;\n      }\n\n      var gapsMap = gaps.reduce(function (acc, gapIndex) {\n        acc[gapIndex] = true;\n        return acc;\n      }, {});\n      var tempCellMap = {};\n      var groupColumn = this.props.groupColumn;\n      var calls = [];\n      this.getCells().forEach(function (cell) {\n        var cellProps = cell.getProps();\n        var groupProps = cellProps.groupProps,\n            cellIndex = cellProps.computedVisibleIndex,\n            computedColspan = cellProps.computedColspan,\n            computedLocked = cellProps.computedLocked;\n\n        if (computedLocked) {\n          return;\n        }\n\n        if (!groupColumn && groupProps && cellIndex <= groupProps.depth + 1) {\n          return;\n        }\n\n        var outside = cellIndex < start || cellIndex > end || cellIndex === undefined;\n\n        if (outside && computedColspan) {\n          var endCellIndex = cellIndex + (computedColspan - 1);\n          outside = cellIndex < start && endCellIndex < start || cellIndex > end;\n        }\n\n        var outOfView = outside || tempCellMap[cellIndex] || gapsMap[cellIndex];\n        tempCellMap[cellIndex] = true;\n        var newIndex;\n\n        if (outOfView && gaps.length) {\n          newIndex = gaps[gaps.length - 1];\n          calls.push([cell, newIndex]);\n          gaps.length -= 1;\n        }\n      });\n      calls.forEach(function (call) {\n        var cell = call[0];\n        var newIndex = call[1];\n\n        _this4.setCellIndex(cell, newIndex, cellPropsAt(newIndex));\n      });\n    }\n  }, {\n    key: \"getPropsForCells\",\n    value: function getPropsForCells(startIndex, endIndex) {\n      var _this5 = this;\n\n      var initialColumns = this.props.columns;\n      var columns = initialColumns;\n      var props = this.props;\n      var hasLockedStart = props.hasLockedStart,\n          data = props.data,\n          onGroupToggle = props.onGroupToggle,\n          computedPivot = props.computedPivot,\n          rowHeight = props.rowHeight,\n          remoteRowIndex = props.remoteRowIndex,\n          defaultRowHeight = props.defaultRowHeight,\n          initialRowHeight = props.initialRowHeight,\n          lastLockedStartIndex = props.lastLockedStartIndex,\n          lastLockedEndIndex = props.lastLockedEndIndex,\n          lastUnlockedIndex = props.lastUnlockedIndex,\n          minRowHeight = props.minRowHeight,\n          realIndex = props.realIndex,\n          showHorizontalCellBorders = props.showHorizontalCellBorders,\n          showVerticalCellBorders = props.showVerticalCellBorders,\n          empty = props.empty,\n          treeColumn = props.treeColumn,\n          groupColumn = props.groupColumn,\n          totalDataCount = props.totalDataCount,\n          depth = props.depth,\n          dataSourceArray = props.dataSourceArray,\n          computedGroupBy = props.computedGroupBy,\n          groupProps = props.groupProps,\n          summaryProps = props.summaryProps,\n          indexInGroup = props.indexInGroup,\n          firstUnlockedIndex = props.firstUnlockedIndex,\n          firstLockedEndIndex = props.firstLockedEndIndex,\n          selectAll = props.selectAll,\n          deselectAll = props.deselectAll,\n          columnUserSelect = props.columnUserSelect,\n          multiSelect = props.multiSelect,\n          selection = props.selection,\n          setRowSelected = props.setRowSelected,\n          computedRowExpandEnabled = props.computedRowExpandEnabled,\n          rtl = props.rtl,\n          lastRow = props.last,\n          computedCellSelection = props.computedCellSelection,\n          lastNonEmpty = props.lastNonEmpty,\n          maxVisibleRows = props.maxVisibleRows,\n          onCellClick = props.onCellClick,\n          editStartEvent = props.editStartEvent,\n          naturalRowHeight = props.naturalRowHeight,\n          renderNodeTool = props.renderNodeTool,\n          computedTreeEnabled = props.computedTreeEnabled,\n          rowExpanded = props.expanded,\n          expandGroupTitle = props.expandGroupTitle,\n          onCellSelectionDraggerMouseDown = props.onCellSelectionDraggerMouseDown,\n          onCellMouseDown = props.onCellMouseDown,\n          onCellEnter = props.onCellEnter,\n          computedCellMultiSelectionEnabled = props.computedCellMultiSelectionEnabled,\n          getCellSelectionKey = props.getCellSelectionKey,\n          lastCellInRange = props.lastCellInRange,\n          computedRowspans = props.computedRowspans,\n          renderIndex = props.renderIndex,\n          nativeScroll = props.nativeScroll,\n          onDragRowMouseDown = props.onDragRowMouseDown,\n          theme = props.theme,\n          onContextMenu = props.onContextMenu;\n      var virtualizeColumns = this.getVirtualizeColumns();\n      var visibleColumnCount = columns.length;\n\n      if (startIndex !== undefined) {\n        columns = columns.slice(startIndex, endIndex ? endIndex + 1 : startIndex + 1);\n      }\n\n      startIndex = startIndex || 0;\n      var hasBorderTop = false;\n      var hasBorderBottom = false;\n      var hiddenCells = {};\n      var belongsToColspan = {};\n      var columnsTillColspanStart = {};\n      var lastInGroup = indexInGroup == this.props.groupCount - 1;\n      var activeCell = props.computedActiveCell ? getCellSelectionKey.apply(void 0, (0, _toConsumableArray2.default)(props.computedActiveCell)) : null;\n      var lastInRange = lastCellInRange || activeCell || null;\n      var maxRowspan = 1;\n      var cellPropsArray = columns.map(function (column, xindex) {\n        var theColumnIndex = xindex + startIndex;\n        var columnProps = column;\n        var name = columnProps.name,\n            computedVisibleIndex = columnProps.computedVisibleIndex;\n        var value = data ? data[name] : null;\n        var rowIndex = realIndex;\n\n        if (groupProps && data && data.groupColumnSummary) {\n          value = data.groupColumnSummary[name];\n        }\n\n        if (groupProps && data && column.groupColumn) {\n          value = data.value;\n        }\n\n        if (columnProps.pivotColumnPath) {\n          value = data.pivotSummary ? getValueForPivotColumn(data.pivotSummary, columnProps.pivotColumnPath) : value;\n        }\n\n        if (columnProps.pivotGrandSummaryColumn) {} else {\n          if (columnProps.pivotSummaryPath) {\n            value = data.pivotSummary ? getValueForPivotColumnSummary(data, {\n              pivotSummaryPath: columnProps.pivotSummaryPath,\n              pivotGrandSummaryColumn: columnProps.pivotGrandSummaryColumn\n            }) : value;\n          }\n        }\n\n        var defaults = {};\n\n        if (columnUserSelect !== undefined) {\n          defaults.userSelect = columnUserSelect;\n        }\n\n        var groupTitleCell = !groupColumn && groupProps && groupProps.depth + 1 == computedVisibleIndex;\n        var groupExpandCell = !groupColumn && groupProps && groupProps.depth == computedVisibleIndex;\n\n        var cellProps = _objectSpread(_objectSpread(_objectSpread({}, defaults), columnProps), {}, {\n          remoteRowIndex: remoteRowIndex,\n          indexInColumns: theColumnIndex,\n          depth: depth,\n          editStartEvent: editStartEvent,\n          onCellClick: onCellClick,\n          computedRowspan: computedRowspans ? computedRowspans[column.id] : 1,\n          groupNestingSize: _this5.props.groupNestingSize,\n          treeNestingSize: _this5.props.treeNestingSize,\n          data: data,\n          naturalRowHeight: naturalRowHeight,\n          totalDataCount: totalDataCount,\n          onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n          onCellMouseDown: onCellMouseDown,\n          onCellEnter: onCellEnter,\n          rtl: rtl,\n          computedPivot: computedPivot,\n          selectAll: selectAll,\n          deselectAll: deselectAll,\n          selection: selection,\n          renderNodeTool: renderNodeTool,\n          onDragRowMouseDown: onDragRowMouseDown,\n          multiSelect: multiSelect,\n          treeColumn: treeColumn !== undefined ? treeColumn === columnProps.id : false,\n          setRowSelected: setRowSelected,\n          setRowExpanded: computedRowExpandEnabled ? _this5.setRowExpanded : null,\n          toggleRowExpand: computedRowExpandEnabled ? _this5.toggleRowExpand : null,\n          toggleNodeExpand: computedTreeEnabled ? _this5.toggleNodeExpand : null,\n          rowActive: _this5.props.active,\n          rowSelected: _this5.props.selected,\n          rowExpanded: rowExpanded,\n          rowIndex: rowIndex,\n          rowHeight: rowHeight,\n          groupColumnVisible: !!groupColumn,\n          minRowHeight: minRowHeight,\n          groupProps: groupProps,\n          summaryProps: summaryProps,\n          empty: empty,\n          computedGroupBy: computedGroupBy,\n          nativeScroll: nativeScroll,\n          computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n          lastRowInGroup: lastInGroup,\n          columnIndex: computedVisibleIndex,\n          first: computedVisibleIndex == 0,\n          last: computedVisibleIndex == visibleColumnCount - 1,\n          value: value,\n          virtualizeColumns: virtualizeColumns,\n          hasLockedStart: hasLockedStart,\n          rowIndexInGroup: indexInGroup,\n          rowRenderIndex: renderIndex,\n          hidden: groupProps ? expandGroupTitle && !groupColumn ? computedVisibleIndex > groupProps.depth + 1 : false : false,\n          groupTitleCell: groupTitleCell,\n          groupExpandCell: groupExpandCell,\n          isRowExpandable: computedRowExpandEnabled ? _this5.isRowExpandable : null,\n          tryRowCellEdit: _this5.tryRowCellEdit,\n          onGroupToggle: onGroupToggle,\n          initialRowHeight: rowExpanded ? initialRowHeight : rowHeight,\n          theme: theme,\n          onContextMenu: onContextMenu\n        });\n\n        if (computedCellSelection) {\n          cellProps.cellSelected = computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex)];\n\n          if (cellProps.cellSelected) {\n            cellProps.hasRightSelectedSibling = cellProps.last ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex + 1)];\n            cellProps.hasLeftSelectedSibling = cellProps.first ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex - 1)];\n            cellProps.hasTopSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex - 1, computedVisibleIndex)];\n            cellProps.hasBottomSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex + 1, computedVisibleIndex)];\n          }\n        }\n\n        if (activeCell || lastInRange) {\n          var cellKey = getCellSelectionKey(rowIndex, computedVisibleIndex);\n\n          if (activeCell && activeCell === cellKey) {\n            cellProps.cellActive = true;\n          }\n\n          if (lastInRange && lastInRange === cellKey) {\n            cellProps.lastInRange = true;\n          }\n        }\n\n        if (cellProps.visibilityTransitionDuration || cellProps.showTransitionDuration || cellProps.hideTransitionDuration) {\n          cellProps.onTransitionEnd = _this5.onTransitionEnd.bind(_this5, cellProps, columnProps);\n        }\n\n        if (_this5.props.editing && _this5.props.editColumnIndex === cellProps.columnIndex) {\n          cellProps.inEdit = true;\n          cellProps.editValue = _this5.props.editValue;\n        }\n\n        if (virtualizeColumns && !cellProps.computedLocked || _this5.props.editable || cellProps.computedEditable) {\n          cellProps.ref = _this5.cellRef;\n          cellProps.onUnmount = _this5.onCellUnmount;\n        }\n\n        var computedLocked = cellProps.computedLocked,\n            colspan = cellProps.colspan,\n            rowspan = cellProps.rowspan;\n        var lockedStart = computedLocked === 'start';\n        var lockedEnd = computedLocked === 'end';\n        var unlocked = !computedLocked;\n        var computedColspan = 1;\n\n        if (typeof colspan === 'function') {\n          computedColspan = cellProps.computedColspan = Math.max(1, colspan({\n            remoteRowIndex: remoteRowIndex,\n            dataSourceArray: dataSourceArray,\n            data: cellProps.data,\n            value: cellProps.value,\n            rowIndex: cellProps.rowIndex,\n            column: column,\n            columns: columns,\n            empty: empty\n          }));\n\n          if (lockedStart) {\n            computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedStartIndex - computedVisibleIndex + 1, 1));\n          }\n\n          if (lockedEnd) {\n            computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedEndIndex - computedVisibleIndex + 1, 1));\n          }\n\n          if (unlocked) {\n            computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastUnlockedIndex - computedVisibleIndex + 1, 1));\n          }\n\n          if (computedColspan > 1) {\n            cellProps.computedWidth = columns.slice(theColumnIndex, theColumnIndex + computedColspan).reduce(function (sum, col) {\n              if (col.id !== column.id) {\n                hiddenCells[col.id] = true;\n\n                if (column.computedLocked === col.computedLocked) {\n                  belongsToColspan[col.id] = column.id;\n                  columnsTillColspanStart[col.id] = col.computedVisibleIndex - column.computedVisibleIndex;\n                }\n              }\n\n              return sum + col.computedWidth;\n            }, 0);\n          }\n        }\n\n        cellProps.lastInSection = lockedStart ? computedVisibleIndex + computedColspan - 1 === firstUnlockedIndex - 1 : lockedEnd ? computedVisibleIndex + computedColspan - 1 === visibleColumnCount - 1 : computedVisibleIndex + computedColspan - 1 === firstLockedEndIndex - 1;\n        cellProps.firstInSection = lockedStart ? computedVisibleIndex === 0 : lockedEnd ? computedVisibleIndex === firstLockedEndIndex : computedVisibleIndex === firstUnlockedIndex;\n\n        if (computedGroupBy && !groupColumn) {\n          cellProps.noBackground = computedVisibleIndex < cellProps.depth;\n        }\n\n        if (hiddenCells[column.id]) {\n          cellProps.hidden = true;\n        }\n\n        if (belongsToColspan[column.id]) {\n          cellProps.computedColspanedBy = belongsToColspan[column.id];\n          cellProps.computedColspanToStart = columnsTillColspanStart[column.id];\n        }\n\n        if (groupProps && !groupColumn) {\n          (0, _adjustCellProps.default)(cellProps, _this5.props);\n        }\n\n        if (cellProps.hidden) {\n          cellProps.last = false;\n          cellProps.lastInSection = false;\n        } else {\n          cellProps.showBorderLeft = showVerticalCellBorders && computedVisibleIndex > 0;\n          cellProps.showBorderBottom = showHorizontalCellBorders;\n\n          if (!showVerticalCellBorders && computedGroupBy) {\n            cellProps.showBorderLeft = computedVisibleIndex > 0 && computedVisibleIndex <= computedGroupBy.length;\n          }\n\n          if (computedGroupBy) {\n            if (!cellProps.groupProps) {\n              cellProps.showBorderBottom = groupColumn ? showHorizontalCellBorders : computedVisibleIndex >= computedGroupBy.length && showHorizontalCellBorders;\n              var summaryBefore = indexInGroup === 0 && !groupColumn ? dataSourceArray[rowIndex - indexInGroup] : null;\n\n              if (summaryBefore && summaryBefore.__summary && computedVisibleIndex >= computedGroupBy.length) {\n                cellProps.showBorderBottom = false;\n              }\n            }\n\n            if (!empty) {\n              if (!groupColumn && (computedVisibleIndex < computedGroupBy.length || lastInGroup)) {\n                cellProps.showBorderBottom = rowExpanded;\n              }\n\n              if (cellProps.groupProps) {\n                cellProps.showBorderBottom = cellProps.groupProps.collapsed ? !!groupColumn : groupColumn ? true : computedVisibleIndex > cellProps.groupProps.depth && cellProps.groupProps.depth >= computedGroupBy.length;\n                cellProps.showBorderTop = groupTitleCell || groupExpandCell || !expandGroupTitle && !groupColumn;\n              } else if (indexInGroup === 0 && !groupColumn) {\n                cellProps.showBorderTop = computedVisibleIndex >= computedGroupBy.length;\n              }\n\n              if (lastNonEmpty && !lastRow && showHorizontalCellBorders) {\n                cellProps.showBorderBottom = computedVisibleIndex >= (cellProps.groupProps ? cellProps.groupProps.depth : computedGroupBy.length);\n              }\n            } else if (rowIndex > 0 && showHorizontalCellBorders) {\n              if (rowIndex === totalDataCount) {\n                cellProps.showBorderBottom = computedVisibleIndex >= computedGroupBy.length;\n              } else {\n                cellProps.showBorderBottom = computedGroupBy ? computedVisibleIndex >= computedGroupBy.length : true;\n              }\n            }\n          }\n\n          if (lastRow) {\n            cellProps.showBorderBottom = rowIndex < maxVisibleRows - 1 || rowExpanded;\n          }\n\n          if (lockedStart && cellProps.lastInSection) {\n            cellProps.showBorderRight = true;\n          }\n\n          if (lockedEnd && computedVisibleIndex === firstLockedEndIndex) {\n            cellProps.showBorderLeft = true;\n          }\n\n          if (cellProps.groupProps && computedVisibleIndex >= cellProps.groupProps.depth + 1 && !groupColumn) {\n            cellProps.showBorderLeft = false;\n          }\n\n          if (cellProps.summaryProps) {\n            cellProps.showBorderBottom = lastRow;\n            cellProps.showBorderTop = computedVisibleIndex > cellProps.summaryProps.depth;\n\n            if (cellProps.summaryProps.position == 'start') {\n              cellProps.showBorderTop = computedVisibleIndex >= cellProps.summaryProps.depth;\n              cellProps.showBorderBottom = false;\n            }\n\n            cellProps.showBorderLeft = showVerticalCellBorders ? true : computedVisibleIndex <= cellProps.summaryProps.depth;\n\n            if (computedVisibleIndex > cellProps.summaryProps.depth && computedVisibleIndex <= computedGroupBy.length && !groupColumn) {\n              cellProps.showBorderLeft = false;\n            }\n\n            if (computedVisibleIndex === 0) {\n              cellProps.showBorderLeft = false;\n            }\n\n            cellProps.noBackground = !groupColumn;\n          }\n\n          if (firstUnlockedIndex === computedVisibleIndex && hasLockedStart) {\n            cellProps.showBorderLeft = false;\n          }\n\n          if (cellProps.groupSpacerColumn && rowExpanded) {\n            cellProps.showBorderBottom = false;\n          }\n\n          if (cellProps.last) {\n            cellProps.showBorderRight = true;\n          }\n\n          var prevColumn = columns[theColumnIndex - 1];\n          var nextColumn = columns[theColumnIndex + 1];\n\n          if (nextColumn && nextColumn.prevBorderRight !== undefined && !(lockedStart && cellProps.lastInSection)) {\n            cellProps.showBorderRight = nextColumn.prevBorderRight;\n          }\n\n          if (prevColumn && prevColumn.nextBorderLeft !== undefined) {\n            cellProps.showBorderLeft = prevColumn.nextBorderLeft;\n          }\n\n          if (columnProps.showBorderRight !== undefined) {\n            cellProps.showBorderRight = columnProps.showBorderRight;\n          }\n\n          if (columnProps.showBorderLeft !== undefined) {\n            cellProps.showBorderLeft = columnProps.showBorderLeft;\n          }\n        }\n\n        if (cellProps.computedEditable) {\n          cellProps.onEditStopForRow = _this5.onCellStopEdit;\n          cellProps.onEditStartForRow = _this5.onCellStartEdit;\n          cellProps.onEditCancelForRow = _this5.onCellEditCancel;\n          cellProps.onEditValueChangeForRow = _this5.onCellEditValueChange;\n          cellProps.onEditCompleteForRow = _this5.onCellEditComplete;\n        }\n\n        hasBorderBottom = hasBorderBottom || cellProps.showBorderBottom;\n        hasBorderTop = hasBorderTop || cellProps.showBorderTop;\n        return cellProps;\n      });\n      this.maxRowspan = maxRowspan;\n\n      if (this.props.computedEnableRowspan) {\n        this.props.setRowSpan(maxRowspan);\n      }\n\n      this.hasBorderTop = hasBorderTop;\n      this.hasBorderBottom = hasBorderBottom;\n      return cellPropsArray;\n    }\n  }, {\n    key: \"onCellStopEdit\",\n    value: function onCellStopEdit(value, cellProps) {\n      if (this.props.onEditStop) {\n        this.props.onEditStop({\n          value: value,\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellStartEdit\",\n    value: function onCellStartEdit(value, cellProps) {\n      if (this.props.onEditStart) {\n        this.props.onEditStart({\n          data: cellProps.data,\n          value: value,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellEditCancel\",\n    value: function onCellEditCancel(cellProps) {\n      if (this.props.onEditCancel) {\n        this.props.onEditCancel({\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnIndex: cellProps.computedVisibleIndex,\n          columnId: cellProps.id,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellEditValueChange\",\n    value: function onCellEditValueChange(value, cellProps) {\n      if (this.props.onEditValueChange) {\n        this.props.onEditValueChange({\n          value: value,\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellEditComplete\",\n    value: function onCellEditComplete(value, cellProps) {\n      if (this.props.onEditComplete) {\n        this.props.onEditComplete({\n          value: value,\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"tryRowCellEdit\",\n    value: function tryRowCellEdit(editIndex) {\n      var _this6 = this;\n\n      var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var cols = this.props.columns;\n      var col;\n      var colIndex;\n\n      if (!dir) {\n        dir = 1;\n      }\n\n      dir = dir == 1 ? 1 : -1;\n      var currentIndex = dir == 1 ? 0 : cols.length - 1;\n      var foundCols = [];\n\n      while (cols[currentIndex]) {\n        col = cols[currentIndex];\n\n        if (col.editable || this.props.editable && col.editable !== false) {\n          colIndex = col.computedVisibleIndex;\n\n          if (colIndex == editIndex) {\n            foundCols.push(col);\n          } else {\n            if (dir < 0) {\n              if (colIndex < editIndex) {\n                foundCols.push(col);\n              }\n            } else if (dir > 0) {\n              if (colIndex > editIndex) {\n                foundCols.push(col);\n              }\n            }\n          }\n        }\n\n        currentIndex += dir;\n      }\n\n      if (!foundCols.length) {\n        this.tryNextRowEdit(dir);\n        return Promise.reject(null);\n      }\n\n      foundCols.sort(function (a, b) {\n        return dir > 0 ? a - b : b - a;\n      });\n      var retries = {};\n      return new Promise(function (resolve, reject) {\n        var startEdit = function startEdit(cols) {\n          var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n          var errBack = function errBack() {\n            startEdit(cols, index + 1);\n          };\n\n          var col = cols[index];\n\n          if (!col) {\n            _this6.tryNextRowEdit(dir);\n\n            return reject('column not found');\n          }\n\n          var cell = _this6.getCellById(col.id);\n\n          if (!cell) {\n            if (retries[col.id]) {\n              return reject('column not found');\n            }\n\n            retries[col.id] = true;\n\n            _this6.props.scrollToColumn(col.id, undefined, function () {\n              setTimeout(function () {\n                startEdit(cols, index);\n              }, 20);\n            });\n\n            return;\n          }\n\n          return cell.startEdit(undefined, errBack).then(resolve).catch(errBack);\n        };\n\n        startEdit(foundCols, 0);\n      });\n    }\n  }, {\n    key: \"tryNextRowEdit\",\n    value: function tryNextRowEdit(dir) {\n      if (this.props.tryNextRowEdit) {\n        this.props.tryNextRowEdit(this.props.rowIndex + dir, dir);\n      }\n    }\n  }, {\n    key: \"onTransitionEnd\",\n    value: function onTransitionEnd(cellProps, columnProps, e) {\n      e.stopPropagation();\n\n      if (columnProps.onTransitionEnd) {\n        columnProps.onTransitionEnd(e);\n      }\n\n      if (this.props.onTransitionEnd) {\n        this.props.onTransitionEnd(e, cellProps);\n      }\n    }\n  }, {\n    key: \"getColumnRenderRange\",\n    value: function getColumnRenderRange(cellProps) {\n      var _this$props = this.props,\n          lockedStartColumns = _this$props.lockedStartColumns,\n          lockedEndColumns = _this$props.lockedEndColumns,\n          columnRenderCount = _this$props.columnRenderCount,\n          groupProps = _this$props.groupProps,\n          columns = _this$props.columns,\n          groupColumn = _this$props.groupColumn;\n      var virtualizeColumns = this.getVirtualizeColumns();\n\n      if (!virtualizeColumns) {\n        return null;\n      }\n\n      var minStartIndex = lockedStartColumns.length ? lockedStartColumns.length : groupProps && !groupColumn ? groupProps.depth + 2 : 0;\n      var maxEndIndex = columns.length - lockedEndColumns.length - 1;\n      var columnRenderStartIndex = this.columnRenderStartIndex == null ? this.props.columnRenderStartIndex || 0 : this.columnRenderStartIndex;\n      columnRenderStartIndex = Math.max(columnRenderStartIndex, minStartIndex);\n\n      var fixStartIndexForColspan = function fixStartIndexForColspan() {\n        if (cellProps) {\n          while (cellProps[columnRenderStartIndex].computedColspanedBy) {\n            columnRenderStartIndex--;\n          }\n        }\n      };\n\n      if (columnRenderCount != null) {\n        var columnRenderEndIndex = columnRenderStartIndex + columnRenderCount;\n        columnRenderEndIndex = Math.min(columnRenderEndIndex, maxEndIndex);\n\n        if (columnRenderEndIndex - columnRenderCount != columnRenderStartIndex) {\n          columnRenderStartIndex = Math.max(columnRenderEndIndex - columnRenderCount, minStartIndex);\n        }\n\n        if (columnRenderEndIndex < 0) {\n          return {\n            start: 0,\n            end: 0\n          };\n        }\n\n        fixStartIndexForColspan();\n        return {\n          start: columnRenderStartIndex,\n          end: columnRenderEndIndex\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"expandRangeWithColspan\",\n    value: function expandRangeWithColspan(range, cellProps) {\n      var extraNeededColumns = cellProps.reduce(function (total, cellProps) {\n        return total + (cellProps.computedColspan > 1 ? cellProps.computedColspan - 1 : 0);\n      }, 0);\n\n      if (!extraNeededColumns) {\n        return range;\n      }\n\n      var firstUnlockedIndex = this.props.firstUnlockedIndex;\n\n      if (range.start < firstUnlockedIndex) {\n        range.start = firstUnlockedIndex;\n      }\n\n      if (range.start > extraNeededColumns) {\n        range.start -= extraNeededColumns;\n        return range;\n      }\n\n      extraNeededColumns -= range.start;\n      range.start = 0;\n\n      if (extraNeededColumns) {\n        range.end += extraNeededColumns;\n      }\n\n      return range;\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(_, __, style) {\n      var _this7 = this;\n\n      var _this$props2 = this.props,\n          scrollLeft = _this$props2.scrollLeft,\n          hasLockedStart = _this$props2.hasLockedStart,\n          hasLockedEnd = _this$props2.hasLockedEnd,\n          lockedStartColumns = _this$props2.lockedStartColumns,\n          lockedEndColumns = _this$props2.lockedEndColumns,\n          computedHasColSpan = _this$props2.computedHasColSpan,\n          groupProps = _this$props2.groupProps,\n          columns = _this$props2.columns;\n      var virtualizeColumns = this.getVirtualizeColumns();\n      var cellProps;\n\n      if (!virtualizeColumns) {\n        cellProps = this.getPropsForCells();\n      } else {\n        var lockedStartCellProps = [];\n        var lockedEndCellProps = [];\n        var groupCellProps = [];\n        var renderRange;\n\n        if (computedHasColSpan) {\n          cellProps = this.getPropsForCells();\n\n          if (hasLockedStart) {\n            lockedStartCellProps = cellProps.slice(0, lockedStartColumns.length);\n          } else if (groupProps) {\n            groupCellProps = cellProps.slice(0, groupProps.depth + 2);\n          }\n\n          if (hasLockedEnd) {\n            lockedEndCellProps = cellProps.slice(columns.length - lockedEndColumns.length, columns.length);\n          }\n\n          renderRange = this.getColumnRenderRange(cellProps);\n\n          if (renderRange) {\n            renderRange = this.expandRangeWithColspan(renderRange, cellProps);\n            cellProps = cellProps.slice(renderRange.start, renderRange.end + 1);\n          }\n        } else {\n          var _renderRange4, _renderRange5;\n\n          renderRange = this.getColumnRenderRange();\n          cellProps = this.getPropsForCells((_renderRange4 = renderRange) === null || _renderRange4 === void 0 ? void 0 : _renderRange4.start, (((_renderRange5 = renderRange) === null || _renderRange5 === void 0 ? void 0 : _renderRange5.end) || 0) + 1);\n\n          if (hasLockedStart) {\n            lockedStartCellProps = this.getPropsForCells(0, lockedStartColumns.length - 1);\n          } else if (groupProps) {\n            groupCellProps = this.getPropsForCells(0, groupProps.depth + 2 - 1);\n          }\n\n          if (hasLockedEnd) {\n            lockedEndCellProps = this.getPropsForCells(lockedEndColumns[0].computedVisibleIndex, columns.length - 1);\n          }\n        }\n\n        if (hasLockedStart) {\n          cellProps = [].concat((0, _toConsumableArray2.default)(lockedStartCellProps), (0, _toConsumableArray2.default)(cellProps));\n        } else if (groupProps) {\n          cellProps = [].concat((0, _toConsumableArray2.default)(groupCellProps), (0, _toConsumableArray2.default)(cellProps));\n        }\n\n        if (hasLockedEnd) {\n          var _cellProps;\n\n          (_cellProps = cellProps).push.apply(_cellProps, (0, _toConsumableArray2.default)(lockedEndCellProps));\n        }\n      }\n\n      var result = cellProps.map(function (cProps, index) {\n        var cell;\n        var key = index;\n\n        if (!virtualizeColumns) {\n          key = cProps.id || index;\n        }\n\n        if (_this7.props.cellFactory) {\n          cell = _this7.props.cellFactory(cProps);\n        }\n\n        if (cell === undefined) {\n          cell = _react.default.createElement(_Cell.default, Object.assign({}, cProps, {\n            key: key\n          }));\n        }\n\n        return cell;\n      });\n      return (0, _renderCellsMaybeLocked.default)(result, this.props, scrollLeft, undefined, style);\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      var props = this.props;\n      var passedProps = props.passedProps;\n\n      if (props.onClick) {\n        props.onClick(event, props);\n      }\n\n      if (passedProps && passedProps.onClick) {\n        passedProps.onClick(event, props);\n      }\n    }\n  }]);\n  return DataGridRow;\n}(_react.default.Component);\n\nexports.default = DataGridRow;\n\nvar emptyFn = function emptyFn() {};\n\nDataGridRow.defaultProps = {\n  onClick: emptyFn,\n  onMouseEnter: emptyFn,\n  onMouseLeave: emptyFn,\n  onMouseDown: emptyFn,\n  columnRenderStartIndex: 0,\n  showAllGroupCells: false\n};\nDataGridRow.propTypes = {\n  rowActive: _propTypes.default.bool,\n  rowSelected: _propTypes.default.bool,\n  availableWidth: _propTypes.default.number,\n  computedGroupBy: _propTypes.default.array,\n  expandGroupTitle: _propTypes.default.bool,\n  getCellSelectionKey: _propTypes.default.func,\n  depth: _propTypes.default.number,\n  columns: _propTypes.default.array,\n  columnsMap: _propTypes.default.shape({}),\n  active: _propTypes.default.bool,\n  computedActiveCell: _propTypes.default.any,\n  cellFactory: _propTypes.default.func,\n  computedCellMultiSelectionEnabled: _propTypes.default.bool,\n  computedCellSelection: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  columnRenderCount: _propTypes.default.number,\n  columnRenderStartIndex: _propTypes.default.number,\n  columnUserSelect: _propTypes.default.bool,\n  deselectAll: _propTypes.default.func,\n  empty: _propTypes.default.bool,\n  even: _propTypes.default.bool,\n  firstLockedEndIndex: _propTypes.default.number,\n  firstLockedStartIndex: _propTypes.default.number,\n  firstUnlockedIndex: _propTypes.default.number,\n  flex: _propTypes.default.number,\n  groupCount: _propTypes.default.number,\n  groupNestingSize: _propTypes.default.number,\n  treeNestingSize: _propTypes.default.number,\n  groupProps: _propTypes.default.object,\n  summaryProps: _propTypes.default.object,\n  hasLockedEnd: _propTypes.default.bool,\n  hasLockedStart: _propTypes.default.bool,\n  indexInGroup: _propTypes.default.number,\n  last: _propTypes.default.bool,\n  lastCellInRange: _propTypes.default.any,\n  lastNonEmpty: _propTypes.default.bool,\n  lastRowInGroup: _propTypes.default.bool,\n  lockedEndColumns: _propTypes.default.array,\n  lockedStartColumns: _propTypes.default.array,\n  maxRowHeight: _propTypes.default.number,\n  minRowHeight: _propTypes.default.number,\n  maxVisibleRows: _propTypes.default.number,\n  minWidth: _propTypes.default.number,\n  multiSelect: _propTypes.default.bool,\n  odd: _propTypes.default.bool,\n  onArrowDown: _propTypes.default.func,\n  onArrowUp: _propTypes.default.func,\n  onCellClick: _propTypes.default.func,\n  onCellEnter: _propTypes.default.func,\n  onCellMouseDown: _propTypes.default.func,\n  onCellSelectionDraggerMouseDown: _propTypes.default.func,\n  onRowContextMenu: _propTypes.default.func,\n  passedProps: _propTypes.default.object,\n  realIndex: _propTypes.default.number,\n  renderIndex: _propTypes.default.number,\n  renderRow: _propTypes.default.func,\n  onRenderRow: _propTypes.default.func,\n  rowHeight: _propTypes.default.number,\n  rowExpandHeight: _propTypes.default.number,\n  initialRowHeight: _propTypes.default.number,\n  defaultRowHeight: _propTypes.default.number,\n  emptyScrollOffset: _propTypes.default.number,\n  rowIndex: _propTypes.default.number,\n  remoteRowIndex: _propTypes.default.number,\n  rowIndexInGroup: _propTypes.default.bool,\n  rowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),\n  rowClassName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n  scrollLeft: _propTypes.default.number,\n  selectAll: _propTypes.default.func,\n  selected: _propTypes.default.bool,\n  expanded: _propTypes.default.bool,\n  selection: _propTypes.default.any,\n  computedRowExpandEnabled: _propTypes.default.bool,\n  computedTreeEnabled: _propTypes.default.bool,\n  computedRenderRowDetails: _propTypes.default.func,\n  isRowExpandableAt: _propTypes.default.func,\n  setRowSelected: _propTypes.default.func,\n  setRowExpanded: _propTypes.default.func,\n  toggleRowExpand: _propTypes.default.func,\n  toggleNodeExpand: _propTypes.default.func,\n  showAllGroupCells: _propTypes.default.bool,\n  computedShowCellBorders: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  showHorizontalCellBorders: _propTypes.default.bool,\n  showVerticalCellBorders: _propTypes.default.bool,\n  totalColumnCount: _propTypes.default.number,\n  totalComputedWidth: _propTypes.default.number,\n  totalDataCount: _propTypes.default.number,\n  totalLockedEndWidth: _propTypes.default.number,\n  totalLockedStartWidth: _propTypes.default.number,\n  totalUnlockedWidth: _propTypes.default.number,\n  unlockedColumns: _propTypes.default.array,\n  virtualizeColumns: _propTypes.default.bool,\n  nativeScroll: _propTypes.default.bool,\n  shouldRenderCollapsedRowDetails: _propTypes.default.bool,\n  rowDetailsStyle: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  dataSourceArray: _propTypes.default.array,\n  getItemId: _propTypes.default.func.isRequired,\n  editable: _propTypes.default.bool,\n  editing: _propTypes.default.bool,\n  editValue: _propTypes.default.any,\n  editRowIndex: _propTypes.default.number,\n  editColumnIndex: _propTypes.default.number,\n  editColumnId: _propTypes.default.any,\n  naturalRowHeight: _propTypes.default.bool,\n  renderDetailsGrid: _propTypes.default.func,\n  scrollToColumn: _propTypes.default.func,\n  renderNodeTool: _propTypes.default.func,\n  computedEnableRowspan: _propTypes.default.bool,\n  setRowSpan: _propTypes.default.func,\n  treeColumn: _propTypes.default.string,\n  scrollbars: _propTypes.default.shape({\n    horizontal: _propTypes.default.bool,\n    vertical: _propTypes.default.bool\n  }),\n  rtl: _propTypes.default.bool,\n  computedPivot: _propTypes.default.array,\n  groupColumnSummaries: _propTypes.default.any,\n  groupSummary: _propTypes.default.any,\n  groupColumn: _propTypes.default.any,\n  lastUnlockedIndex: _propTypes.default.number,\n  lastLockedEndIndex: _propTypes.default.number,\n  lastLockedStartIndex: _propTypes.default.number,\n  computedShowZebraRows: _propTypes.default.bool,\n  computedRowspans: _propTypes.default.any,\n  editStartEvent: _propTypes.default.string,\n  onGroupToggle: _propTypes.default.func,\n  onEditStop: _propTypes.default.func,\n  onEditStart: _propTypes.default.func,\n  onEditCancel: _propTypes.default.func,\n  onEditValueChange: _propTypes.default.func,\n  onEditComplete: _propTypes.default.func,\n  onFilterValueChange: _propTypes.default.func,\n  tryNextRowEdit: _propTypes.default.func,\n  getScrollLeftMax: _propTypes.default.func,\n  activeRowRef: _propTypes.default.any,\n  sticky: _propTypes.default.bool,\n  edition: _propTypes.default.string,\n  computedLicenseValid: _propTypes.default.bool,\n  parentGroupDataArray: _propTypes.default.any,\n  rowDetailsWidth: _propTypes.default.oneOf(['max-viewport-width', 'min-viewport-width', 'viewport-width']),\n  computedHasColSpan: _propTypes.default.bool,\n  onRowReorder: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.bool]),\n  onDragRowMouseDown: _propTypes.default.func,\n  renderLockedStartCells: _propTypes.default.func,\n  renderLockedEndCells: _propTypes.default.func\n};","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/Layout/ColumnLayout/Content/Row.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","_toConsumableArray2","_slicedToArray2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_react","_propTypes","_autoBind","_reactCleanProps","_shallowequal","_join","_clamp","_Cell","_renderCellsMaybeLocked","_adjustCellProps","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Date","prototype","toString","call","e","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","CLASS_NAME","rowClean","p","activeRowRef","skipSelect","event","nativeEvent","getValueForPivotColumn","item","path","reduce","acc","field","index","pivotSummary","values","getValueForPivotColumnSummary","_ref","pivotSummaryPath","root","current","pivotColumnSummary","DataGridRow","_React$Component","_super","props","_this","cells","columnRenderStartIndex","scrollingDirection","scrollingInProgress","hasBorderTop","hasBorderBottom","rafId","shouldUpdate","getVirtualizeColumns","virtualizeColumns","cellRef","c","domRef","createRef","shouldComponentUpdate","nextProps","areEqual","equalReturnKey","computedActiveCell","computedActiveIndex","active","onKeyDown","onFocus","setRowSpan","passedProps","computedRowspans","lockedStartColumns","selection","lockedEndColumns","unlockedColumns","maxVisibleRows","onClick","style","JSON","stringify","prevActiveCellRow","prevActiveColumn","activeCellRow","activeColumn","_this$props$computedA","_nextProps$computedAc","rowIndex","onCellUnmount","cellProps","cell","cleanupCells","Boolean","componentWillUnmount","xshouldComponentUpdate","_this2","cancelAnimationFrame","requestAnimationFrame","forceUpdate","UNSAFE_componentWillReceiveProps","columnRenderCount","getCells","getProps","computedLocked","setStateProps","componentDidMount","instance","node","getDOMNode","orderCells","sortedProps","map","sort","p1","p2","cell1","cell2","renderIndex","componentDidUpdate","prevProps","groupProps","fixForColspan","editing","updateEditCell","undefined","editColumnIndex","len","getCellIndex","setCellIndex","inEdit","computedHasColSpan","setColumnRenderStartIndex","setScrolling","scrolling","oldScrollingInProgress","oldScrollingDirection","className","concat","classList","add","remove","virtualizeColumnsClassName","render","rowHeight","defaultRowHeight","rowExpandHeight","initialRowHeight","maxRowHeight","groupNestingSize","summaryProps","data","id","columns","minWidth","maxWidth","rowStyle","scrollbars","renderRow","computedRowExpandEnabled","even","odd","selected","expanded","realIndex","remoteRowIndex","nativeScroll","indexInGroup","naturalRowHeight","rowDetailsStyle","renderDetailsGrid","last","empty","computedPivot","computedShowZebraRows","rowDetailsWidth","scrollLeft","availableWidth","groupColumn","computedRenderRowDetails","dataSourceArray","onRenderRow","shouldRenderCollapsedRowDetails","rtl","sticky","hasLockedEnd","hasLockedStart","showHorizontalCellBorders","rowClassName","lastInGroup","groupCount","position","collapsed","selectedClassName","height","width","direction","maxHeight","rowStyleResult","rowProps","ref","onContextMenu","children","createElement","top","left","emptyScrollOffset","groupDepth","__group","depth","__summary","activeBordersDiv","shouldRender","rowDetailsInfo","isRowExpandable","rowId","getItemId","rowExpanded","rowSelected","rowActive","toggleRowExpand","setRowExpanded","dataSource","detailsStyle","overflow","Math","min","max","isNaN","display","styleResult","showBorderBottom","vertical","renderRowDetails","Array","_","_style2","_style4","row","assign","propTypes","onRowContextMenu","getPropsForCells","slice","computedVisibleIndex","sortCells","_this3","getCellAt","getCellById","getSortedCells","getGaps","startIndex","endIndex","visibleCellPositions","computedColspan","gaps","toggleNodeExpand","isRowExpandableAt","_expanded","getCurrentGaps","_this4","newCellProps","renderRange","cellPropsAt","getColumnRenderRange","_renderRange","_renderRange2","start","end","_renderRange3","gapsMap","gapIndex","tempCellMap","calls","cellIndex","outside","endCellIndex","outOfView","newIndex","_this5","initialColumns","onGroupToggle","lastLockedStartIndex","lastLockedEndIndex","lastUnlockedIndex","minRowHeight","showVerticalCellBorders","treeColumn","totalDataCount","computedGroupBy","firstUnlockedIndex","firstLockedEndIndex","selectAll","deselectAll","columnUserSelect","multiSelect","setRowSelected","lastRow","computedCellSelection","lastNonEmpty","onCellClick","editStartEvent","renderNodeTool","computedTreeEnabled","expandGroupTitle","onCellSelectionDraggerMouseDown","onCellMouseDown","onCellEnter","computedCellMultiSelectionEnabled","getCellSelectionKey","lastCellInRange","onDragRowMouseDown","theme","visibleColumnCount","hiddenCells","belongsToColspan","columnsTillColspanStart","activeCell","lastInRange","maxRowspan","cellPropsArray","column","xindex","theColumnIndex","columnProps","name","groupColumnSummary","pivotColumnPath","pivotGrandSummaryColumn","defaults","userSelect","groupTitleCell","groupExpandCell","indexInColumns","computedRowspan","treeNestingSize","groupColumnVisible","lastRowInGroup","columnIndex","first","rowIndexInGroup","rowRenderIndex","hidden","tryRowCellEdit","cellSelected","hasRightSelectedSibling","hasLeftSelectedSibling","hasTopSelectedSibling","hasBottomSelectedSibling","cellKey","cellActive","visibilityTransitionDuration","showTransitionDuration","hideTransitionDuration","onTransitionEnd","bind","editValue","editable","computedEditable","onUnmount","colspan","rowspan","lockedStart","lockedEnd","unlocked","computedWidth","sum","col","lastInSection","firstInSection","noBackground","computedColspanedBy","computedColspanToStart","showBorderLeft","summaryBefore","showBorderTop","showBorderRight","groupSpacerColumn","prevColumn","nextColumn","prevBorderRight","nextBorderLeft","onEditStopForRow","onCellStopEdit","onEditStartForRow","onCellStartEdit","onEditCancelForRow","onCellEditCancel","onEditValueChangeForRow","onCellEditValueChange","onEditCompleteForRow","onCellEditComplete","computedEnableRowspan","onEditStop","columnId","onEditStart","onEditCancel","onEditValueChange","onEditComplete","editIndex","_this6","dir","cols","colIndex","currentIndex","foundCols","tryNextRowEdit","Promise","reject","a","b","retries","resolve","startEdit","errBack","scrollToColumn","setTimeout","then","catch","stopPropagation","_this$props","minStartIndex","maxEndIndex","fixStartIndexForColspan","columnRenderEndIndex","expandRangeWithColspan","range","extraNeededColumns","total","__","_this7","_this$props2","lockedStartCellProps","lockedEndCellProps","groupCellProps","_renderRange4","_renderRange5","_cellProps","cProps","cellFactory","Component","emptyFn","defaultProps","onMouseEnter","onMouseLeave","onMouseDown","showAllGroupCells","bool","number","array","func","columnsMap","shape","any","oneOfType","firstLockedStartIndex","flex","onArrowDown","onArrowUp","string","computedShowCellBorders","totalColumnCount","totalComputedWidth","totalLockedEndWidth","totalLockedStartWidth","totalUnlockedWidth","isRequired","editRowIndex","editColumnId","horizontal","groupColumnSummaries","groupSummary","onFilterValueChange","getScrollLeftMax","edition","computedLicenseValid","parentGroupDataArray","oneOf","onRowReorder","renderLockedStartCells","renderLockedEndCells"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _autoBind = _interopRequireDefault(require(\"../../../packages/react-class/autoBind\"));\n\nvar _reactCleanProps = _interopRequireDefault(require(\"../../../packages/react-clean-props\"));\n\nvar _shallowequal = _interopRequireWildcard(require(\"../../../packages/shallowequal\"));\n\nvar _join = _interopRequireDefault(require(\"../../../packages/join\"));\n\nvar _clamp = _interopRequireDefault(require(\"../../../utils/clamp\"));\n\nvar _Cell = _interopRequireDefault(require(\"../Cell\"));\n\nvar _renderCellsMaybeLocked = _interopRequireDefault(require(\"./renderCellsMaybeLocked\"));\n\nvar _adjustCellProps = _interopRequireDefault(require(\"./adjustCellProps\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar CLASS_NAME = 'InovuaReactDataGrid__row';\n\nvar rowClean = function rowClean(p) {\n  var result = _objectSpread({}, p);\n\n  delete result.activeRowRef;\n  return result;\n};\n\nvar skipSelect = function skipSelect(event) {\n  event.nativeEvent.skipSelect = true;\n};\n\nvar getValueForPivotColumn = function getValueForPivotColumn(item, path) {\n  return path.reduce(function (acc, field, index) {\n    if (!acc || acc[field] == null) {\n      return null;\n    }\n\n    if (index === path.length - 1) {\n      return acc[field];\n    }\n\n    return acc[field].pivotSummary || acc[field].values;\n  }, item);\n};\n\nvar getValueForPivotColumnSummary = function getValueForPivotColumnSummary(item, _ref) {\n  var path = _ref.pivotSummaryPath;\n  var i = 0;\n  var root = item;\n  var current;\n\n  while ((current = path[i]) && root) {\n    if (!root.pivotSummary) {\n      return null;\n    }\n\n    root = root.pivotSummary[current.value];\n    i++;\n  }\n\n  if (root && root.pivotColumnSummary) {\n    return root.pivotColumnSummary[path[path.length - 1].field];\n  }\n\n  return null;\n};\n\nvar DataGridRow = function (_React$Component) {\n  (0, _inherits2.default)(DataGridRow, _React$Component);\n\n  var _super = _createSuper(DataGridRow);\n\n  function DataGridRow(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, DataGridRow);\n    _this = _super.call(this, props);\n    _this.cells = [];\n    _this.columnRenderStartIndex = 0;\n    _this.scrollingDirection = 'vertical';\n    _this.scrollingInProgress = false;\n    _this.hasBorderTop = false;\n    _this.hasBorderBottom = false;\n    _this.rafId = null;\n    _this.shouldUpdate = false;\n\n    _this.getVirtualizeColumns = function () {\n      return _this.props.virtualizeColumns;\n      return _this.scrollingDirection !== 'horizontal' ? _this.props.virtualizeColumns : false;\n    };\n\n    _this.cellRef = function (c) {\n      if (!c) {\n        return;\n      }\n\n      _this.cells.push(c);\n    };\n\n    _this.domRef = (0, _react.createRef)();\n    _this.cells = [];\n    (0, _autoBind.default)((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(DataGridRow, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      var areEqual = (0, _shallowequal.equalReturnKey)(this.props, nextProps, {\n        computedActiveCell: 1,\n        computedActiveIndex: 1,\n        activeRowRef: 1,\n        active: 1,\n        onKeyDown: 1,\n        onFocus: 1,\n        setRowSpan: 1,\n        passedProps: 1,\n        computedRowspans: 1,\n        lockedStartColumns: 1,\n        selection: 1,\n        lockedEndColumns: 1,\n        unlockedColumns: 1,\n        maxVisibleRows: 1,\n        onClick: 1,\n        style: 1\n      });\n\n      if (!areEqual.result) {\n        return true;\n      }\n\n      if (this.props.active !== nextProps.active) {\n        return true;\n      }\n\n      if (JSON.stringify(this.props.style) !== JSON.stringify(nextProps.style)) {\n        return true;\n      }\n\n      var prevActiveCellRow, prevActiveColumn;\n      var activeCellRow, activeColumn;\n\n      if (this.props.computedActiveCell) {\n        var _this$props$computedA = (0, _slicedToArray2.default)(this.props.computedActiveCell, 2);\n\n        prevActiveCellRow = _this$props$computedA[0];\n        prevActiveColumn = _this$props$computedA[1];\n      }\n\n      if (nextProps.computedActiveCell) {\n        var _nextProps$computedAc = (0, _slicedToArray2.default)(nextProps.computedActiveCell, 2);\n\n        activeCellRow = _nextProps$computedAc[0];\n        activeColumn = _nextProps$computedAc[1];\n      }\n\n      if (activeCellRow !== prevActiveCellRow) {\n        if (nextProps.rowIndex === activeCellRow || nextProps.rowIndex === prevActiveCellRow) {\n          return true;\n        }\n      } else {\n        if (nextProps.rowIndex === activeCellRow && activeColumn !== prevActiveColumn) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"onCellUnmount\",\n    value: function onCellUnmount(cellProps, cell) {\n      if (this.cells) {\n        this.cells = this.cells.filter(function (c) {\n          return c !== cell;\n        });\n      }\n    }\n  }, {\n    key: \"cleanupCells\",\n    value: function cleanupCells() {\n      this.cells = this.cells.filter(Boolean);\n      return this.cells;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cells = [];\n    }\n  }, {\n    key: \"xshouldComponentUpdate\",\n    value: function xshouldComponentUpdate(nextProps) {\n      var _this2 = this;\n\n      if (this.rafId != null) {\n        cancelAnimationFrame(this.rafId);\n        this.rafId = null;\n      }\n\n      if (this.shouldUpdate) {\n        this.shouldUpdate = false;\n        return true;\n      }\n\n      var props = this.props;\n      this.rafId = requestAnimationFrame(function () {\n        _this2.rafId = null;\n\n        if (!(0, _shallowequal.default)(nextProps, props)) {\n          _this2.shouldUpdate = true;\n\n          _this2.forceUpdate();\n        }\n      });\n      return false;\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.columnRenderCount < this.props.columnRenderCount) {\n        this.cleanupCells();\n        this.getCells().forEach(function (cell) {\n          if (cell.getProps().computedLocked) {\n            return;\n          }\n\n          cell.setStateProps(null);\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this.props.activeRowRef.current = {\n          instance: this,\n          node: this.getDOMNode()\n        };\n      }\n    }\n  }, {\n    key: \"getDOMNode\",\n    value: function getDOMNode() {\n      return this.domRef.current;\n    }\n  }, {\n    key: \"orderCells\",\n    value: function orderCells() {\n      var cells = this.cleanupCells();\n      var sortedProps = cells.map(function (c) {\n        return c.getProps();\n      }).sort(function (p1, p2) {\n        return p1.index - p2.index;\n      });\n      cells.sort(function (cell1, cell2) {\n        return cell1.props.renderIndex - cell2.props.renderIndex;\n      });\n      cells.forEach(function (c, i) {\n        c.setStateProps(sortedProps[i]);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.groupProps && this.props.rowIndex != prevProps.rowIndex) {\n        this.fixForColspan();\n      }\n\n      if (this.props.editing && !prevProps.editing) {\n        this.updateEditCell();\n      }\n\n      if (!prevProps.active && this.props.active) {\n        this.props.activeRowRef.current = {\n          instance: this,\n          node: this.getDOMNode()\n        };\n      }\n    }\n  }, {\n    key: \"updateEditCell\",\n    value: function updateEditCell() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var cells = this.getCells();\n      var editColumnIndex = props.editColumnIndex;\n\n      for (var i = 0, len = cells.length, cell; i < len; i++) {\n        cell = cells[i];\n\n        if (this.getCellIndex(cell) === editColumnIndex) {\n          this.setCellIndex(cell, editColumnIndex);\n        }\n\n        if (cell.getProps().inEdit) {\n          this.setCellIndex(cell, this.getCellIndex(cell));\n        }\n      }\n    }\n  }, {\n    key: \"fixForColspan\",\n    value: function fixForColspan() {\n      if (this.props.computedHasColSpan) {\n        this.setColumnRenderStartIndex(this.columnRenderStartIndex);\n      }\n    }\n  }, {\n    key: \"setScrolling\",\n    value: function setScrolling(scrolling) {\n      var node = this.getDOMNode() || this.domRef.current;\n      var scrollingDirection = this.scrollingDirection;\n\n      if (scrolling !== false) {\n        scrollingDirection = scrolling;\n      }\n\n      var oldScrollingInProgress = this.scrollingInProgress;\n      var oldScrollingDirection = this.scrollingDirection;\n      this.scrollingDirection = scrollingDirection;\n      this.scrollingInProgress = scrolling ? true : false;\n\n      if (!node) {\n        return;\n      }\n\n      if (oldScrollingInProgress !== this.scrollingInProgress) {\n        var className = \"\".concat(CLASS_NAME, \"--scrolling\");\n\n        if (this.scrollingInProgress) {\n          node.classList.add(className);\n        } else {\n          node.classList.remove(className);\n        }\n      }\n\n      return;\n\n      if (this.scrollingDirection === oldScrollingDirection) {\n        return;\n      }\n\n      var virtualizeColumnsClassName = \"\".concat(CLASS_NAME, \"--virtualize-columns\");\n      var virtualizeColumns = this.getVirtualizeColumns();\n\n      if (virtualizeColumns) {\n        node.classList.add(virtualizeColumnsClassName);\n      } else {\n        node.classList.remove(virtualizeColumnsClassName);\n      }\n\n      if (oldScrollingDirection !== this.scrollingDirection) {\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var rowHeight = props.rowHeight,\n          defaultRowHeight = props.defaultRowHeight,\n          rowExpandHeight = props.rowExpandHeight,\n          initialRowHeight = props.initialRowHeight,\n          maxRowHeight = props.maxRowHeight,\n          groupNestingSize = props.groupNestingSize,\n          summaryProps = props.summaryProps,\n          data = props.data,\n          id = props.id,\n          columns = props.columns,\n          minWidth = props.minWidth,\n          maxWidth = props.maxWidth,\n          rowStyle = props.rowStyle,\n          scrollbars = props.scrollbars,\n          renderRow = props.renderRow,\n          computedRowExpandEnabled = props.computedRowExpandEnabled,\n          even = props.even,\n          odd = props.odd,\n          active = props.active,\n          selected = props.selected,\n          expanded = props.expanded,\n          passedProps = props.passedProps,\n          realIndex = props.realIndex,\n          remoteRowIndex = props.remoteRowIndex,\n          nativeScroll = props.nativeScroll,\n          indexInGroup = props.indexInGroup,\n          naturalRowHeight = props.naturalRowHeight,\n          rowDetailsStyle = props.rowDetailsStyle,\n          renderDetailsGrid = props.renderDetailsGrid,\n          last = props.last,\n          empty = props.empty,\n          computedPivot = props.computedPivot,\n          computedShowZebraRows = props.computedShowZebraRows,\n          rowDetailsWidth = props.rowDetailsWidth,\n          scrollLeft = props.scrollLeft,\n          availableWidth = props.availableWidth,\n          groupProps = props.groupProps,\n          groupColumn = props.groupColumn,\n          computedRenderRowDetails = props.computedRenderRowDetails,\n          dataSourceArray = props.dataSourceArray,\n          onRenderRow = props.onRenderRow,\n          shouldRenderCollapsedRowDetails = props.shouldRenderCollapsedRowDetails,\n          editing = props.editing,\n          rtl = props.rtl,\n          sticky = props.sticky,\n          hasLockedEnd = props.hasLockedEnd,\n          hasLockedStart = props.hasLockedStart,\n          showHorizontalCellBorders = props.showHorizontalCellBorders;\n      var rowClassName = props.rowClassName;\n      var virtualizeColumns = this.getVirtualizeColumns();\n      var lastInGroup = indexInGroup == props.groupCount - 1;\n      var className = (0, _join.default)(props.className, CLASS_NAME, this.scrollingInProgress && \"\".concat(CLASS_NAME, \"--scrolling\"), empty && \"\".concat(CLASS_NAME, \"--empty\"), editing && \"\".concat(CLASS_NAME, \"--editing\"), \"\".concat(CLASS_NAME, \"--direction-\").concat(rtl ? 'rtl' : 'ltr'), computedShowZebraRows && even && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--even\"), computedShowZebraRows && odd && (!groupProps || computedPivot) && \"\".concat(CLASS_NAME, \"--odd\"), !computedShowZebraRows && !groupProps && \"\".concat(CLASS_NAME, \"--no-zebra\"), groupProps && \"\".concat(CLASS_NAME, \"--group-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-row\"), summaryProps && \"\".concat(CLASS_NAME, \"--summary-position-\").concat(summaryProps.position), groupProps && groupProps.collapsed && \"\".concat(CLASS_NAME, \"--collapsed\"), selected && \"\".concat(CLASS_NAME, \"--selected\"), expanded && \"\".concat(CLASS_NAME, \"--expanded\"), hasLockedStart ? \"\".concat(CLASS_NAME, \"--has-locked-start\") : \"\".concat(CLASS_NAME, \"--no-locked-start\"), hasLockedEnd ? \"\".concat(CLASS_NAME, \"--has-locked-end\") : \"\".concat(CLASS_NAME, \"--no-locked-end\"), showHorizontalCellBorders && \"\".concat(CLASS_NAME, \"--show-horizontal-borders\"), active && \"\".concat(CLASS_NAME, \"--active\"), virtualizeColumns && \"\".concat(CLASS_NAME, \"--virtualize-columns\"), rowHeight && \"\".concat(CLASS_NAME, \"--rowheight\"), realIndex == 0 && \"\".concat(CLASS_NAME, \"--first\"), last && \"\".concat(CLASS_NAME, \"--last\"), indexInGroup == 0 && \"\".concat(CLASS_NAME, \"--first-in-group\"), lastInGroup && \"\".concat(CLASS_NAME, \"--last-in-group\"));\n\n      if (passedProps) {\n        className = (0, _join.default)(className, selected && passedProps.selectedClassName);\n      }\n\n      var style = _objectSpread(_objectSpread({}, props.style), {}, {\n        height: naturalRowHeight ? null : rowHeight,\n        width: props.width,\n        minWidth: minWidth,\n        direction: 'ltr'\n      });\n\n      if (maxWidth != null) {\n        style.maxWidth = maxWidth;\n      }\n\n      if (maxRowHeight != null) {\n        style.maxHeight = maxRowHeight;\n      }\n\n      if (rowStyle) {\n        if (typeof rowStyle === 'function') {\n          var rowStyleResult = rowStyle({\n            data: data,\n            props: props,\n            style: style\n          });\n\n          if (rowStyleResult !== undefined) {\n            style = _objectSpread(_objectSpread({}, style), rowStyleResult);\n          }\n        } else {\n          style = _objectSpread(_objectSpread({}, style), rowStyle);\n        }\n      }\n\n      if (rowClassName) {\n        if (typeof rowClassName == 'function') {\n          rowClassName = rowClassName({\n            data: data,\n            props: props,\n            className: className\n          });\n        }\n\n        if (rowClassName && typeof rowClassName == 'string') {\n          className = (0, _join.default)(className, rowClassName);\n        }\n      }\n\n      var rowProps = _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n        className: className,\n        style: style,\n        ref: this.domRef\n      }, passedProps), {}, {\n        onClick: this.onClick,\n        onContextMenu: this.onContextMenu\n      });\n\n      rowProps.children = [_react.default.createElement(\"div\", {\n        key: \"cellWrap\",\n        className: \"InovuaReactDataGrid__row-cell-wrap InovuaReactDataGrid__row-hover-target\",\n        style: {\n          width: props.width,\n          height: naturalRowHeight ? null : rowHeight,\n          position: 'absolute',\n          top: 0,\n          left: rtl ? -(props.emptyScrollOffset || 0) : 0\n        }\n      }, this.renderRow(data, columns, style))];\n      var groupDepth = groupColumn ? 0 : data && data.__group ? data.depth - 1 : data && data.__summary ? rowProps.summaryProps.depth : this.props.depth || 0;\n      var activeBordersDiv = sticky ? _react.default.createElement(\"div\", {\n        key: \"active-row-borders\",\n        className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-active-borders\"), this.hasBorderTop && \"\".concat(CLASS_NAME, \"-active-borders--has-border-top\"), this.hasBorderBottom && \"\".concat(CLASS_NAME, \"-actived-borders--has-border-bottom\"))\n      }) : null;\n      var shouldRender = expanded || shouldRenderCollapsedRowDetails;\n\n      if (computedRowExpandEnabled && shouldRender && !data.__group) {\n        var rowDetailsInfo = {\n          data: data,\n          rtl: rtl,\n          isRowExpandable: this.isRowExpandable,\n          rowIndex: realIndex,\n          remoteRowIndex: remoteRowIndex,\n          rowId: this.props.getItemId(data),\n          rowExpanded: expanded,\n          id: id,\n          rowSelected: selected,\n          rowActive: active,\n          toggleRowExpand: this.toggleRowExpand,\n          setRowExpanded: this.setRowExpanded,\n          dataSource: dataSourceArray\n        };\n        var detailsStyle = {\n          position: 'absolute',\n          height: rowHeight - initialRowHeight,\n          overflow: renderDetailsGrid ? 'visible' : 'auto',\n          top: initialRowHeight\n        };\n\n        if (rtl) {\n          detailsStyle.direction = 'rtl';\n        }\n\n        if (rowDetailsWidth == 'max-viewport-width') {\n          detailsStyle.width = Math.min(availableWidth, props.width || maxWidth);\n        }\n\n        if (rowDetailsWidth === 'min-viewport-width') {\n          detailsStyle.width = Math.max(availableWidth, props.width || maxWidth);\n        }\n\n        if (rowDetailsWidth === 'viewport-width') {\n          detailsStyle.width = availableWidth;\n        }\n\n        if (groupDepth) {\n          detailsStyle[rtl ? 'paddingRight' : 'paddingLeft'] = (groupNestingSize || 0) * groupDepth;\n        }\n\n        detailsStyle[rtl ? 'right' : 'left'] = 0;\n\n        if (isNaN(detailsStyle.width)) {\n          delete detailsStyle.width;\n        }\n\n        if (!expanded) {\n          detailsStyle.display = 'none';\n        }\n\n        if (rowDetailsStyle) {\n          if (typeof rowDetailsStyle === 'function') {\n            var styleResult = rowDetailsStyle(detailsStyle, rowDetailsInfo);\n\n            if (styleResult !== undefined) {\n              detailsStyle = styleResult;\n            }\n          } else {\n            detailsStyle = _objectSpread(_objectSpread({}, detailsStyle), rowDetailsStyle);\n          }\n        }\n\n        var showBorderBottom = !lastInGroup || last;\n\n        if (nativeScroll && last && expanded) {\n          showBorderBottom = false;\n        }\n\n        rowProps.children.push(_react.default.createElement(\"div\", {\n          key: \"rowDetails\",\n          style: detailsStyle,\n          onClick: skipSelect,\n          className: (0, _join.default)(\"\".concat(CLASS_NAME, \"-details\"), \"\".concat(CLASS_NAME, \"-details--\").concat(rowDetailsWidth), renderDetailsGrid ? \"\".concat(CLASS_NAME, \"-details--details-grid\") : null, !nativeScroll || nativeScroll && scrollbars && !scrollbars.vertical || availableWidth > minWidth ? \"\".concat(CLASS_NAME, \"-details--show-border-right\") : null, showBorderBottom ? \"\".concat(CLASS_NAME, \"-details--show-border-bottom\") : '')\n        }, this.renderRowDetails(rowDetailsInfo, rowProps)), _react.default.createElement(\"div\", {\n          className: \"\".concat(CLASS_NAME, \"-details-special-bottom-border\"),\n          style: (0, _defineProperty2.default)({}, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize)\n        }), groupDepth ? (0, _toConsumableArray2.default)(new Array(groupDepth)).map(function (_, index) {\n          var _style2;\n\n          return _react.default.createElement(\"div\", {\n            key: index,\n            className: \"\".concat(CLASS_NAME, \"-details-border\"),\n            style: (_style2 = {\n              height: '100%',\n              position: 'absolute'\n            }, (0, _defineProperty2.default)(_style2, rtl ? 'right' : 'left', (index + 1) * groupNestingSize), (0, _defineProperty2.default)(_style2, \"top\", 0), _style2)\n          });\n        }) : null, rowDetailsWidth != 'max-viewport-width' ? _react.default.createElement(\"div\", {\n          key: \"rowDetailsBorder\",\n          style: (0, _defineProperty2.default)({\n            top: initialRowHeight - 1,\n            width: availableWidth\n          }, rtl ? 'right' : 'left', (groupDepth || 0) * groupNestingSize),\n          className: \"\".concat(CLASS_NAME, \"-details-special-top-border\")\n        }) : null);\n      }\n\n      if (sticky) {\n        if (activeBordersDiv) {\n          var _style4;\n\n          rowProps.children.push(_react.default.createElement(\"div\", {\n            key: \"active-row-borders\",\n            className: \"InovuaReactDataGrid__row-active-borders-wrapper\",\n            style: (_style4 = {\n              height: initialRowHeight,\n              position: 'absolute',\n              top: 0\n            }, (0, _defineProperty2.default)(_style4, rtl ? 'right' : 'left', (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"width\", availableWidth - (groupNestingSize || 0) * groupDepth), (0, _defineProperty2.default)(_style4, \"pointerEvents\", 'none'), _style4)\n          }, activeBordersDiv));\n        }\n      }\n\n      var row;\n\n      if (renderRow) {\n        row = renderRow(rowProps);\n      }\n\n      if (onRenderRow) {\n        onRenderRow(rowProps);\n      }\n\n      if (row === undefined) {\n        row = _react.default.createElement(\"div\", Object.assign({}, (0, _reactCleanProps.default)(rowProps, DataGridRow.propTypes), {\n          id: null,\n          data: null,\n          value: null\n        }));\n      }\n\n      return row;\n    }\n  }, {\n    key: \"renderRowDetails\",\n    value: function renderRowDetails(rowDetailsInfo, rowProps) {\n      var computedRenderRowDetails = this.props.computedRenderRowDetails;\n\n      if (computedRenderRowDetails) {\n        return computedRenderRowDetails(rowDetailsInfo);\n      }\n\n      return 'Please specify `renderRowDetails`';\n    }\n  }, {\n    key: \"onContextMenu\",\n    value: function onContextMenu(event) {\n      var props = this.props;\n      var passedProps = props.passedProps,\n          onRowContextMenu = props.onRowContextMenu;\n\n      if (onRowContextMenu) {\n        onRowContextMenu(props, event);\n      }\n\n      if (passedProps && passedProps.onContextMenu) {\n        passedProps.onContextMenu(event, props);\n      }\n    }\n  }, {\n    key: \"setCellIndex\",\n    value: function setCellIndex(cell, index, cellProps) {\n      cellProps = cellProps || (this.props.computedHasColSpan ? this.getPropsForCells().slice(index, index + 1)[0] : this.getPropsForCells(index, index)[0]);\n      cell.setStateProps(cellProps);\n    }\n  }, {\n    key: \"getCellIndex\",\n    value: function getCellIndex(cell) {\n      return cell.getProps().computedVisibleIndex;\n    }\n  }, {\n    key: \"sortCells\",\n    value: function sortCells(cells) {\n      var _this3 = this;\n\n      return cells.sort(function (cell1, cell2) {\n        return _this3.getCellIndex(cell1) - _this3.getCellIndex(cell2);\n      });\n    }\n  }, {\n    key: \"getCellAt\",\n    value: function getCellAt(index) {\n      return this.getCells().filter(function (c) {\n        return c.getProps().computedVisibleIndex === index;\n      })[0];\n    }\n  }, {\n    key: \"getCellById\",\n    value: function getCellById(id) {\n      return this.getCells().filter(function (c) {\n        return c.getProps().id === id;\n      })[0];\n    }\n  }, {\n    key: \"getCells\",\n    value: function getCells() {\n      return this.cells;\n    }\n  }, {\n    key: \"getSortedCells\",\n    value: function getSortedCells() {\n      return this.sortCells(this.getCells().slice());\n    }\n  }, {\n    key: \"getGaps\",\n    value: function getGaps(startIndex, endIndex) {\n      var visibleCellPositions = {};\n      this.getSortedCells().forEach(function (cell) {\n        var cellProps = cell.getProps();\n\n        if (cellProps.computedLocked) {\n          return;\n        }\n\n        var computedVisibleIndex = cellProps.computedVisibleIndex,\n            computedColspan = cellProps.computedColspan,\n            groupProps = cellProps.groupProps;\n\n        if (groupProps && computedVisibleIndex <= groupProps.depth + 1) {\n          return;\n        }\n\n        visibleCellPositions[computedVisibleIndex] = true;\n\n        if (computedColspan) {\n          for (var i = 0; i < computedColspan; i++) {\n            visibleCellPositions[computedVisibleIndex + i] = true;\n          }\n        }\n      });\n      var gaps = [];\n\n      for (; startIndex <= endIndex; startIndex++) {\n        if (!visibleCellPositions[startIndex]) {\n          gaps.push(startIndex);\n        }\n      }\n\n      return gaps;\n    }\n  }, {\n    key: \"toggleRowExpand\",\n    value: function toggleRowExpand(rowIndex) {\n      if (typeof rowIndex !== 'number') {\n        rowIndex = this.props.realIndex;\n      }\n\n      this.props.toggleRowExpand(rowIndex);\n    }\n  }, {\n    key: \"toggleNodeExpand\",\n    value: function toggleNodeExpand(rowIndex) {\n      if (typeof rowIndex !== 'number') {\n        rowIndex = this.props.realIndex;\n      }\n\n      this.props.toggleNodeExpand(rowIndex);\n    }\n  }, {\n    key: \"isRowExpandable\",\n    value: function isRowExpandable(rowIndex) {\n      if (typeof rowIndex !== 'number') {\n        rowIndex = this.props.realIndex;\n      }\n\n      return this.props.isRowExpandableAt(rowIndex);\n    }\n  }, {\n    key: \"setRowExpanded\",\n    value: function setRowExpanded(expanded, _) {\n      var rowIndex = this.props.realIndex;\n      var _expanded = expanded;\n\n      if (typeof expanded === 'number') {\n        rowIndex = expanded;\n        _expanded = _;\n      }\n\n      this.props.setRowExpanded(rowIndex, _expanded);\n    }\n  }, {\n    key: \"getCurrentGaps\",\n    value: function getCurrentGaps() {}\n  }, {\n    key: \"setColumnRenderStartIndex\",\n    value: function setColumnRenderStartIndex(columnRenderStartIndex) {\n      var _this4 = this;\n\n      if (this.columnRenderStartIndex === columnRenderStartIndex) {\n        return;\n      }\n\n      this.columnRenderStartIndex = columnRenderStartIndex;\n\n      if (this.getVirtualizeColumns() === false) {\n        return;\n      }\n\n      var newCellProps;\n      var renderRange;\n      var cellPropsAt;\n\n      if (this.props.computedHasColSpan) {\n        newCellProps = this.getPropsForCells();\n        renderRange = this.getColumnRenderRange(newCellProps);\n\n        cellPropsAt = function cellPropsAt(index) {\n          return newCellProps[index];\n        };\n      } else {\n        var _renderRange, _renderRange2;\n\n        renderRange = this.getColumnRenderRange();\n        newCellProps = this.getPropsForCells((_renderRange = renderRange) === null || _renderRange === void 0 ? void 0 : _renderRange.start, (((_renderRange2 = renderRange) === null || _renderRange2 === void 0 ? void 0 : _renderRange2.end) || 0) + 1);\n\n        cellPropsAt = function cellPropsAt(index) {\n          return newCellProps.filter(function (cellProps) {\n            return cellProps.computedVisibleIndex === index;\n          })[0];\n        };\n      }\n\n      if (!renderRange) {\n        return;\n      }\n\n      var _renderRange3 = renderRange,\n          start = _renderRange3.start,\n          end = _renderRange3.end;\n      var gaps = this.getGaps(start, end);\n\n      if (!gaps.length) {\n        return;\n      }\n\n      var gapsMap = gaps.reduce(function (acc, gapIndex) {\n        acc[gapIndex] = true;\n        return acc;\n      }, {});\n      var tempCellMap = {};\n      var groupColumn = this.props.groupColumn;\n      var calls = [];\n      this.getCells().forEach(function (cell) {\n        var cellProps = cell.getProps();\n        var groupProps = cellProps.groupProps,\n            cellIndex = cellProps.computedVisibleIndex,\n            computedColspan = cellProps.computedColspan,\n            computedLocked = cellProps.computedLocked;\n\n        if (computedLocked) {\n          return;\n        }\n\n        if (!groupColumn && groupProps && cellIndex <= groupProps.depth + 1) {\n          return;\n        }\n\n        var outside = cellIndex < start || cellIndex > end || cellIndex === undefined;\n\n        if (outside && computedColspan) {\n          var endCellIndex = cellIndex + (computedColspan - 1);\n          outside = cellIndex < start && endCellIndex < start || cellIndex > end;\n        }\n\n        var outOfView = outside || tempCellMap[cellIndex] || gapsMap[cellIndex];\n        tempCellMap[cellIndex] = true;\n        var newIndex;\n\n        if (outOfView && gaps.length) {\n          newIndex = gaps[gaps.length - 1];\n          calls.push([cell, newIndex]);\n          gaps.length -= 1;\n        }\n      });\n      calls.forEach(function (call) {\n        var cell = call[0];\n        var newIndex = call[1];\n\n        _this4.setCellIndex(cell, newIndex, cellPropsAt(newIndex));\n      });\n    }\n  }, {\n    key: \"getPropsForCells\",\n    value: function getPropsForCells(startIndex, endIndex) {\n      var _this5 = this;\n\n      var initialColumns = this.props.columns;\n      var columns = initialColumns;\n      var props = this.props;\n      var hasLockedStart = props.hasLockedStart,\n          data = props.data,\n          onGroupToggle = props.onGroupToggle,\n          computedPivot = props.computedPivot,\n          rowHeight = props.rowHeight,\n          remoteRowIndex = props.remoteRowIndex,\n          defaultRowHeight = props.defaultRowHeight,\n          initialRowHeight = props.initialRowHeight,\n          lastLockedStartIndex = props.lastLockedStartIndex,\n          lastLockedEndIndex = props.lastLockedEndIndex,\n          lastUnlockedIndex = props.lastUnlockedIndex,\n          minRowHeight = props.minRowHeight,\n          realIndex = props.realIndex,\n          showHorizontalCellBorders = props.showHorizontalCellBorders,\n          showVerticalCellBorders = props.showVerticalCellBorders,\n          empty = props.empty,\n          treeColumn = props.treeColumn,\n          groupColumn = props.groupColumn,\n          totalDataCount = props.totalDataCount,\n          depth = props.depth,\n          dataSourceArray = props.dataSourceArray,\n          computedGroupBy = props.computedGroupBy,\n          groupProps = props.groupProps,\n          summaryProps = props.summaryProps,\n          indexInGroup = props.indexInGroup,\n          firstUnlockedIndex = props.firstUnlockedIndex,\n          firstLockedEndIndex = props.firstLockedEndIndex,\n          selectAll = props.selectAll,\n          deselectAll = props.deselectAll,\n          columnUserSelect = props.columnUserSelect,\n          multiSelect = props.multiSelect,\n          selection = props.selection,\n          setRowSelected = props.setRowSelected,\n          computedRowExpandEnabled = props.computedRowExpandEnabled,\n          rtl = props.rtl,\n          lastRow = props.last,\n          computedCellSelection = props.computedCellSelection,\n          lastNonEmpty = props.lastNonEmpty,\n          maxVisibleRows = props.maxVisibleRows,\n          onCellClick = props.onCellClick,\n          editStartEvent = props.editStartEvent,\n          naturalRowHeight = props.naturalRowHeight,\n          renderNodeTool = props.renderNodeTool,\n          computedTreeEnabled = props.computedTreeEnabled,\n          rowExpanded = props.expanded,\n          expandGroupTitle = props.expandGroupTitle,\n          onCellSelectionDraggerMouseDown = props.onCellSelectionDraggerMouseDown,\n          onCellMouseDown = props.onCellMouseDown,\n          onCellEnter = props.onCellEnter,\n          computedCellMultiSelectionEnabled = props.computedCellMultiSelectionEnabled,\n          getCellSelectionKey = props.getCellSelectionKey,\n          lastCellInRange = props.lastCellInRange,\n          computedRowspans = props.computedRowspans,\n          renderIndex = props.renderIndex,\n          nativeScroll = props.nativeScroll,\n          onDragRowMouseDown = props.onDragRowMouseDown,\n          theme = props.theme,\n          onContextMenu = props.onContextMenu;\n      var virtualizeColumns = this.getVirtualizeColumns();\n      var visibleColumnCount = columns.length;\n\n      if (startIndex !== undefined) {\n        columns = columns.slice(startIndex, endIndex ? endIndex + 1 : startIndex + 1);\n      }\n\n      startIndex = startIndex || 0;\n      var hasBorderTop = false;\n      var hasBorderBottom = false;\n      var hiddenCells = {};\n      var belongsToColspan = {};\n      var columnsTillColspanStart = {};\n      var lastInGroup = indexInGroup == this.props.groupCount - 1;\n      var activeCell = props.computedActiveCell ? getCellSelectionKey.apply(void 0, (0, _toConsumableArray2.default)(props.computedActiveCell)) : null;\n      var lastInRange = lastCellInRange || activeCell || null;\n      var maxRowspan = 1;\n      var cellPropsArray = columns.map(function (column, xindex) {\n        var theColumnIndex = xindex + startIndex;\n        var columnProps = column;\n        var name = columnProps.name,\n            computedVisibleIndex = columnProps.computedVisibleIndex;\n        var value = data ? data[name] : null;\n        var rowIndex = realIndex;\n\n        if (groupProps && data && data.groupColumnSummary) {\n          value = data.groupColumnSummary[name];\n        }\n\n        if (groupProps && data && column.groupColumn) {\n          value = data.value;\n        }\n\n        if (columnProps.pivotColumnPath) {\n          value = data.pivotSummary ? getValueForPivotColumn(data.pivotSummary, columnProps.pivotColumnPath) : value;\n        }\n\n        if (columnProps.pivotGrandSummaryColumn) {} else {\n          if (columnProps.pivotSummaryPath) {\n            value = data.pivotSummary ? getValueForPivotColumnSummary(data, {\n              pivotSummaryPath: columnProps.pivotSummaryPath,\n              pivotGrandSummaryColumn: columnProps.pivotGrandSummaryColumn\n            }) : value;\n          }\n        }\n\n        var defaults = {};\n\n        if (columnUserSelect !== undefined) {\n          defaults.userSelect = columnUserSelect;\n        }\n\n        var groupTitleCell = !groupColumn && groupProps && groupProps.depth + 1 == computedVisibleIndex;\n        var groupExpandCell = !groupColumn && groupProps && groupProps.depth == computedVisibleIndex;\n\n        var cellProps = _objectSpread(_objectSpread(_objectSpread({}, defaults), columnProps), {}, {\n          remoteRowIndex: remoteRowIndex,\n          indexInColumns: theColumnIndex,\n          depth: depth,\n          editStartEvent: editStartEvent,\n          onCellClick: onCellClick,\n          computedRowspan: computedRowspans ? computedRowspans[column.id] : 1,\n          groupNestingSize: _this5.props.groupNestingSize,\n          treeNestingSize: _this5.props.treeNestingSize,\n          data: data,\n          naturalRowHeight: naturalRowHeight,\n          totalDataCount: totalDataCount,\n          onCellSelectionDraggerMouseDown: onCellSelectionDraggerMouseDown,\n          onCellMouseDown: onCellMouseDown,\n          onCellEnter: onCellEnter,\n          rtl: rtl,\n          computedPivot: computedPivot,\n          selectAll: selectAll,\n          deselectAll: deselectAll,\n          selection: selection,\n          renderNodeTool: renderNodeTool,\n          onDragRowMouseDown: onDragRowMouseDown,\n          multiSelect: multiSelect,\n          treeColumn: treeColumn !== undefined ? treeColumn === columnProps.id : false,\n          setRowSelected: setRowSelected,\n          setRowExpanded: computedRowExpandEnabled ? _this5.setRowExpanded : null,\n          toggleRowExpand: computedRowExpandEnabled ? _this5.toggleRowExpand : null,\n          toggleNodeExpand: computedTreeEnabled ? _this5.toggleNodeExpand : null,\n          rowActive: _this5.props.active,\n          rowSelected: _this5.props.selected,\n          rowExpanded: rowExpanded,\n          rowIndex: rowIndex,\n          rowHeight: rowHeight,\n          groupColumnVisible: !!groupColumn,\n          minRowHeight: minRowHeight,\n          groupProps: groupProps,\n          summaryProps: summaryProps,\n          empty: empty,\n          computedGroupBy: computedGroupBy,\n          nativeScroll: nativeScroll,\n          computedCellMultiSelectionEnabled: computedCellMultiSelectionEnabled,\n          lastRowInGroup: lastInGroup,\n          columnIndex: computedVisibleIndex,\n          first: computedVisibleIndex == 0,\n          last: computedVisibleIndex == visibleColumnCount - 1,\n          value: value,\n          virtualizeColumns: virtualizeColumns,\n          hasLockedStart: hasLockedStart,\n          rowIndexInGroup: indexInGroup,\n          rowRenderIndex: renderIndex,\n          hidden: groupProps ? expandGroupTitle && !groupColumn ? computedVisibleIndex > groupProps.depth + 1 : false : false,\n          groupTitleCell: groupTitleCell,\n          groupExpandCell: groupExpandCell,\n          isRowExpandable: computedRowExpandEnabled ? _this5.isRowExpandable : null,\n          tryRowCellEdit: _this5.tryRowCellEdit,\n          onGroupToggle: onGroupToggle,\n          initialRowHeight: rowExpanded ? initialRowHeight : rowHeight,\n          theme: theme,\n          onContextMenu: onContextMenu\n        });\n\n        if (computedCellSelection) {\n          cellProps.cellSelected = computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex)];\n\n          if (cellProps.cellSelected) {\n            cellProps.hasRightSelectedSibling = cellProps.last ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex + 1)];\n            cellProps.hasLeftSelectedSibling = cellProps.first ? false : computedCellSelection[getCellSelectionKey(rowIndex, computedVisibleIndex - 1)];\n            cellProps.hasTopSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex - 1, computedVisibleIndex)];\n            cellProps.hasBottomSelectedSibling = computedCellSelection[getCellSelectionKey(rowIndex + 1, computedVisibleIndex)];\n          }\n        }\n\n        if (activeCell || lastInRange) {\n          var cellKey = getCellSelectionKey(rowIndex, computedVisibleIndex);\n\n          if (activeCell && activeCell === cellKey) {\n            cellProps.cellActive = true;\n          }\n\n          if (lastInRange && lastInRange === cellKey) {\n            cellProps.lastInRange = true;\n          }\n        }\n\n        if (cellProps.visibilityTransitionDuration || cellProps.showTransitionDuration || cellProps.hideTransitionDuration) {\n          cellProps.onTransitionEnd = _this5.onTransitionEnd.bind(_this5, cellProps, columnProps);\n        }\n\n        if (_this5.props.editing && _this5.props.editColumnIndex === cellProps.columnIndex) {\n          cellProps.inEdit = true;\n          cellProps.editValue = _this5.props.editValue;\n        }\n\n        if (virtualizeColumns && !cellProps.computedLocked || _this5.props.editable || cellProps.computedEditable) {\n          cellProps.ref = _this5.cellRef;\n          cellProps.onUnmount = _this5.onCellUnmount;\n        }\n\n        var computedLocked = cellProps.computedLocked,\n            colspan = cellProps.colspan,\n            rowspan = cellProps.rowspan;\n        var lockedStart = computedLocked === 'start';\n        var lockedEnd = computedLocked === 'end';\n        var unlocked = !computedLocked;\n        var computedColspan = 1;\n\n        if (typeof colspan === 'function') {\n          computedColspan = cellProps.computedColspan = Math.max(1, colspan({\n            remoteRowIndex: remoteRowIndex,\n            dataSourceArray: dataSourceArray,\n            data: cellProps.data,\n            value: cellProps.value,\n            rowIndex: cellProps.rowIndex,\n            column: column,\n            columns: columns,\n            empty: empty\n          }));\n\n          if (lockedStart) {\n            computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedStartIndex - computedVisibleIndex + 1, 1));\n          }\n\n          if (lockedEnd) {\n            computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastLockedEndIndex - computedVisibleIndex + 1, 1));\n          }\n\n          if (unlocked) {\n            computedColspan = (0, _clamp.default)(computedColspan, 1, Math.max(lastUnlockedIndex - computedVisibleIndex + 1, 1));\n          }\n\n          if (computedColspan > 1) {\n            cellProps.computedWidth = columns.slice(theColumnIndex, theColumnIndex + computedColspan).reduce(function (sum, col) {\n              if (col.id !== column.id) {\n                hiddenCells[col.id] = true;\n\n                if (column.computedLocked === col.computedLocked) {\n                  belongsToColspan[col.id] = column.id;\n                  columnsTillColspanStart[col.id] = col.computedVisibleIndex - column.computedVisibleIndex;\n                }\n              }\n\n              return sum + col.computedWidth;\n            }, 0);\n          }\n        }\n\n        cellProps.lastInSection = lockedStart ? computedVisibleIndex + computedColspan - 1 === firstUnlockedIndex - 1 : lockedEnd ? computedVisibleIndex + computedColspan - 1 === visibleColumnCount - 1 : computedVisibleIndex + computedColspan - 1 === firstLockedEndIndex - 1;\n        cellProps.firstInSection = lockedStart ? computedVisibleIndex === 0 : lockedEnd ? computedVisibleIndex === firstLockedEndIndex : computedVisibleIndex === firstUnlockedIndex;\n\n        if (computedGroupBy && !groupColumn) {\n          cellProps.noBackground = computedVisibleIndex < cellProps.depth;\n        }\n\n        if (hiddenCells[column.id]) {\n          cellProps.hidden = true;\n        }\n\n        if (belongsToColspan[column.id]) {\n          cellProps.computedColspanedBy = belongsToColspan[column.id];\n          cellProps.computedColspanToStart = columnsTillColspanStart[column.id];\n        }\n\n        if (groupProps && !groupColumn) {\n          (0, _adjustCellProps.default)(cellProps, _this5.props);\n        }\n\n        if (cellProps.hidden) {\n          cellProps.last = false;\n          cellProps.lastInSection = false;\n        } else {\n          cellProps.showBorderLeft = showVerticalCellBorders && computedVisibleIndex > 0;\n          cellProps.showBorderBottom = showHorizontalCellBorders;\n\n          if (!showVerticalCellBorders && computedGroupBy) {\n            cellProps.showBorderLeft = computedVisibleIndex > 0 && computedVisibleIndex <= computedGroupBy.length;\n          }\n\n          if (computedGroupBy) {\n            if (!cellProps.groupProps) {\n              cellProps.showBorderBottom = groupColumn ? showHorizontalCellBorders : computedVisibleIndex >= computedGroupBy.length && showHorizontalCellBorders;\n              var summaryBefore = indexInGroup === 0 && !groupColumn ? dataSourceArray[rowIndex - indexInGroup] : null;\n\n              if (summaryBefore && summaryBefore.__summary && computedVisibleIndex >= computedGroupBy.length) {\n                cellProps.showBorderBottom = false;\n              }\n            }\n\n            if (!empty) {\n              if (!groupColumn && (computedVisibleIndex < computedGroupBy.length || lastInGroup)) {\n                cellProps.showBorderBottom = rowExpanded;\n              }\n\n              if (cellProps.groupProps) {\n                cellProps.showBorderBottom = cellProps.groupProps.collapsed ? !!groupColumn : groupColumn ? true : computedVisibleIndex > cellProps.groupProps.depth && cellProps.groupProps.depth >= computedGroupBy.length;\n                cellProps.showBorderTop = groupTitleCell || groupExpandCell || !expandGroupTitle && !groupColumn;\n              } else if (indexInGroup === 0 && !groupColumn) {\n                cellProps.showBorderTop = computedVisibleIndex >= computedGroupBy.length;\n              }\n\n              if (lastNonEmpty && !lastRow && showHorizontalCellBorders) {\n                cellProps.showBorderBottom = computedVisibleIndex >= (cellProps.groupProps ? cellProps.groupProps.depth : computedGroupBy.length);\n              }\n            } else if (rowIndex > 0 && showHorizontalCellBorders) {\n              if (rowIndex === totalDataCount) {\n                cellProps.showBorderBottom = computedVisibleIndex >= computedGroupBy.length;\n              } else {\n                cellProps.showBorderBottom = computedGroupBy ? computedVisibleIndex >= computedGroupBy.length : true;\n              }\n            }\n          }\n\n          if (lastRow) {\n            cellProps.showBorderBottom = rowIndex < maxVisibleRows - 1 || rowExpanded;\n          }\n\n          if (lockedStart && cellProps.lastInSection) {\n            cellProps.showBorderRight = true;\n          }\n\n          if (lockedEnd && computedVisibleIndex === firstLockedEndIndex) {\n            cellProps.showBorderLeft = true;\n          }\n\n          if (cellProps.groupProps && computedVisibleIndex >= cellProps.groupProps.depth + 1 && !groupColumn) {\n            cellProps.showBorderLeft = false;\n          }\n\n          if (cellProps.summaryProps) {\n            cellProps.showBorderBottom = lastRow;\n            cellProps.showBorderTop = computedVisibleIndex > cellProps.summaryProps.depth;\n\n            if (cellProps.summaryProps.position == 'start') {\n              cellProps.showBorderTop = computedVisibleIndex >= cellProps.summaryProps.depth;\n              cellProps.showBorderBottom = false;\n            }\n\n            cellProps.showBorderLeft = showVerticalCellBorders ? true : computedVisibleIndex <= cellProps.summaryProps.depth;\n\n            if (computedVisibleIndex > cellProps.summaryProps.depth && computedVisibleIndex <= computedGroupBy.length && !groupColumn) {\n              cellProps.showBorderLeft = false;\n            }\n\n            if (computedVisibleIndex === 0) {\n              cellProps.showBorderLeft = false;\n            }\n\n            cellProps.noBackground = !groupColumn;\n          }\n\n          if (firstUnlockedIndex === computedVisibleIndex && hasLockedStart) {\n            cellProps.showBorderLeft = false;\n          }\n\n          if (cellProps.groupSpacerColumn && rowExpanded) {\n            cellProps.showBorderBottom = false;\n          }\n\n          if (cellProps.last) {\n            cellProps.showBorderRight = true;\n          }\n\n          var prevColumn = columns[theColumnIndex - 1];\n          var nextColumn = columns[theColumnIndex + 1];\n\n          if (nextColumn && nextColumn.prevBorderRight !== undefined && !(lockedStart && cellProps.lastInSection)) {\n            cellProps.showBorderRight = nextColumn.prevBorderRight;\n          }\n\n          if (prevColumn && prevColumn.nextBorderLeft !== undefined) {\n            cellProps.showBorderLeft = prevColumn.nextBorderLeft;\n          }\n\n          if (columnProps.showBorderRight !== undefined) {\n            cellProps.showBorderRight = columnProps.showBorderRight;\n          }\n\n          if (columnProps.showBorderLeft !== undefined) {\n            cellProps.showBorderLeft = columnProps.showBorderLeft;\n          }\n        }\n\n        if (cellProps.computedEditable) {\n          cellProps.onEditStopForRow = _this5.onCellStopEdit;\n          cellProps.onEditStartForRow = _this5.onCellStartEdit;\n          cellProps.onEditCancelForRow = _this5.onCellEditCancel;\n          cellProps.onEditValueChangeForRow = _this5.onCellEditValueChange;\n          cellProps.onEditCompleteForRow = _this5.onCellEditComplete;\n        }\n\n        hasBorderBottom = hasBorderBottom || cellProps.showBorderBottom;\n        hasBorderTop = hasBorderTop || cellProps.showBorderTop;\n        return cellProps;\n      });\n      this.maxRowspan = maxRowspan;\n\n      if (this.props.computedEnableRowspan) {\n        this.props.setRowSpan(maxRowspan);\n      }\n\n      this.hasBorderTop = hasBorderTop;\n      this.hasBorderBottom = hasBorderBottom;\n      return cellPropsArray;\n    }\n  }, {\n    key: \"onCellStopEdit\",\n    value: function onCellStopEdit(value, cellProps) {\n      if (this.props.onEditStop) {\n        this.props.onEditStop({\n          value: value,\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellStartEdit\",\n    value: function onCellStartEdit(value, cellProps) {\n      if (this.props.onEditStart) {\n        this.props.onEditStart({\n          data: cellProps.data,\n          value: value,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellEditCancel\",\n    value: function onCellEditCancel(cellProps) {\n      if (this.props.onEditCancel) {\n        this.props.onEditCancel({\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnIndex: cellProps.computedVisibleIndex,\n          columnId: cellProps.id,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellEditValueChange\",\n    value: function onCellEditValueChange(value, cellProps) {\n      if (this.props.onEditValueChange) {\n        this.props.onEditValueChange({\n          value: value,\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"onCellEditComplete\",\n    value: function onCellEditComplete(value, cellProps) {\n      if (this.props.onEditComplete) {\n        this.props.onEditComplete({\n          value: value,\n          data: cellProps.data,\n          rowId: this.props.getItemId(cellProps.data),\n          columnId: cellProps.id,\n          columnIndex: cellProps.computedVisibleIndex,\n          rowIndex: cellProps.rowIndex,\n          cellProps: cellProps\n        });\n      }\n    }\n  }, {\n    key: \"tryRowCellEdit\",\n    value: function tryRowCellEdit(editIndex) {\n      var _this6 = this;\n\n      var dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var cols = this.props.columns;\n      var col;\n      var colIndex;\n\n      if (!dir) {\n        dir = 1;\n      }\n\n      dir = dir == 1 ? 1 : -1;\n      var currentIndex = dir == 1 ? 0 : cols.length - 1;\n      var foundCols = [];\n\n      while (cols[currentIndex]) {\n        col = cols[currentIndex];\n\n        if (col.editable || this.props.editable && col.editable !== false) {\n          colIndex = col.computedVisibleIndex;\n\n          if (colIndex == editIndex) {\n            foundCols.push(col);\n          } else {\n            if (dir < 0) {\n              if (colIndex < editIndex) {\n                foundCols.push(col);\n              }\n            } else if (dir > 0) {\n              if (colIndex > editIndex) {\n                foundCols.push(col);\n              }\n            }\n          }\n        }\n\n        currentIndex += dir;\n      }\n\n      if (!foundCols.length) {\n        this.tryNextRowEdit(dir);\n        return Promise.reject(null);\n      }\n\n      foundCols.sort(function (a, b) {\n        return dir > 0 ? a - b : b - a;\n      });\n      var retries = {};\n      return new Promise(function (resolve, reject) {\n        var startEdit = function startEdit(cols) {\n          var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n          var errBack = function errBack() {\n            startEdit(cols, index + 1);\n          };\n\n          var col = cols[index];\n\n          if (!col) {\n            _this6.tryNextRowEdit(dir);\n\n            return reject('column not found');\n          }\n\n          var cell = _this6.getCellById(col.id);\n\n          if (!cell) {\n            if (retries[col.id]) {\n              return reject('column not found');\n            }\n\n            retries[col.id] = true;\n\n            _this6.props.scrollToColumn(col.id, undefined, function () {\n              setTimeout(function () {\n                startEdit(cols, index);\n              }, 20);\n            });\n\n            return;\n          }\n\n          return cell.startEdit(undefined, errBack).then(resolve).catch(errBack);\n        };\n\n        startEdit(foundCols, 0);\n      });\n    }\n  }, {\n    key: \"tryNextRowEdit\",\n    value: function tryNextRowEdit(dir) {\n      if (this.props.tryNextRowEdit) {\n        this.props.tryNextRowEdit(this.props.rowIndex + dir, dir);\n      }\n    }\n  }, {\n    key: \"onTransitionEnd\",\n    value: function onTransitionEnd(cellProps, columnProps, e) {\n      e.stopPropagation();\n\n      if (columnProps.onTransitionEnd) {\n        columnProps.onTransitionEnd(e);\n      }\n\n      if (this.props.onTransitionEnd) {\n        this.props.onTransitionEnd(e, cellProps);\n      }\n    }\n  }, {\n    key: \"getColumnRenderRange\",\n    value: function getColumnRenderRange(cellProps) {\n      var _this$props = this.props,\n          lockedStartColumns = _this$props.lockedStartColumns,\n          lockedEndColumns = _this$props.lockedEndColumns,\n          columnRenderCount = _this$props.columnRenderCount,\n          groupProps = _this$props.groupProps,\n          columns = _this$props.columns,\n          groupColumn = _this$props.groupColumn;\n      var virtualizeColumns = this.getVirtualizeColumns();\n\n      if (!virtualizeColumns) {\n        return null;\n      }\n\n      var minStartIndex = lockedStartColumns.length ? lockedStartColumns.length : groupProps && !groupColumn ? groupProps.depth + 2 : 0;\n      var maxEndIndex = columns.length - lockedEndColumns.length - 1;\n      var columnRenderStartIndex = this.columnRenderStartIndex == null ? this.props.columnRenderStartIndex || 0 : this.columnRenderStartIndex;\n      columnRenderStartIndex = Math.max(columnRenderStartIndex, minStartIndex);\n\n      var fixStartIndexForColspan = function fixStartIndexForColspan() {\n        if (cellProps) {\n          while (cellProps[columnRenderStartIndex].computedColspanedBy) {\n            columnRenderStartIndex--;\n          }\n        }\n      };\n\n      if (columnRenderCount != null) {\n        var columnRenderEndIndex = columnRenderStartIndex + columnRenderCount;\n        columnRenderEndIndex = Math.min(columnRenderEndIndex, maxEndIndex);\n\n        if (columnRenderEndIndex - columnRenderCount != columnRenderStartIndex) {\n          columnRenderStartIndex = Math.max(columnRenderEndIndex - columnRenderCount, minStartIndex);\n        }\n\n        if (columnRenderEndIndex < 0) {\n          return {\n            start: 0,\n            end: 0\n          };\n        }\n\n        fixStartIndexForColspan();\n        return {\n          start: columnRenderStartIndex,\n          end: columnRenderEndIndex\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"expandRangeWithColspan\",\n    value: function expandRangeWithColspan(range, cellProps) {\n      var extraNeededColumns = cellProps.reduce(function (total, cellProps) {\n        return total + (cellProps.computedColspan > 1 ? cellProps.computedColspan - 1 : 0);\n      }, 0);\n\n      if (!extraNeededColumns) {\n        return range;\n      }\n\n      var firstUnlockedIndex = this.props.firstUnlockedIndex;\n\n      if (range.start < firstUnlockedIndex) {\n        range.start = firstUnlockedIndex;\n      }\n\n      if (range.start > extraNeededColumns) {\n        range.start -= extraNeededColumns;\n        return range;\n      }\n\n      extraNeededColumns -= range.start;\n      range.start = 0;\n\n      if (extraNeededColumns) {\n        range.end += extraNeededColumns;\n      }\n\n      return range;\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(_, __, style) {\n      var _this7 = this;\n\n      var _this$props2 = this.props,\n          scrollLeft = _this$props2.scrollLeft,\n          hasLockedStart = _this$props2.hasLockedStart,\n          hasLockedEnd = _this$props2.hasLockedEnd,\n          lockedStartColumns = _this$props2.lockedStartColumns,\n          lockedEndColumns = _this$props2.lockedEndColumns,\n          computedHasColSpan = _this$props2.computedHasColSpan,\n          groupProps = _this$props2.groupProps,\n          columns = _this$props2.columns;\n      var virtualizeColumns = this.getVirtualizeColumns();\n      var cellProps;\n\n      if (!virtualizeColumns) {\n        cellProps = this.getPropsForCells();\n      } else {\n        var lockedStartCellProps = [];\n        var lockedEndCellProps = [];\n        var groupCellProps = [];\n        var renderRange;\n\n        if (computedHasColSpan) {\n          cellProps = this.getPropsForCells();\n\n          if (hasLockedStart) {\n            lockedStartCellProps = cellProps.slice(0, lockedStartColumns.length);\n          } else if (groupProps) {\n            groupCellProps = cellProps.slice(0, groupProps.depth + 2);\n          }\n\n          if (hasLockedEnd) {\n            lockedEndCellProps = cellProps.slice(columns.length - lockedEndColumns.length, columns.length);\n          }\n\n          renderRange = this.getColumnRenderRange(cellProps);\n\n          if (renderRange) {\n            renderRange = this.expandRangeWithColspan(renderRange, cellProps);\n            cellProps = cellProps.slice(renderRange.start, renderRange.end + 1);\n          }\n        } else {\n          var _renderRange4, _renderRange5;\n\n          renderRange = this.getColumnRenderRange();\n          cellProps = this.getPropsForCells((_renderRange4 = renderRange) === null || _renderRange4 === void 0 ? void 0 : _renderRange4.start, (((_renderRange5 = renderRange) === null || _renderRange5 === void 0 ? void 0 : _renderRange5.end) || 0) + 1);\n\n          if (hasLockedStart) {\n            lockedStartCellProps = this.getPropsForCells(0, lockedStartColumns.length - 1);\n          } else if (groupProps) {\n            groupCellProps = this.getPropsForCells(0, groupProps.depth + 2 - 1);\n          }\n\n          if (hasLockedEnd) {\n            lockedEndCellProps = this.getPropsForCells(lockedEndColumns[0].computedVisibleIndex, columns.length - 1);\n          }\n        }\n\n        if (hasLockedStart) {\n          cellProps = [].concat((0, _toConsumableArray2.default)(lockedStartCellProps), (0, _toConsumableArray2.default)(cellProps));\n        } else if (groupProps) {\n          cellProps = [].concat((0, _toConsumableArray2.default)(groupCellProps), (0, _toConsumableArray2.default)(cellProps));\n        }\n\n        if (hasLockedEnd) {\n          var _cellProps;\n\n          (_cellProps = cellProps).push.apply(_cellProps, (0, _toConsumableArray2.default)(lockedEndCellProps));\n        }\n      }\n\n      var result = cellProps.map(function (cProps, index) {\n        var cell;\n        var key = index;\n\n        if (!virtualizeColumns) {\n          key = cProps.id || index;\n        }\n\n        if (_this7.props.cellFactory) {\n          cell = _this7.props.cellFactory(cProps);\n        }\n\n        if (cell === undefined) {\n          cell = _react.default.createElement(_Cell.default, Object.assign({}, cProps, {\n            key: key\n          }));\n        }\n\n        return cell;\n      });\n      return (0, _renderCellsMaybeLocked.default)(result, this.props, scrollLeft, undefined, style);\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick(event) {\n      var props = this.props;\n      var passedProps = props.passedProps;\n\n      if (props.onClick) {\n        props.onClick(event, props);\n      }\n\n      if (passedProps && passedProps.onClick) {\n        passedProps.onClick(event, props);\n      }\n    }\n  }]);\n  return DataGridRow;\n}(_react.default.Component);\n\nexports.default = DataGridRow;\n\nvar emptyFn = function emptyFn() {};\n\nDataGridRow.defaultProps = {\n  onClick: emptyFn,\n  onMouseEnter: emptyFn,\n  onMouseLeave: emptyFn,\n  onMouseDown: emptyFn,\n  columnRenderStartIndex: 0,\n  showAllGroupCells: false\n};\nDataGridRow.propTypes = {\n  rowActive: _propTypes.default.bool,\n  rowSelected: _propTypes.default.bool,\n  availableWidth: _propTypes.default.number,\n  computedGroupBy: _propTypes.default.array,\n  expandGroupTitle: _propTypes.default.bool,\n  getCellSelectionKey: _propTypes.default.func,\n  depth: _propTypes.default.number,\n  columns: _propTypes.default.array,\n  columnsMap: _propTypes.default.shape({}),\n  active: _propTypes.default.bool,\n  computedActiveCell: _propTypes.default.any,\n  cellFactory: _propTypes.default.func,\n  computedCellMultiSelectionEnabled: _propTypes.default.bool,\n  computedCellSelection: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  columnRenderCount: _propTypes.default.number,\n  columnRenderStartIndex: _propTypes.default.number,\n  columnUserSelect: _propTypes.default.bool,\n  deselectAll: _propTypes.default.func,\n  empty: _propTypes.default.bool,\n  even: _propTypes.default.bool,\n  firstLockedEndIndex: _propTypes.default.number,\n  firstLockedStartIndex: _propTypes.default.number,\n  firstUnlockedIndex: _propTypes.default.number,\n  flex: _propTypes.default.number,\n  groupCount: _propTypes.default.number,\n  groupNestingSize: _propTypes.default.number,\n  treeNestingSize: _propTypes.default.number,\n  groupProps: _propTypes.default.object,\n  summaryProps: _propTypes.default.object,\n  hasLockedEnd: _propTypes.default.bool,\n  hasLockedStart: _propTypes.default.bool,\n  indexInGroup: _propTypes.default.number,\n  last: _propTypes.default.bool,\n  lastCellInRange: _propTypes.default.any,\n  lastNonEmpty: _propTypes.default.bool,\n  lastRowInGroup: _propTypes.default.bool,\n  lockedEndColumns: _propTypes.default.array,\n  lockedStartColumns: _propTypes.default.array,\n  maxRowHeight: _propTypes.default.number,\n  minRowHeight: _propTypes.default.number,\n  maxVisibleRows: _propTypes.default.number,\n  minWidth: _propTypes.default.number,\n  multiSelect: _propTypes.default.bool,\n  odd: _propTypes.default.bool,\n  onArrowDown: _propTypes.default.func,\n  onArrowUp: _propTypes.default.func,\n  onCellClick: _propTypes.default.func,\n  onCellEnter: _propTypes.default.func,\n  onCellMouseDown: _propTypes.default.func,\n  onCellSelectionDraggerMouseDown: _propTypes.default.func,\n  onRowContextMenu: _propTypes.default.func,\n  passedProps: _propTypes.default.object,\n  realIndex: _propTypes.default.number,\n  renderIndex: _propTypes.default.number,\n  renderRow: _propTypes.default.func,\n  onRenderRow: _propTypes.default.func,\n  rowHeight: _propTypes.default.number,\n  rowExpandHeight: _propTypes.default.number,\n  initialRowHeight: _propTypes.default.number,\n  defaultRowHeight: _propTypes.default.number,\n  emptyScrollOffset: _propTypes.default.number,\n  rowIndex: _propTypes.default.number,\n  remoteRowIndex: _propTypes.default.number,\n  rowIndexInGroup: _propTypes.default.bool,\n  rowStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.func]),\n  rowClassName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]),\n  scrollLeft: _propTypes.default.number,\n  selectAll: _propTypes.default.func,\n  selected: _propTypes.default.bool,\n  expanded: _propTypes.default.bool,\n  selection: _propTypes.default.any,\n  computedRowExpandEnabled: _propTypes.default.bool,\n  computedTreeEnabled: _propTypes.default.bool,\n  computedRenderRowDetails: _propTypes.default.func,\n  isRowExpandableAt: _propTypes.default.func,\n  setRowSelected: _propTypes.default.func,\n  setRowExpanded: _propTypes.default.func,\n  toggleRowExpand: _propTypes.default.func,\n  toggleNodeExpand: _propTypes.default.func,\n  showAllGroupCells: _propTypes.default.bool,\n  computedShowCellBorders: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  showHorizontalCellBorders: _propTypes.default.bool,\n  showVerticalCellBorders: _propTypes.default.bool,\n  totalColumnCount: _propTypes.default.number,\n  totalComputedWidth: _propTypes.default.number,\n  totalDataCount: _propTypes.default.number,\n  totalLockedEndWidth: _propTypes.default.number,\n  totalLockedStartWidth: _propTypes.default.number,\n  totalUnlockedWidth: _propTypes.default.number,\n  unlockedColumns: _propTypes.default.array,\n  virtualizeColumns: _propTypes.default.bool,\n  nativeScroll: _propTypes.default.bool,\n  shouldRenderCollapsedRowDetails: _propTypes.default.bool,\n  rowDetailsStyle: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),\n  dataSourceArray: _propTypes.default.array,\n  getItemId: _propTypes.default.func.isRequired,\n  editable: _propTypes.default.bool,\n  editing: _propTypes.default.bool,\n  editValue: _propTypes.default.any,\n  editRowIndex: _propTypes.default.number,\n  editColumnIndex: _propTypes.default.number,\n  editColumnId: _propTypes.default.any,\n  naturalRowHeight: _propTypes.default.bool,\n  renderDetailsGrid: _propTypes.default.func,\n  scrollToColumn: _propTypes.default.func,\n  renderNodeTool: _propTypes.default.func,\n  computedEnableRowspan: _propTypes.default.bool,\n  setRowSpan: _propTypes.default.func,\n  treeColumn: _propTypes.default.string,\n  scrollbars: _propTypes.default.shape({\n    horizontal: _propTypes.default.bool,\n    vertical: _propTypes.default.bool\n  }),\n  rtl: _propTypes.default.bool,\n  computedPivot: _propTypes.default.array,\n  groupColumnSummaries: _propTypes.default.any,\n  groupSummary: _propTypes.default.any,\n  groupColumn: _propTypes.default.any,\n  lastUnlockedIndex: _propTypes.default.number,\n  lastLockedEndIndex: _propTypes.default.number,\n  lastLockedStartIndex: _propTypes.default.number,\n  computedShowZebraRows: _propTypes.default.bool,\n  computedRowspans: _propTypes.default.any,\n  editStartEvent: _propTypes.default.string,\n  onGroupToggle: _propTypes.default.func,\n  onEditStop: _propTypes.default.func,\n  onEditStart: _propTypes.default.func,\n  onEditCancel: _propTypes.default.func,\n  onEditValueChange: _propTypes.default.func,\n  onEditComplete: _propTypes.default.func,\n  onFilterValueChange: _propTypes.default.func,\n  tryNextRowEdit: _propTypes.default.func,\n  getScrollLeftMax: _propTypes.default.func,\n  activeRowRef: _propTypes.default.any,\n  sticky: _propTypes.default.bool,\n  edition: _propTypes.default.string,\n  computedLicenseValid: _propTypes.default.bool,\n  parentGroupDataArray: _propTypes.default.any,\n  rowDetailsWidth: _propTypes.default.oneOf(['max-viewport-width', 'min-viewport-width', 'viewport-width']),\n  computedHasColSpan: _propTypes.default.bool,\n  onRowReorder: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.bool]),\n  onDragRowMouseDown: _propTypes.default.func,\n  renderLockedStartCells: _propTypes.default.func,\n  renderLockedEndCells: _propTypes.default.func\n};"]},"metadata":{},"sourceType":"script"}