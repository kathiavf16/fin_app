{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _separateEvents2 = _interopRequireDefault(require(\"./separateEvents\"));\n\nvar _registerEvents = require(\"./registerEvents\");\n\nvar _generateHandlers = require(\"./generateHandlers\");\n\nvar _createHideOnClickOutsideAction = _interopRequireDefault(require(\"./createHideOnClickOutsideAction\"));\n\nfunction eventManager(config) {\n  var _config$showEvent = config.showEvent,\n      showEvent = _config$showEvent === void 0 ? [] : _config$showEvent,\n      _config$hideEvent = config.hideEvent,\n      hideEvent = _config$hideEvent === void 0 ? [] : _config$hideEvent,\n      target = config.target,\n      hideOnScroll = config.hideOnScroll,\n      hideOnClickOutside = config.hideOnClickOutside,\n      hideOnEscape = config.hideOnEscape,\n      onShow = config.onShow,\n      onHide = config.onHide,\n      getShowDelay = config.getShowDelay,\n      getHideDelay = config.getHideDelay,\n      getVisible = config.getVisible,\n      _config$getOverlayNod = config.getOverlayNode,\n      getOverlayNode = _config$getOverlayNod === void 0 ? function () {} : _config$getOverlayNod,\n      getActiveTargetNode = config.getActiveTargetNode;\n  var timeoutState = {\n    showId: null,\n    hideId: null,\n    targetThatTriggeredEvent: null\n  };\n\n  var _separateEvents = (0, _separateEvents2.default)({\n    showEvent: showEvent,\n    hideEvent: hideEvent\n  }),\n      normalizedShowEvents = _separateEvents.normalizedShowEvents,\n      normalizedHideEvents = _separateEvents.normalizedHideEvents,\n      toggleEvents = _separateEvents.toggleEvents;\n\n  var showAction = (0, _generateHandlers.createShowHandler)({\n    timeoutState: timeoutState,\n    target: target,\n    getActiveTargetNode: getActiveTargetNode,\n    action: onShow,\n    getDelay: getShowDelay\n  });\n\n  if (normalizedShowEvents && onShow) {\n    (0, _registerEvents.registerListeners)({\n      events: normalizedShowEvents,\n      action: showAction\n    });\n  }\n\n  var hideAction = (0, _generateHandlers.createHideHandler)({\n    timeoutState: timeoutState,\n    target: target,\n    getActiveTargetNode: getActiveTargetNode,\n    action: onHide,\n    getDelay: getHideDelay\n  });\n\n  if (normalizedHideEvents && onHide) {\n    (0, _registerEvents.registerListeners)({\n      events: normalizedHideEvents,\n      action: hideAction\n    });\n  }\n\n  var toggleAction;\n\n  if (toggleEvents.length) {\n    toggleAction = (0, _generateHandlers.createToggleHandler)({\n      target: target,\n      getActiveTargetNode: getActiveTargetNode,\n      getVisible: getVisible,\n      onHide: hideAction,\n      onShow: showAction\n    });\n    (0, _registerEvents.registerListeners)({\n      events: toggleEvents,\n      action: toggleAction\n    });\n  }\n\n  var hideOnClickOutsideAction;\n\n  if (hideOnClickOutside) {\n    hideOnClickOutsideAction = (0, _createHideOnClickOutsideAction.default)({\n      getOverlayNode: getOverlayNode,\n      getActiveTargetNode: getActiveTargetNode,\n      onHide: hideAction\n    });\n    (0, _registerEvents.registerListeners)({\n      events: ['click'],\n      action: hideOnClickOutsideAction\n    });\n  }\n\n  var hideOnScrollAction;\n\n  if (hideOnScroll) {\n    hideOnScrollAction = function hideOnScrollAction(event) {\n      if (getVisible()) {\n        hideAction(event, {\n          target: null\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['scroll'],\n      action: hideOnScrollAction\n    });\n  }\n\n  var hideOnEscapeAction;\n\n  if (hideOnEscape) {\n    hideOnEscapeAction = function hideOnEscapeAction(event) {\n      if (getVisible() && event.key === 'Escape') {\n        hideAction(event, {\n          target: null\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['keydown'],\n      action: hideOnEscapeAction\n    });\n  }\n\n  var handleOverlayShowAction;\n  var handleOverlayHideAction;\n\n  if (normalizedHideEvents.indexOf('mouseleave') !== -1) {\n    handleOverlayShowAction = function handleOverlayShowAction(event) {\n      if (event.target === getOverlayNode()) {\n        var activeTargetNode = getActiveTargetNode();\n        showAction(event, {\n          target: activeTargetNode\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['mouseenter'],\n      action: handleOverlayShowAction\n    });\n\n    handleOverlayHideAction = function handleOverlayHideAction(event) {\n      if (event.target === getOverlayNode()) {\n        var activeTargetNode = getActiveTargetNode();\n        hideAction(event, {\n          target: activeTargetNode\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['mouseleave'],\n      action: handleOverlayHideAction\n    });\n  }\n\n  return {\n    unregister: function unregister() {\n      if (normalizedShowEvents && showAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: normalizedShowEvents,\n          action: showAction\n        });\n      }\n\n      if (normalizedHideEvents && hideAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: normalizedHideEvents,\n          action: hideAction\n        });\n      }\n\n      if (toggleEvents && toggleAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: toggleEvents,\n          action: toggleAction\n        });\n      }\n\n      if (hideOnClickOutsideAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['click'],\n          action: hideOnClickOutsideAction\n        });\n      }\n\n      if (hideOnScrollAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['scroll'],\n          action: hideOnScrollAction\n        });\n      }\n\n      if (handleOverlayShowAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['mouseenter'],\n          action: handleOverlayShowAction\n        });\n      }\n\n      if (handleOverlayHideAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['mouseleave'],\n          action: handleOverlayHideAction\n        });\n      }\n\n      if (hideOnEscapeAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['keydown'],\n          action: hideOnEscapeAction\n        });\n      }\n    }\n  };\n}\n\nvar _default = eventManager;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/Overlay/src/eventManager/eventManager.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_separateEvents2","_registerEvents","_generateHandlers","_createHideOnClickOutsideAction","eventManager","config","_config$showEvent","showEvent","_config$hideEvent","hideEvent","target","hideOnScroll","hideOnClickOutside","hideOnEscape","onShow","onHide","getShowDelay","getHideDelay","getVisible","_config$getOverlayNod","getOverlayNode","getActiveTargetNode","timeoutState","showId","hideId","targetThatTriggeredEvent","_separateEvents","normalizedShowEvents","normalizedHideEvents","toggleEvents","showAction","createShowHandler","action","getDelay","registerListeners","events","hideAction","createHideHandler","toggleAction","length","createToggleHandler","hideOnClickOutsideAction","hideOnScrollAction","event","hideOnEscapeAction","key","handleOverlayShowAction","handleOverlayHideAction","indexOf","activeTargetNode","unregister","unregisterListeners","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _separateEvents2 = _interopRequireDefault(require(\"./separateEvents\"));\n\nvar _registerEvents = require(\"./registerEvents\");\n\nvar _generateHandlers = require(\"./generateHandlers\");\n\nvar _createHideOnClickOutsideAction = _interopRequireDefault(require(\"./createHideOnClickOutsideAction\"));\n\nfunction eventManager(config) {\n  var _config$showEvent = config.showEvent,\n      showEvent = _config$showEvent === void 0 ? [] : _config$showEvent,\n      _config$hideEvent = config.hideEvent,\n      hideEvent = _config$hideEvent === void 0 ? [] : _config$hideEvent,\n      target = config.target,\n      hideOnScroll = config.hideOnScroll,\n      hideOnClickOutside = config.hideOnClickOutside,\n      hideOnEscape = config.hideOnEscape,\n      onShow = config.onShow,\n      onHide = config.onHide,\n      getShowDelay = config.getShowDelay,\n      getHideDelay = config.getHideDelay,\n      getVisible = config.getVisible,\n      _config$getOverlayNod = config.getOverlayNode,\n      getOverlayNode = _config$getOverlayNod === void 0 ? function () {} : _config$getOverlayNod,\n      getActiveTargetNode = config.getActiveTargetNode;\n  var timeoutState = {\n    showId: null,\n    hideId: null,\n    targetThatTriggeredEvent: null\n  };\n\n  var _separateEvents = (0, _separateEvents2.default)({\n    showEvent: showEvent,\n    hideEvent: hideEvent\n  }),\n      normalizedShowEvents = _separateEvents.normalizedShowEvents,\n      normalizedHideEvents = _separateEvents.normalizedHideEvents,\n      toggleEvents = _separateEvents.toggleEvents;\n\n  var showAction = (0, _generateHandlers.createShowHandler)({\n    timeoutState: timeoutState,\n    target: target,\n    getActiveTargetNode: getActiveTargetNode,\n    action: onShow,\n    getDelay: getShowDelay\n  });\n\n  if (normalizedShowEvents && onShow) {\n    (0, _registerEvents.registerListeners)({\n      events: normalizedShowEvents,\n      action: showAction\n    });\n  }\n\n  var hideAction = (0, _generateHandlers.createHideHandler)({\n    timeoutState: timeoutState,\n    target: target,\n    getActiveTargetNode: getActiveTargetNode,\n    action: onHide,\n    getDelay: getHideDelay\n  });\n\n  if (normalizedHideEvents && onHide) {\n    (0, _registerEvents.registerListeners)({\n      events: normalizedHideEvents,\n      action: hideAction\n    });\n  }\n\n  var toggleAction;\n\n  if (toggleEvents.length) {\n    toggleAction = (0, _generateHandlers.createToggleHandler)({\n      target: target,\n      getActiveTargetNode: getActiveTargetNode,\n      getVisible: getVisible,\n      onHide: hideAction,\n      onShow: showAction\n    });\n    (0, _registerEvents.registerListeners)({\n      events: toggleEvents,\n      action: toggleAction\n    });\n  }\n\n  var hideOnClickOutsideAction;\n\n  if (hideOnClickOutside) {\n    hideOnClickOutsideAction = (0, _createHideOnClickOutsideAction.default)({\n      getOverlayNode: getOverlayNode,\n      getActiveTargetNode: getActiveTargetNode,\n      onHide: hideAction\n    });\n    (0, _registerEvents.registerListeners)({\n      events: ['click'],\n      action: hideOnClickOutsideAction\n    });\n  }\n\n  var hideOnScrollAction;\n\n  if (hideOnScroll) {\n    hideOnScrollAction = function hideOnScrollAction(event) {\n      if (getVisible()) {\n        hideAction(event, {\n          target: null\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['scroll'],\n      action: hideOnScrollAction\n    });\n  }\n\n  var hideOnEscapeAction;\n\n  if (hideOnEscape) {\n    hideOnEscapeAction = function hideOnEscapeAction(event) {\n      if (getVisible() && event.key === 'Escape') {\n        hideAction(event, {\n          target: null\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['keydown'],\n      action: hideOnEscapeAction\n    });\n  }\n\n  var handleOverlayShowAction;\n  var handleOverlayHideAction;\n\n  if (normalizedHideEvents.indexOf('mouseleave') !== -1) {\n    handleOverlayShowAction = function handleOverlayShowAction(event) {\n      if (event.target === getOverlayNode()) {\n        var activeTargetNode = getActiveTargetNode();\n        showAction(event, {\n          target: activeTargetNode\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['mouseenter'],\n      action: handleOverlayShowAction\n    });\n\n    handleOverlayHideAction = function handleOverlayHideAction(event) {\n      if (event.target === getOverlayNode()) {\n        var activeTargetNode = getActiveTargetNode();\n        hideAction(event, {\n          target: activeTargetNode\n        });\n      }\n    };\n\n    (0, _registerEvents.registerListeners)({\n      events: ['mouseleave'],\n      action: handleOverlayHideAction\n    });\n  }\n\n  return {\n    unregister: function unregister() {\n      if (normalizedShowEvents && showAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: normalizedShowEvents,\n          action: showAction\n        });\n      }\n\n      if (normalizedHideEvents && hideAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: normalizedHideEvents,\n          action: hideAction\n        });\n      }\n\n      if (toggleEvents && toggleAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: toggleEvents,\n          action: toggleAction\n        });\n      }\n\n      if (hideOnClickOutsideAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['click'],\n          action: hideOnClickOutsideAction\n        });\n      }\n\n      if (hideOnScrollAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['scroll'],\n          action: hideOnScrollAction\n        });\n      }\n\n      if (handleOverlayShowAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['mouseenter'],\n          action: handleOverlayShowAction\n        });\n      }\n\n      if (handleOverlayHideAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['mouseleave'],\n          action: handleOverlayHideAction\n        });\n      }\n\n      if (hideOnEscapeAction) {\n        (0, _registerEvents.unregisterListeners)({\n          events: ['keydown'],\n          action: hideOnEscapeAction\n        });\n      }\n    }\n  };\n}\n\nvar _default = eventManager;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}