{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar DEFAULT_WIDTH = 150;\n\nvar computeColumnWidths = function computeColumnWidths(col, _ref) {\n  var columnMinWidth = _ref.columnMinWidth,\n      columnWidth = _ref.columnWidth,\n      columnMaxWidth = _ref.columnMaxWidth,\n      _ref$columnDefaultWid = _ref.columnDefaultWidth,\n      columnDefaultWidth = _ref$columnDefaultWid === void 0 ? DEFAULT_WIDTH : _ref$columnDefaultWid,\n      _ref$columnSizes = _ref.columnSizes,\n      columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n      _ref$columnFlexes = _ref.columnFlexes,\n      columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes;\n\n  if (columnMinWidth && columnMaxWidth && columnMinWidth > columnMaxWidth) {\n    var _ref2 = [columnMaxWidth, columnMinWidth];\n    columnMinWidth = _ref2[0];\n    columnMaxWidth = _ref2[1];\n  }\n\n  var computedDefaultWidth = col.defaultWidth;\n  var computedWidth = col.width;\n  var computedFlex = col.defaultFlex;\n  var computedMinWidth = col.minWidth;\n  var computedMaxWidth = col.maxWidth;\n\n  if (col.defaultWidth == null && columnDefaultWidth != null) {\n    computedDefaultWidth = columnDefaultWidth;\n  }\n\n  if (columnFlexes[col.id]) {\n    computedFlex = columnFlexes[col.id];\n  }\n\n  if (col.flex) {\n    computedFlex = col.flex;\n  }\n\n  if (!computedFlex && computedWidth === undefined && columnSizes[col.id] !== undefined) {\n    computedFlex = null;\n    computedWidth = columnSizes[col.id];\n  }\n\n  if (!computedFlex) {\n    computedFlex = null;\n  }\n\n  if (computedFlex != null && computedWidth == null && columnWidth != null) {\n    computedWidth = columnWidth;\n  }\n\n  if (computedMinWidth == null && columnMinWidth != null) {\n    computedMinWidth = columnMinWidth;\n  }\n\n  if (computedMaxWidth == null && columnMaxWidth != null) {\n    computedMaxWidth = columnMaxWidth;\n  }\n\n  if (computedDefaultWidth != null && computedMinWidth != null && computedDefaultWidth < computedMinWidth) {\n    computedDefaultWidth = computedMinWidth;\n  }\n\n  if (computedDefaultWidth != null && computedMaxWidth != null && computedDefaultWidth > computedMaxWidth) {\n    computedDefaultWidth = computedMaxWidth;\n  }\n\n  if (computedWidth != null && computedMinWidth != null && computedWidth < computedMinWidth) {\n    computedWidth = computedMinWidth;\n  }\n\n  if (computedWidth != null && computedMaxWidth != null && computedWidth > computedMaxWidth) {\n    computedWidth = computedMaxWidth;\n  }\n\n  if (computedFlex == null) {\n    computedWidth = computedWidth || computedDefaultWidth || computedMinWidth;\n  }\n\n  col.computedMinWidth = computedMinWidth;\n  col.computedMaxWidth = computedMaxWidth;\n  col.computedWidth = computedWidth;\n  col.computedFlex = computedFlex;\n  return col;\n};\n\nvar _default = computeColumnWidths;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/normalizeColumns/setComputedColumnWidths.js"],"names":["Object","defineProperty","exports","value","default","emptyObject","freeze","DEFAULT_WIDTH","computeColumnWidths","col","_ref","columnMinWidth","columnWidth","columnMaxWidth","_ref$columnDefaultWid","columnDefaultWidth","_ref$columnSizes","columnSizes","_ref$columnFlexes","columnFlexes","_ref2","computedDefaultWidth","defaultWidth","computedWidth","width","computedFlex","defaultFlex","computedMinWidth","minWidth","computedMaxWidth","maxWidth","id","flex","undefined","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar emptyObject = Object.freeze ? Object.freeze({}) : {};\nvar DEFAULT_WIDTH = 150;\n\nvar computeColumnWidths = function computeColumnWidths(col, _ref) {\n  var columnMinWidth = _ref.columnMinWidth,\n      columnWidth = _ref.columnWidth,\n      columnMaxWidth = _ref.columnMaxWidth,\n      _ref$columnDefaultWid = _ref.columnDefaultWidth,\n      columnDefaultWidth = _ref$columnDefaultWid === void 0 ? DEFAULT_WIDTH : _ref$columnDefaultWid,\n      _ref$columnSizes = _ref.columnSizes,\n      columnSizes = _ref$columnSizes === void 0 ? emptyObject : _ref$columnSizes,\n      _ref$columnFlexes = _ref.columnFlexes,\n      columnFlexes = _ref$columnFlexes === void 0 ? emptyObject : _ref$columnFlexes;\n\n  if (columnMinWidth && columnMaxWidth && columnMinWidth > columnMaxWidth) {\n    var _ref2 = [columnMaxWidth, columnMinWidth];\n    columnMinWidth = _ref2[0];\n    columnMaxWidth = _ref2[1];\n  }\n\n  var computedDefaultWidth = col.defaultWidth;\n  var computedWidth = col.width;\n  var computedFlex = col.defaultFlex;\n  var computedMinWidth = col.minWidth;\n  var computedMaxWidth = col.maxWidth;\n\n  if (col.defaultWidth == null && columnDefaultWidth != null) {\n    computedDefaultWidth = columnDefaultWidth;\n  }\n\n  if (columnFlexes[col.id]) {\n    computedFlex = columnFlexes[col.id];\n  }\n\n  if (col.flex) {\n    computedFlex = col.flex;\n  }\n\n  if (!computedFlex && computedWidth === undefined && columnSizes[col.id] !== undefined) {\n    computedFlex = null;\n    computedWidth = columnSizes[col.id];\n  }\n\n  if (!computedFlex) {\n    computedFlex = null;\n  }\n\n  if (computedFlex != null && computedWidth == null && columnWidth != null) {\n    computedWidth = columnWidth;\n  }\n\n  if (computedMinWidth == null && columnMinWidth != null) {\n    computedMinWidth = columnMinWidth;\n  }\n\n  if (computedMaxWidth == null && columnMaxWidth != null) {\n    computedMaxWidth = columnMaxWidth;\n  }\n\n  if (computedDefaultWidth != null && computedMinWidth != null && computedDefaultWidth < computedMinWidth) {\n    computedDefaultWidth = computedMinWidth;\n  }\n\n  if (computedDefaultWidth != null && computedMaxWidth != null && computedDefaultWidth > computedMaxWidth) {\n    computedDefaultWidth = computedMaxWidth;\n  }\n\n  if (computedWidth != null && computedMinWidth != null && computedWidth < computedMinWidth) {\n    computedWidth = computedMinWidth;\n  }\n\n  if (computedWidth != null && computedMaxWidth != null && computedWidth > computedMaxWidth) {\n    computedWidth = computedMaxWidth;\n  }\n\n  if (computedFlex == null) {\n    computedWidth = computedWidth || computedDefaultWidth || computedMinWidth;\n  }\n\n  col.computedMinWidth = computedMinWidth;\n  col.computedMaxWidth = computedMaxWidth;\n  col.computedWidth = computedWidth;\n  col.computedFlex = computedFlex;\n  return col;\n};\n\nvar _default = computeColumnWidths;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}