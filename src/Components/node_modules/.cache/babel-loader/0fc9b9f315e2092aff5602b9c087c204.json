{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = require(\"react\");\n\nvar _isControlledProperty = _interopRequireDefault(require(\"../../utils/isControlledProperty\"));\n\nvar _useProperty3 = _interopRequireDefault(require(\"../../hooks/useProperty\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar getNextSortInfoForColumn = function getNextSortInfoForColumn(currentDir, column, _ref) {\n  var allowUnsort = _ref.allowUnsort,\n      multiSort = _ref.multiSort,\n      forceDir = _ref.forceDir,\n      sortFunctions = _ref.sortFunctions;\n  var newSortInfo = {\n    dir: 1,\n    id: column.id,\n    name: column.sortName || column.name || '',\n    type: column.type\n  };\n  var sortName = newSortInfo.name;\n\n  if (!sortName && !column.sort) {\n    return null;\n  }\n\n  var sortFn = column.sort;\n\n  if (!sortFn && sortFunctions && sortFunctions[column.type]) {\n    sortFn = sortFunctions[column.type];\n  }\n\n  if (sortFn) {\n    newSortInfo.fn = function (one, two) {\n      return sortFn(one, two, column);\n    };\n  }\n\n  if (forceDir !== undefined) {\n    newSortInfo.dir = forceDir;\n    return newSortInfo;\n  }\n\n  if (!currentDir) {\n    newSortInfo.dir = 1;\n  } else if (currentDir === 1) {\n    newSortInfo.dir = -1;\n  } else if (currentDir === -1) {\n    if (allowUnsort || multiSort) {\n      return null;\n    }\n\n    newSortInfo.dir = 1;\n  }\n\n  return newSortInfo;\n};\n\nvar getNextSingleSortInfo = function getNextSingleSortInfo(column, currentSortInfo, _ref2) {\n  var _ref2$allowUnsort = _ref2.allowUnsort,\n      allowUnsort = _ref2$allowUnsort === void 0 ? false : _ref2$allowUnsort,\n      multiSort = _ref2.multiSort,\n      forceDir = _ref2.forceDir,\n      sortFunctions = _ref2.sortFunctions;\n\n  if (Array.isArray(currentSortInfo)) {\n    return null;\n  }\n\n  return getNextSortInfoForColumn(currentSortInfo && (currentSortInfo.name === column.id || currentSortInfo.id === column.id || currentSortInfo.name === column.sortName) ? currentSortInfo.dir : 0, column, {\n    allowUnsort: allowUnsort,\n    multiSort: multiSort,\n    forceDir: forceDir,\n    sortFunctions: sortFunctions\n  });\n};\n\nvar getNextMultipleSortInfo = function getNextMultipleSortInfo(column, currentSortInfo, _ref3) {\n  var _ref3$allowUnsort = _ref3.allowUnsort,\n      allowUnsort = _ref3$allowUnsort === void 0 ? false : _ref3$allowUnsort,\n      forceDir = _ref3.forceDir,\n      sortFunctions = _ref3.sortFunctions;\n  var result;\n\n  if (!Array.isArray(currentSortInfo)) {\n    var info = getNextSingleSortInfo(column, currentSortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n    result = [info].filter(function (x) {\n      return x;\n    });\n  } else {\n    var sortInfoIndex = currentSortInfo.findIndex(function (value) {\n      return value.id ? value.id === column.id : value.name === column.name || value.name === column.sortName;\n    });\n    var currentSortInfoForColumn = currentSortInfo[sortInfoIndex];\n    var nextSortInfoForColumn = getNextSingleSortInfo(column, currentSortInfo[sortInfoIndex], {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n\n    if (nextSortInfoForColumn && forceDir !== undefined) {\n      nextSortInfoForColumn.dir = forceDir;\n    }\n\n    result = (currentSortInfoForColumn ? [].concat((0, _toConsumableArray2.default)(currentSortInfo.slice(0, sortInfoIndex)), [nextSortInfoForColumn], (0, _toConsumableArray2.default)(currentSortInfo.slice(sortInfoIndex + 1))) : [].concat((0, _toConsumableArray2.default)(currentSortInfo), [nextSortInfoForColumn])).filter(function (x) {\n      return x;\n    });\n  }\n\n  return result;\n};\n\nvar useSortInfo = function useSortInfo(props, _, computedPropsRef) {\n  var controlled = (0, _isControlledProperty.default)(props, 'sortInfo');\n\n  var _useProperty = (0, _useProperty3.default)(props, 'sortInfo'),\n      _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n      sortInfo = _useProperty2[0],\n      silentSetSortInfo = _useProperty2[1];\n\n  if (controlled) {}\n\n  var setSortInfo = (0, _react.useCallback)(function (sortInfo) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var queue = (0, _batchUpdate.default)();\n    var computedRemoteData = computedProps.computedRemoteData;\n    queue.commit(function () {\n      if (computedProps.computedPagination && computedProps.setSkip && computedProps.computedSkip) {\n        computedProps.setSkip(0);\n      }\n\n      silentSetSortInfo(sortInfo);\n\n      if (computedRemoteData) {\n        computedProps.setLoadDataTrigger(function (loadDataTrigger) {\n          return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['sortInfo']);\n        });\n      }\n    });\n  }, []);\n  var toggleColumnSort = (0, _react.useCallback)(function (colId) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(colId);\n\n    if (!computedColumn) {\n      return;\n    }\n\n    var sortInfo = computedProps.computedSortInfo;\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, []);\n  var setColumnSortInfo = (0, _react.useCallback)(function (column, dir) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(column);\n\n    if (!computedColumn) {\n      return;\n    }\n\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, []);\n\n  var unsortColumn = function unsortColumn(column) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var computedColumn = computedProps.getColumnBy(column);\n\n    if (!computedColumn) {\n      return;\n    }\n\n    var columnSortInfo = computedColumn.computedSortInfo;\n\n    if (!columnSortInfo) {\n      return;\n    }\n\n    var sortInfo = computedProps.computedSortInfo;\n    var newSortInfo = null;\n\n    if (Array.isArray(sortInfo)) {\n      newSortInfo = sortInfo.filter(function (sortInfo) {\n        if (sortInfo && (sortInfo.id === columnSortInfo.id || sortInfo.name === columnSortInfo.name)) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n\n    setSortInfo(newSortInfo);\n  };\n\n  return {\n    computedSortInfo: sortInfo,\n    unsortColumn: unsortColumn,\n    setSortInfo: setSortInfo,\n    computedIsMultiSort: Array.isArray(sortInfo),\n    toggleColumnSort: toggleColumnSort,\n    setColumnSortInfo: setColumnSortInfo\n  };\n};\n\nvar _default = useSortInfo;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/plugins/sortable-columns/useSortInfo.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_toConsumableArray2","_react","_isControlledProperty","_useProperty3","_batchUpdate","getNextSortInfoForColumn","currentDir","column","_ref","allowUnsort","multiSort","forceDir","sortFunctions","newSortInfo","dir","id","name","sortName","type","sort","sortFn","fn","one","two","undefined","getNextSingleSortInfo","currentSortInfo","_ref2","_ref2$allowUnsort","Array","isArray","getNextMultipleSortInfo","_ref3","_ref3$allowUnsort","result","info","filter","x","sortInfoIndex","findIndex","currentSortInfoForColumn","nextSortInfoForColumn","concat","slice","useSortInfo","props","_","computedPropsRef","controlled","_useProperty","_useProperty2","sortInfo","silentSetSortInfo","setSortInfo","useCallback","computedProps","current","queue","computedRemoteData","commit","computedPagination","setSkip","computedSkip","setLoadDataTrigger","loadDataTrigger","toggleColumnSort","colId","computedColumn","getColumnBy","computedSortInfo","computedIsMultiSort","nextSortInfo","setColumnSortInfo","unsortColumn","columnSortInfo","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = require(\"react\");\n\nvar _isControlledProperty = _interopRequireDefault(require(\"../../utils/isControlledProperty\"));\n\nvar _useProperty3 = _interopRequireDefault(require(\"../../hooks/useProperty\"));\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar getNextSortInfoForColumn = function getNextSortInfoForColumn(currentDir, column, _ref) {\n  var allowUnsort = _ref.allowUnsort,\n      multiSort = _ref.multiSort,\n      forceDir = _ref.forceDir,\n      sortFunctions = _ref.sortFunctions;\n  var newSortInfo = {\n    dir: 1,\n    id: column.id,\n    name: column.sortName || column.name || '',\n    type: column.type\n  };\n  var sortName = newSortInfo.name;\n\n  if (!sortName && !column.sort) {\n    return null;\n  }\n\n  var sortFn = column.sort;\n\n  if (!sortFn && sortFunctions && sortFunctions[column.type]) {\n    sortFn = sortFunctions[column.type];\n  }\n\n  if (sortFn) {\n    newSortInfo.fn = function (one, two) {\n      return sortFn(one, two, column);\n    };\n  }\n\n  if (forceDir !== undefined) {\n    newSortInfo.dir = forceDir;\n    return newSortInfo;\n  }\n\n  if (!currentDir) {\n    newSortInfo.dir = 1;\n  } else if (currentDir === 1) {\n    newSortInfo.dir = -1;\n  } else if (currentDir === -1) {\n    if (allowUnsort || multiSort) {\n      return null;\n    }\n\n    newSortInfo.dir = 1;\n  }\n\n  return newSortInfo;\n};\n\nvar getNextSingleSortInfo = function getNextSingleSortInfo(column, currentSortInfo, _ref2) {\n  var _ref2$allowUnsort = _ref2.allowUnsort,\n      allowUnsort = _ref2$allowUnsort === void 0 ? false : _ref2$allowUnsort,\n      multiSort = _ref2.multiSort,\n      forceDir = _ref2.forceDir,\n      sortFunctions = _ref2.sortFunctions;\n\n  if (Array.isArray(currentSortInfo)) {\n    return null;\n  }\n\n  return getNextSortInfoForColumn(currentSortInfo && (currentSortInfo.name === column.id || currentSortInfo.id === column.id || currentSortInfo.name === column.sortName) ? currentSortInfo.dir : 0, column, {\n    allowUnsort: allowUnsort,\n    multiSort: multiSort,\n    forceDir: forceDir,\n    sortFunctions: sortFunctions\n  });\n};\n\nvar getNextMultipleSortInfo = function getNextMultipleSortInfo(column, currentSortInfo, _ref3) {\n  var _ref3$allowUnsort = _ref3.allowUnsort,\n      allowUnsort = _ref3$allowUnsort === void 0 ? false : _ref3$allowUnsort,\n      forceDir = _ref3.forceDir,\n      sortFunctions = _ref3.sortFunctions;\n  var result;\n\n  if (!Array.isArray(currentSortInfo)) {\n    var info = getNextSingleSortInfo(column, currentSortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n    result = [info].filter(function (x) {\n      return x;\n    });\n  } else {\n    var sortInfoIndex = currentSortInfo.findIndex(function (value) {\n      return value.id ? value.id === column.id : value.name === column.name || value.name === column.sortName;\n    });\n    var currentSortInfoForColumn = currentSortInfo[sortInfoIndex];\n    var nextSortInfoForColumn = getNextSingleSortInfo(column, currentSortInfo[sortInfoIndex], {\n      allowUnsort: allowUnsort,\n      multiSort: true,\n      forceDir: forceDir,\n      sortFunctions: sortFunctions\n    });\n\n    if (nextSortInfoForColumn && forceDir !== undefined) {\n      nextSortInfoForColumn.dir = forceDir;\n    }\n\n    result = (currentSortInfoForColumn ? [].concat((0, _toConsumableArray2.default)(currentSortInfo.slice(0, sortInfoIndex)), [nextSortInfoForColumn], (0, _toConsumableArray2.default)(currentSortInfo.slice(sortInfoIndex + 1))) : [].concat((0, _toConsumableArray2.default)(currentSortInfo), [nextSortInfoForColumn])).filter(function (x) {\n      return x;\n    });\n  }\n\n  return result;\n};\n\nvar useSortInfo = function useSortInfo(props, _, computedPropsRef) {\n  var controlled = (0, _isControlledProperty.default)(props, 'sortInfo');\n\n  var _useProperty = (0, _useProperty3.default)(props, 'sortInfo'),\n      _useProperty2 = (0, _slicedToArray2.default)(_useProperty, 2),\n      sortInfo = _useProperty2[0],\n      silentSetSortInfo = _useProperty2[1];\n\n  if (controlled) {}\n\n  var setSortInfo = (0, _react.useCallback)(function (sortInfo) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var queue = (0, _batchUpdate.default)();\n    var computedRemoteData = computedProps.computedRemoteData;\n    queue.commit(function () {\n      if (computedProps.computedPagination && computedProps.setSkip && computedProps.computedSkip) {\n        computedProps.setSkip(0);\n      }\n\n      silentSetSortInfo(sortInfo);\n\n      if (computedRemoteData) {\n        computedProps.setLoadDataTrigger(function (loadDataTrigger) {\n          return [].concat((0, _toConsumableArray2.default)(loadDataTrigger), ['sortInfo']);\n        });\n      }\n    });\n  }, []);\n  var toggleColumnSort = (0, _react.useCallback)(function (colId) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(colId);\n\n    if (!computedColumn) {\n      return;\n    }\n\n    var sortInfo = computedProps.computedSortInfo;\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, []);\n  var setColumnSortInfo = (0, _react.useCallback)(function (column, dir) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var allowUnsort = computedProps.allowUnsort;\n    var computedColumn = computedProps.getColumnBy(column);\n\n    if (!computedColumn) {\n      return;\n    }\n\n    var computedIsMultiSort = computedProps.computedIsMultiSort;\n    var nextSortInfo = computedIsMultiSort ? getNextMultipleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    }) : getNextSingleSortInfo(computedColumn, sortInfo, {\n      allowUnsort: allowUnsort,\n      multiSort: false,\n      forceDir: dir,\n      sortFunctions: computedProps.sortFunctions\n    });\n    setSortInfo(nextSortInfo);\n  }, []);\n\n  var unsortColumn = function unsortColumn(column) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var computedColumn = computedProps.getColumnBy(column);\n\n    if (!computedColumn) {\n      return;\n    }\n\n    var columnSortInfo = computedColumn.computedSortInfo;\n\n    if (!columnSortInfo) {\n      return;\n    }\n\n    var sortInfo = computedProps.computedSortInfo;\n    var newSortInfo = null;\n\n    if (Array.isArray(sortInfo)) {\n      newSortInfo = sortInfo.filter(function (sortInfo) {\n        if (sortInfo && (sortInfo.id === columnSortInfo.id || sortInfo.name === columnSortInfo.name)) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n\n    setSortInfo(newSortInfo);\n  };\n\n  return {\n    computedSortInfo: sortInfo,\n    unsortColumn: unsortColumn,\n    setSortInfo: setSortInfo,\n    computedIsMultiSort: Array.isArray(sortInfo),\n    toggleColumnSort: toggleColumnSort,\n    setColumnSortInfo: setColumnSortInfo\n  };\n};\n\nvar _default = useSortInfo;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}