{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar emptyObject = {};\n\nvar _default = function _default(columns) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n      showWarnings = _ref.showWarnings;\n\n  return columns.reduce(function (acc, col) {\n    if (col.id) {\n      if (showWarnings && acc[col.id]) {\n        console.error(\"Duplicate column with id \\\"\".concat(col.id, \"\\\" found!\"));\n      }\n\n      acc[col.id] = col;\n    }\n\n    if (col.name && col.name != col.id) {\n      if (showWarnings && !col.id && acc[col.name]) {\n        console.error(\"Duplicate column with name \\\"\".concat(col.name, \"\\\" found!\"));\n      }\n\n      if (!col.id) {\n        acc[col.name] = col;\n      }\n    }\n\n    if (typeof col.groupBy == 'string' || col.groupByName) {\n      var key = col.groupBy || col.groupByName;\n      acc[key] = col;\n    }\n\n    return acc;\n  }, {});\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/mapColumns.js"],"names":["Object","defineProperty","exports","value","default","emptyObject","_default","columns","_ref","arguments","length","undefined","showWarnings","reduce","acc","col","id","console","error","concat","name","groupBy","groupByName","key"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,IAAIC,WAAW,GAAG,EAAlB;;AAEA,IAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AACxC,MAAIC,IAAI,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEJ,WAA/E;AAAA,MACIO,YAAY,GAAGJ,IAAI,CAACI,YADxB;;AAGA,SAAOL,OAAO,CAACM,MAAR,CAAe,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACxC,QAAIA,GAAG,CAACC,EAAR,EAAY;AACV,UAAIJ,YAAY,IAAIE,GAAG,CAACC,GAAG,CAACC,EAAL,CAAvB,EAAiC;AAC/BC,QAAAA,OAAO,CAACC,KAAR,CAAc,8BAA8BC,MAA9B,CAAqCJ,GAAG,CAACC,EAAzC,EAA6C,WAA7C,CAAd;AACD;;AAEDF,MAAAA,GAAG,CAACC,GAAG,CAACC,EAAL,CAAH,GAAcD,GAAd;AACD;;AAED,QAAIA,GAAG,CAACK,IAAJ,IAAYL,GAAG,CAACK,IAAJ,IAAYL,GAAG,CAACC,EAAhC,EAAoC;AAClC,UAAIJ,YAAY,IAAI,CAACG,GAAG,CAACC,EAArB,IAA2BF,GAAG,CAACC,GAAG,CAACK,IAAL,CAAlC,EAA8C;AAC5CH,QAAAA,OAAO,CAACC,KAAR,CAAc,gCAAgCC,MAAhC,CAAuCJ,GAAG,CAACK,IAA3C,EAAiD,WAAjD,CAAd;AACD;;AAED,UAAI,CAACL,GAAG,CAACC,EAAT,EAAa;AACXF,QAAAA,GAAG,CAACC,GAAG,CAACK,IAAL,CAAH,GAAgBL,GAAhB;AACD;AACF;;AAED,QAAI,OAAOA,GAAG,CAACM,OAAX,IAAsB,QAAtB,IAAkCN,GAAG,CAACO,WAA1C,EAAuD;AACrD,UAAIC,GAAG,GAAGR,GAAG,CAACM,OAAJ,IAAeN,GAAG,CAACO,WAA7B;AACAR,MAAAA,GAAG,CAACS,GAAD,CAAH,GAAWR,GAAX;AACD;;AAED,WAAOD,GAAP;AACD,GAzBM,EAyBJ,EAzBI,CAAP;AA0BD,CA9BD;;AAgCAZ,OAAO,CAACE,OAAR,GAAkBE,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar emptyObject = {};\n\nvar _default = function _default(columns) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n      showWarnings = _ref.showWarnings;\n\n  return columns.reduce(function (acc, col) {\n    if (col.id) {\n      if (showWarnings && acc[col.id]) {\n        console.error(\"Duplicate column with id \\\"\".concat(col.id, \"\\\" found!\"));\n      }\n\n      acc[col.id] = col;\n    }\n\n    if (col.name && col.name != col.id) {\n      if (showWarnings && !col.id && acc[col.name]) {\n        console.error(\"Duplicate column with name \\\"\".concat(col.name, \"\\\" found!\"));\n      }\n\n      if (!col.id) {\n        acc[col.name] = col;\n      }\n    }\n\n    if (typeof col.groupBy == 'string' || col.groupByName) {\n      var key = col.groupBy || col.groupByName;\n      acc[key] = col;\n    }\n\n    return acc;\n  }, {});\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}