{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _range = _interopRequireDefault(require(\"../../../../common/range\"));\n\nfunction prepareAlignOffset(alignOffset, positionsLength) {\n  var offset;\n\n  if (Array.isArray(alignOffset)) {\n    offset = alignOffset.map(function (alignOffsetItem) {\n      if (typeof alignOffsetItem === 'number') {\n        return {\n          x: alignOffsetItem,\n          y: alignOffsetItem\n        };\n      } else {\n        return alignOffsetItem;\n      }\n    });\n  }\n\n  if (typeof alignOffset === 'number') {\n    offset = {\n      x: alignOffset,\n      y: alignOffset\n    };\n  }\n\n  if ((0, _typeof2.default)(alignOffset) === 'object') {\n    offset = alignOffset;\n  }\n\n  if (!Array.isArray(offset) && positionsLength) {\n    offset = (0, _range.default)(0, positionsLength).map(function () {\n      return offset;\n    });\n  }\n\n  return offset;\n}\n\nvar _default = prepareAlignOffset;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/Menu/src/utils/prepareAlignOffset.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_typeof2","_range","prepareAlignOffset","alignOffset","positionsLength","offset","Array","isArray","map","alignOffsetItem","x","y","_default"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,QAAQ,GAAGP,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAArC;;AAEA,IAAIO,MAAM,GAAGR,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAAnC;;AAEA,SAASQ,kBAAT,CAA4BC,WAA5B,EAAyCC,eAAzC,EAA0D;AACxD,MAAIC,MAAJ;;AAEA,MAAIC,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAAJ,EAAgC;AAC9BE,IAAAA,MAAM,GAAGF,WAAW,CAACK,GAAZ,CAAgB,UAAUC,eAAV,EAA2B;AAClD,UAAI,OAAOA,eAAP,KAA2B,QAA/B,EAAyC;AACvC,eAAO;AACLC,UAAAA,CAAC,EAAED,eADE;AAELE,UAAAA,CAAC,EAAEF;AAFE,SAAP;AAID,OALD,MAKO;AACL,eAAOA,eAAP;AACD;AACF,KATQ,CAAT;AAUD;;AAED,MAAI,OAAON,WAAP,KAAuB,QAA3B,EAAqC;AACnCE,IAAAA,MAAM,GAAG;AACPK,MAAAA,CAAC,EAAEP,WADI;AAEPQ,MAAAA,CAAC,EAAER;AAFI,KAAT;AAID;;AAED,MAAI,CAAC,GAAGH,QAAQ,CAACD,OAAb,EAAsBI,WAAtB,MAAuC,QAA3C,EAAqD;AACnDE,IAAAA,MAAM,GAAGF,WAAT;AACD;;AAED,MAAI,CAACG,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAD,IAA0BD,eAA9B,EAA+C;AAC7CC,IAAAA,MAAM,GAAG,CAAC,GAAGJ,MAAM,CAACF,OAAX,EAAoB,CAApB,EAAuBK,eAAvB,EAAwCI,GAAxC,CAA4C,YAAY;AAC/D,aAAOH,MAAP;AACD,KAFQ,CAAT;AAGD;;AAED,SAAOA,MAAP;AACD;;AAED,IAAIO,QAAQ,GAAGV,kBAAf;AACAL,OAAO,CAACE,OAAR,GAAkBa,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _range = _interopRequireDefault(require(\"../../../../common/range\"));\n\nfunction prepareAlignOffset(alignOffset, positionsLength) {\n  var offset;\n\n  if (Array.isArray(alignOffset)) {\n    offset = alignOffset.map(function (alignOffsetItem) {\n      if (typeof alignOffsetItem === 'number') {\n        return {\n          x: alignOffsetItem,\n          y: alignOffsetItem\n        };\n      } else {\n        return alignOffsetItem;\n      }\n    });\n  }\n\n  if (typeof alignOffset === 'number') {\n    offset = {\n      x: alignOffset,\n      y: alignOffset\n    };\n  }\n\n  if ((0, _typeof2.default)(alignOffset) === 'object') {\n    offset = alignOffset;\n  }\n\n  if (!Array.isArray(offset) && positionsLength) {\n    offset = (0, _range.default)(0, positionsLength).map(function () {\n      return offset;\n    });\n  }\n\n  return offset;\n}\n\nvar _default = prepareAlignOffset;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}