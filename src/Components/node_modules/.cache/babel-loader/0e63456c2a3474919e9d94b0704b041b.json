{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _binarySearch = _interopRequireDefault(require(\"../../../packages/binary-search\"));\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar RowHeightManager = function (_EventEmitter) {\n  (0, _inherits2.default)(RowHeightManager, _EventEmitter);\n\n  var _super = _createSuper(RowHeightManager);\n\n  function RowHeightManager(rowHeight) {\n    var _this;\n\n    var rowHeightsMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2.default)(this, RowHeightManager);\n    _this = _super.call(this);\n    _this.rowHeight = rowHeight;\n    _this.map = rowHeightsMap;\n\n    if (!config || config.cache !== false) {\n      _this.setCache({});\n    }\n\n    _this.index(rowHeight, rowHeightsMap);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(RowHeightManager, [{\n    key: \"setRowHeight\",\n    value: function setRowHeight(_ref) {\n      var index = _ref.index,\n          height = _ref.height,\n          defaultRowHeight = _ref.defaultRowHeight;\n\n      if (this.map[index] === height && !defaultRowHeight) {\n        console.warn('NOOP');\n        return;\n      }\n\n      this.map[index] = height;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setRowHeightLazy\",\n    value: function setRowHeightLazy(_ref2) {\n      var _this2 = this;\n\n      var index = _ref2.index,\n          height = _ref2.height,\n          defaultRowHeight = _ref2.defaultRowHeight;\n      this.map[index] = height;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      if (this.lazyRowHeightRafId) {\n        cancelAnimationFrame(this.lazyRowHeightRafId);\n      }\n\n      this.lazyRowHeightRafId = requestAnimationFrame(function () {\n        delete _this2.lazyRowHeightRafId;\n\n        _this2.index(_this2.rowHeight, _this2.map);\n      });\n    }\n  }, {\n    key: \"setHeights\",\n    value: function setHeights(map) {\n      this.map = map;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(_ref3) {\n      var defaultRowHeight = _ref3.defaultRowHeight,\n          map = _ref3.map;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.map) {\n        this.map = map;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setDefaultRowHeight\",\n    value: function setDefaultRowHeight(defaultRowHeight) {\n      this.rowHeight = defaultRowHeight;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"index\",\n    value: function index(defaultRowHeight, map) {\n      var _this3 = this;\n\n      this.rowToOffsetCache = {};\n      var indexes = map ? Object.keys(map).map(function (x) {\n        return +x;\n      }).sort(sortAsc) : [];\n      this.minHeight = defaultRowHeight;\n      this.maxHeight = defaultRowHeight;\n      this.heights = indexes.map(function (index) {\n        var height = map[index];\n\n        if (height > _this3.maxHeight) {\n          _this3.maxHeight = height;\n        }\n\n        if (height < _this3.minHeight) {\n          _this3.minHeight = height;\n        }\n\n        return height;\n      });\n      var prev = 0;\n      this.indexes = indexes;\n      this.offsets = indexes.map(function (index, i) {\n        var prevIndex = i === 0 ? -1 : indexes[i - 1];\n        var prevIndexRowHeight = map[prevIndex] || 0;\n        return prev = prev + (index - (prevIndex + 1)) * defaultRowHeight + prevIndexRowHeight;\n      });\n      this.offsetsToIndexes = {};\n      this.indexesToOffsets = this.offsets.reduce(function (acc, offset, i) {\n        var index = indexes[i];\n        acc[index] = offset;\n        _this3.offsetsToIndexes[offset] = index;\n        return acc;\n      }, {});\n      this.afterIndex();\n    }\n  }, {\n    key: \"afterIndex\",\n    value: function afterIndex() {\n      this.emit('index');\n    }\n  }, {\n    key: \"setCache\",\n    value: function setCache(cache) {\n      this.cache = cache;\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize(count) {\n      if (count == null) {\n        throw new Error('Specify a count when calling getTotalSize!');\n      }\n\n      if (count <= 0 || isNaN(count)) {\n        return 0;\n      }\n\n      var sum = 0;\n\n      for (var i = 0; i < count; i++) {\n        var value = this.map[i];\n        sum += value === undefined ? this.rowHeight : value;\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"getDefaultRowHeight\",\n    value: function getDefaultRowHeight() {\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getMinHeight\",\n    value: function getMinHeight() {\n      return this.minHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getMaxHeight\",\n    value: function getMaxHeight() {\n      return this.maxHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getRowOffset\",\n    value: function getRowOffset(index) {\n      var offset = this.indexesToOffsets[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      offset = this.rowToOffsetCache[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      var insertPos = ~(0, _binarySearch.default)(this.indexes, index, sortAsc);\n      var closestIndex = this.indexes[insertPos - 1];\n\n      if (insertPos === 0) {\n        offset = index * this.rowHeight;\n      } else {\n        var closestOffset = this.indexesToOffsets[closestIndex];\n        offset = closestOffset + this.map[closestIndex] + (index - closestIndex - 1) * this.rowHeight;\n      }\n\n      this.rowToOffsetCache[index] = offset;\n      return offset;\n    }\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(index) {\n      var value = this.map[index];\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getRowAt\",\n    value: function getRowAt(offset) {\n      if (offset < 0) {\n        return 0;\n      }\n\n      var roundedOffset = Math.floor(offset / this.rowHeight) * this.rowHeight;\n      var result = this.cache ? this.cache[roundedOffset] : undefined;\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (!this.map) {\n        result = roundedOffset / this.rowHeight;\n\n        if (this.cache) {\n          this.cache[roundedOffset] = result;\n        }\n\n        return result;\n      }\n\n      var index = (0, _binarySearch.default)(this.offsets, offset, sortAsc);\n\n      if (index < 0) {\n        var insertPos = ~index;\n        var beforeKnownIndex = this.indexes[insertPos - 1];\n\n        if (beforeKnownIndex !== undefined) {\n          var beforeKnownOffset = this.indexesToOffsets[beforeKnownIndex];\n          var nextOffset = beforeKnownOffset + this.map[beforeKnownIndex];\n\n          if (offset < nextOffset) {\n            result = beforeKnownIndex;\n          } else {\n            result = beforeKnownIndex + Math.floor((offset - nextOffset) / this.rowHeight) + 1;\n          }\n        } else {\n          result = Math.floor(offset / this.rowHeight);\n        }\n      } else {\n        result = this.indexes[index];\n      }\n\n      if (this.cache) {\n        this.cache[roundedOffset] = result;\n      }\n\n      return result;\n    }\n  }]);\n  return RowHeightManager;\n}(_events.default);\n\nvar _default = RowHeightManager;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/packages/react-virtual-list-pro/src/RowHeightManager.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_binarySearch","_events","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Date","prototype","toString","call","e","sortAsc","a","b","RowHeightManager","_EventEmitter","_super","rowHeight","_this","rowHeightsMap","length","undefined","config","map","cache","setCache","index","key","setRowHeight","_ref","height","defaultRowHeight","console","warn","setRowHeightLazy","_ref2","_this2","lazyRowHeightRafId","cancelAnimationFrame","requestAnimationFrame","setHeights","setValues","_ref3","setDefaultRowHeight","_this3","rowToOffsetCache","indexes","keys","x","sort","minHeight","maxHeight","heights","prev","offsets","i","prevIndex","prevIndexRowHeight","offsetsToIndexes","indexesToOffsets","reduce","acc","offset","afterIndex","emit","getTotalSize","count","Error","isNaN","sum","getDefaultRowHeight","getMinHeight","getMaxHeight","getRowOffset","insertPos","closestIndex","closestOffset","getRowHeight","getRowAt","roundedOffset","Math","floor","beforeKnownIndex","beforeKnownOffset","nextOffset","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _binarySearch = _interopRequireDefault(require(\"../../../packages/binary-search\"));\n\nvar _events = _interopRequireDefault(require(\"events\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar sortAsc = function sortAsc(a, b) {\n  return a - b;\n};\n\nvar RowHeightManager = function (_EventEmitter) {\n  (0, _inherits2.default)(RowHeightManager, _EventEmitter);\n\n  var _super = _createSuper(RowHeightManager);\n\n  function RowHeightManager(rowHeight) {\n    var _this;\n\n    var rowHeightsMap = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 ? arguments[2] : undefined;\n    (0, _classCallCheck2.default)(this, RowHeightManager);\n    _this = _super.call(this);\n    _this.rowHeight = rowHeight;\n    _this.map = rowHeightsMap;\n\n    if (!config || config.cache !== false) {\n      _this.setCache({});\n    }\n\n    _this.index(rowHeight, rowHeightsMap);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(RowHeightManager, [{\n    key: \"setRowHeight\",\n    value: function setRowHeight(_ref) {\n      var index = _ref.index,\n          height = _ref.height,\n          defaultRowHeight = _ref.defaultRowHeight;\n\n      if (this.map[index] === height && !defaultRowHeight) {\n        console.warn('NOOP');\n        return;\n      }\n\n      this.map[index] = height;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setRowHeightLazy\",\n    value: function setRowHeightLazy(_ref2) {\n      var _this2 = this;\n\n      var index = _ref2.index,\n          height = _ref2.height,\n          defaultRowHeight = _ref2.defaultRowHeight;\n      this.map[index] = height;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      if (this.lazyRowHeightRafId) {\n        cancelAnimationFrame(this.lazyRowHeightRafId);\n      }\n\n      this.lazyRowHeightRafId = requestAnimationFrame(function () {\n        delete _this2.lazyRowHeightRafId;\n\n        _this2.index(_this2.rowHeight, _this2.map);\n      });\n    }\n  }, {\n    key: \"setHeights\",\n    value: function setHeights(map) {\n      this.map = map;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setValues\",\n    value: function setValues(_ref3) {\n      var defaultRowHeight = _ref3.defaultRowHeight,\n          map = _ref3.map;\n\n      if (defaultRowHeight) {\n        this.rowHeight = defaultRowHeight;\n      }\n\n      if (this.map) {\n        this.map = map;\n      }\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"setDefaultRowHeight\",\n    value: function setDefaultRowHeight(defaultRowHeight) {\n      this.rowHeight = defaultRowHeight;\n\n      if (this.cache) {\n        this.setCache({});\n      }\n\n      this.index(this.rowHeight, this.map);\n    }\n  }, {\n    key: \"index\",\n    value: function index(defaultRowHeight, map) {\n      var _this3 = this;\n\n      this.rowToOffsetCache = {};\n      var indexes = map ? Object.keys(map).map(function (x) {\n        return +x;\n      }).sort(sortAsc) : [];\n      this.minHeight = defaultRowHeight;\n      this.maxHeight = defaultRowHeight;\n      this.heights = indexes.map(function (index) {\n        var height = map[index];\n\n        if (height > _this3.maxHeight) {\n          _this3.maxHeight = height;\n        }\n\n        if (height < _this3.minHeight) {\n          _this3.minHeight = height;\n        }\n\n        return height;\n      });\n      var prev = 0;\n      this.indexes = indexes;\n      this.offsets = indexes.map(function (index, i) {\n        var prevIndex = i === 0 ? -1 : indexes[i - 1];\n        var prevIndexRowHeight = map[prevIndex] || 0;\n        return prev = prev + (index - (prevIndex + 1)) * defaultRowHeight + prevIndexRowHeight;\n      });\n      this.offsetsToIndexes = {};\n      this.indexesToOffsets = this.offsets.reduce(function (acc, offset, i) {\n        var index = indexes[i];\n        acc[index] = offset;\n        _this3.offsetsToIndexes[offset] = index;\n        return acc;\n      }, {});\n      this.afterIndex();\n    }\n  }, {\n    key: \"afterIndex\",\n    value: function afterIndex() {\n      this.emit('index');\n    }\n  }, {\n    key: \"setCache\",\n    value: function setCache(cache) {\n      this.cache = cache;\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize(count) {\n      if (count == null) {\n        throw new Error('Specify a count when calling getTotalSize!');\n      }\n\n      if (count <= 0 || isNaN(count)) {\n        return 0;\n      }\n\n      var sum = 0;\n\n      for (var i = 0; i < count; i++) {\n        var value = this.map[i];\n        sum += value === undefined ? this.rowHeight : value;\n      }\n\n      return sum;\n    }\n  }, {\n    key: \"getDefaultRowHeight\",\n    value: function getDefaultRowHeight() {\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getMinHeight\",\n    value: function getMinHeight() {\n      return this.minHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getMaxHeight\",\n    value: function getMaxHeight() {\n      return this.maxHeight || this.rowHeight;\n    }\n  }, {\n    key: \"getRowOffset\",\n    value: function getRowOffset(index) {\n      var offset = this.indexesToOffsets[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      offset = this.rowToOffsetCache[index];\n\n      if (offset !== undefined) {\n        return offset;\n      }\n\n      var insertPos = ~(0, _binarySearch.default)(this.indexes, index, sortAsc);\n      var closestIndex = this.indexes[insertPos - 1];\n\n      if (insertPos === 0) {\n        offset = index * this.rowHeight;\n      } else {\n        var closestOffset = this.indexesToOffsets[closestIndex];\n        offset = closestOffset + this.map[closestIndex] + (index - closestIndex - 1) * this.rowHeight;\n      }\n\n      this.rowToOffsetCache[index] = offset;\n      return offset;\n    }\n  }, {\n    key: \"getRowHeight\",\n    value: function getRowHeight(index) {\n      var value = this.map[index];\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      return this.rowHeight;\n    }\n  }, {\n    key: \"getRowAt\",\n    value: function getRowAt(offset) {\n      if (offset < 0) {\n        return 0;\n      }\n\n      var roundedOffset = Math.floor(offset / this.rowHeight) * this.rowHeight;\n      var result = this.cache ? this.cache[roundedOffset] : undefined;\n\n      if (result !== undefined) {\n        return result;\n      }\n\n      if (!this.map) {\n        result = roundedOffset / this.rowHeight;\n\n        if (this.cache) {\n          this.cache[roundedOffset] = result;\n        }\n\n        return result;\n      }\n\n      var index = (0, _binarySearch.default)(this.offsets, offset, sortAsc);\n\n      if (index < 0) {\n        var insertPos = ~index;\n        var beforeKnownIndex = this.indexes[insertPos - 1];\n\n        if (beforeKnownIndex !== undefined) {\n          var beforeKnownOffset = this.indexesToOffsets[beforeKnownIndex];\n          var nextOffset = beforeKnownOffset + this.map[beforeKnownIndex];\n\n          if (offset < nextOffset) {\n            result = beforeKnownIndex;\n          } else {\n            result = beforeKnownIndex + Math.floor((offset - nextOffset) / this.rowHeight) + 1;\n          }\n        } else {\n          result = Math.floor(offset / this.rowHeight);\n        }\n      } else {\n        result = this.indexes[index];\n      }\n\n      if (this.cache) {\n        this.cache[roundedOffset] = result;\n      }\n\n      return result;\n    }\n  }]);\n  return RowHeightManager;\n}(_events.default);\n\nvar _default = RowHeightManager;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}