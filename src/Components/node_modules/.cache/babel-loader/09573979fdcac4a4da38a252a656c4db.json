{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar _handleSelection = require(\"./handleSelection\");\n\nvar _handleRowNavigation = _interopRequireDefault(require(\"./handleRowNavigation\"));\n\nvar _handleCellNavigation = _interopRequireDefault(require(\"./handleCellNavigation\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar _default = function _default(props, computedProps, computedPropsRef) {\n  var computedOnKeyDown = function computedOnKeyDown(event) {\n    if (props.onKeyDown) {\n      props.onKeyDown(event);\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (event.nativeEvent && event.nativeEvent.__handled_in_details) {\n      return;\n    }\n\n    var sameElement = event.target === computedProps.getScrollingElement();\n    var handled = false;\n\n    if (event.key === 'Escape' && !sameElement) {\n      handled = true;\n      computedProps.focus();\n    }\n\n    if (!sameElement) {\n      return;\n    }\n\n    if (computedProps.computedHasRowNavigation) {\n      handled = (0, _handleRowNavigation.default)(event, computedProps);\n    } else if (computedProps.computedCellNavigationEnabled) {\n      handled = (0, _handleCellNavigation.default)(event, computedProps);\n    }\n\n    var activeItem = computedProps.computedActiveItem;\n    var activeIndex = computedProps.computedActiveIndex;\n    var isGroup = computedProps.isGroup(activeItem);\n    var rowExpandEnabled = computedProps.computedRowExpandEnabled;\n    var rowExpandable = activeItem && computedProps.isRowExpandableAt ? computedProps.isRowExpandableAt(activeIndex) : false;\n    var rowExpanded = rowExpandable && activeItem ? computedProps.isRowExpanded(activeItem) : false;\n    var treeEnabled = computedProps.computedTreeEnabled;\n    var nodeExpandable = treeEnabled && activeItem && computedProps.isNodeExpandableAt ? computedProps.isNodeExpandableAt(activeIndex) : false;\n    var nodeExpanded = treeEnabled && activeItem && computedProps.isNodeExpanded ? computedProps.isNodeExpanded(activeItem) : false;\n    var rowSelectionEnabled = computedProps.computedRowSelectionEnabled;\n    var keyShortcutArg = {\n      event: event,\n      data: activeItem,\n      index: activeIndex,\n      activeItem: activeItem,\n      activeIndex: activeIndex,\n      handle: computedPropsRef,\n      isGroup: isGroup,\n      treeEnabled: treeEnabled,\n      rowSelectionEnabled: rowSelectionEnabled,\n      nodeExpandable: nodeExpandable,\n      nodeExpanded: nodeExpanded,\n      rowExpandEnabled: rowExpandEnabled,\n      rowExpandable: rowExpandable,\n      rowExpanded: rowExpanded\n    };\n    var editKeyPressed = !!computedProps.isStartEditKeyPressed(keyShortcutArg);\n    var expandKeyPressed = !!computedProps.isExpandKeyPressed(keyShortcutArg);\n    var collapseKeyPressed = !expandKeyPressed ? computedProps.isCollapseKeyPressed(keyShortcutArg) : false;\n\n    if (expandKeyPressed) {\n      handled = true;\n    }\n\n    if (expandKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && !rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, true);\n      } else {\n        if (isGroup) {\n          computedProps.expandGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && !nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, true);\n        }\n      }\n    }\n\n    if (collapseKeyPressed) {\n      handled = true;\n    }\n\n    if (collapseKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, false);\n      } else {\n        if (isGroup) {\n          computedProps.collapseGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, false);\n        }\n      }\n    }\n\n    if (editKeyPressed) {\n      handled = true;\n\n      if (computedProps.visibleColumns && computedProps.visibleColumns.length) {\n        computedProps.tryStartEdit({\n          rowIndex: activeItem ? activeIndex : 0,\n          columnId: computedProps.visibleColumns[0].id,\n          dir: 1\n        });\n      }\n    }\n\n    if (activeItem && event.key === 'Enter') {\n      if (rowExpandEnabled && rowExpandable) {\n        if (!rowSelectionEnabled) {\n          computedProps.toggleRowExpand(activeIndex);\n          handled = true;\n        }\n      } else {\n        if (isGroup) {\n          computedProps.toggleGroup(activeItem);\n          handled = true;\n        } else if (nodeExpandable && !rowSelectionEnabled && computedProps.computedTreeEnabled) {\n          computedProps.toggleNodeExpand(activeItem);\n          handled = true;\n        }\n      }\n    }\n\n    if (handled) {\n      event.preventDefault();\n\n      if (event.nativeEvent) {\n        event.nativeEvent.__handled_in_details = true;\n      }\n    }\n  };\n\n  var onFullBlur = (0, _react.useCallback)(function (event) {}, []);\n  var isGroup = (0, _react.useCallback)(function (item) {\n    return !!item && !!item.__group;\n  }, []);\n  var computedOnFocus = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n\n    if (event.nativeEvent.preventParentFocus) {\n      onFullBlur(event);\n      return;\n    }\n\n    event.nativeEvent.preventParentFocus = true;\n\n    if (computedProps.computedWillReceiveFocusRef.current) {\n      computedProps.computedWillReceiveFocusRef.current = false;\n      return;\n    }\n\n    if (!computedProps.computedFocused) {\n      computedProps.computedSetFocused(true);\n    }\n  }, []);\n  var onGroupRowClick = (0, _react.useCallback)(function (rowProps, _ref, queue) {\n    var enableKeyboardNavigation = _ref.enableKeyboardNavigation,\n        setActiveIndex = _ref.setActiveIndex;\n\n    if (rowProps.groupProps || rowProps.data && rowProps.data.__group) {\n      if (enableKeyboardNavigation) {\n        queue(function () {\n          setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return true;\n    }\n\n    return false;\n  }, []);\n\n  var handleRowSelectionOnClick = function handleRowSelectionOnClick(event, rowProps, computedProps, queue) {\n    if (event.nativeEvent.skipSelect) {\n      if (computedProps.enableKeyboardNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return;\n    }\n\n    var shiftKey = event.shiftKey,\n        metaKey = event.metaKey,\n        ctrlKey = event.ctrlKey;\n    var multiSelectKey = shiftKey || metaKey || ctrlKey;\n    var autoCheckboxColumn = props.autoCheckboxColumn;\n\n    if (autoCheckboxColumn && multiSelectKey) {\n      return;\n    }\n\n    if ((0, _handleSelection.handleSelection)(rowProps, computedProps, event, queue) !== false) {\n      queue(function () {\n        computedProps.setActiveIndex(rowProps.rowIndex);\n      });\n    }\n  };\n\n  var computedOnRowClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var preventRowSelectionOnClickWithMouseMove = computedProps.preventRowSelectionOnClickWithMouseMove,\n        initialProps = computedProps.initialProps;\n\n    if (initialProps.onRowClick) {\n      initialProps.onRowClick({\n        rowIndex: rowProps.rowIndex,\n        remoteRowIndex: rowProps.remoteRowIndex,\n        groupProps: rowProps.groupProps,\n        empty: rowProps.empty,\n        columns: rowProps.columns,\n        dataSourceArray: rowProps.dataSourceArray,\n        data: rowProps.data\n      }, event);\n    }\n\n    var queue = (0, _batchUpdate.default)();\n    var lastMouseDownEventProps = computedProps.lastMouseDownEventPropsRef.current;\n    var mouseDidNotMove = event.type !== 'click';\n\n    if (lastMouseDownEventProps && event.type === 'click') {\n      var pageX = lastMouseDownEventProps.pageX,\n          pageY = lastMouseDownEventProps.pageY,\n          rowIndex = lastMouseDownEventProps.rowIndex;\n      mouseDidNotMove = pageX === event.pageX && pageY === event.pageY && rowIndex === rowProps.rowIndex;\n    }\n\n    if (!computedProps.computedFocused) {\n      queue(function () {\n        computedProps.computedSetFocused(true);\n      });\n    }\n\n    if (computedProps.computedCellSelectionEnabled) {\n      queue.commit();\n      return;\n    }\n\n    if (onGroupRowClick(rowProps, computedProps, queue)) {\n      queue.commit();\n      return;\n    }\n\n    if ((!props.checkboxOnlyRowSelect || event.type !== 'click') && (preventRowSelectionOnClickWithMouseMove ? mouseDidNotMove : true)) {\n      handleRowSelectionOnClick(event, rowProps, computedProps, queue);\n    } else {\n      if (computedProps.enableKeyboardNavigation && computedProps.computedHasRowNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n    }\n\n    queue.commit();\n  }, []);\n  var onCellClickAction = (0, _react.useCallback)(function (event, cellProps) {\n    if (cellProps.groupProps || cellProps.cellSelectable === false) {\n      return;\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var hasCellSelection = computedProps.computedCellSelectionEnabled;\n    var cellMultiSelect = computedProps.computedCellMultiSelectionEnabled;\n    var queue = (0, _batchUpdate.default)();\n\n    if (hasCellSelection) {\n      var ctrlKey = event.ctrlKey || event.metaKey;\n      var append = cellMultiSelect && ctrlKey;\n      var cellCoords = [cellProps.rowIndex, cellProps.columnIndex];\n      var key = computedProps.getCellSelectionKey(cellProps);\n      var shiftKey = event.shiftKey && (computedProps.computedActiveCell || computedProps.lastSelectedCell);\n\n      if (shiftKey && cellMultiSelect) {\n        var cellSelection = computedProps.getCellSelectionBetween(computedProps.computedActiveCell || computedProps.lastSelectedCell || undefined, cellCoords);\n        queue(function () {\n          computedProps.setLastCellInRange(Object.keys(cellSelection).pop() || '');\n          computedProps.setCellSelection(cellSelection);\n        });\n      } else {\n        var cellSelectionMap = computedProps.computedCellSelection;\n        var isSelected = !!cellSelectionMap[key];\n        var newCellSelectionMap = append ? Object.assign({}, cellSelectionMap) : {};\n\n        if (isSelected && (cellMultiSelect || computedProps.initialProps.toggleCellSelectOnClick || ctrlKey)) {\n          delete newCellSelectionMap[key];\n        } else {\n          if (!shiftKey) {\n            queue(function () {\n              computedProps.setLastSelectedCell(cellCoords);\n            });\n          }\n\n          newCellSelectionMap[key] = true;\n        }\n\n        queue(function () {\n          computedProps.setCellSelection(newCellSelectionMap);\n        });\n      }\n    }\n\n    var shouldSetActiveCell = computedProps.computedCellNavigationEnabled && (!event.shiftKey || !cellMultiSelect);\n    queue(function () {\n      if (shouldSetActiveCell) {\n        computedProps.setActiveCell([cellProps.rowIndex, cellProps.columnIndex]);\n      }\n    });\n    queue.commit();\n  }, []);\n  var setItemAtAsSelected = (0, _react.useCallback)(function (index, event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var computedRowSelectionEnabled = computedProps.computedRowSelectionEnabled,\n        getItemAt = computedProps.getItemAt,\n        getItemId = computedProps.getItemId;\n    var item = getItemAt(index);\n    var itemId = item ? getItemId(item) : undefined;\n\n    if (itemId === undefined) {\n      return;\n    }\n\n    if (computedRowSelectionEnabled) {\n      (0, _handleSelection.handleSelection)({\n        rowIndex: index,\n        data: item\n      }, computedProps, event || {\n        nativeEvent: null\n      });\n    }\n  }, []);\n  var selectionIndexRef = (0, _react.useRef)(null);\n  var shiftKeyIndexRef = (0, _react.useRef)(null);\n  var lastMouseDownEventPropsRef = (0, _react.useRef)({\n    rowIndex: -1,\n    pageX: -1,\n    pageY: -1\n  });\n  var computedOnCellMouseDown = (0, _react.useCallback)(function (event, cellProps) {\n    lastMouseDownEventPropsRef.current = {\n      rowIndex: cellProps.rowIndex,\n      pageX: event.pageX,\n      pageY: event.pageY\n    };\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.columnUserSelect && event.shiftKey && computedProps.preventDefaultTextSelectionOnShiftMouseDown) {\n      event.preventDefault();\n    }\n\n    computedProps.onCellClickAction(event, cellProps);\n\n    if (computedProps.onCellSelectionDraggerMouseDown) {\n      computedProps.onCellSelectionDraggerMouseDown(event, cellProps);\n    }\n  }, []);\n  var computedActiveIndex = computedProps.computedActiveIndex;\n  return {\n    selectionIndexRef: selectionIndexRef,\n    shiftKeyIndexRef: shiftKeyIndexRef,\n    onCellClickAction: onCellClickAction,\n    computedOnKeyDown: computedOnKeyDown,\n    computedOnFocus: computedOnFocus,\n    computedOnRowClick: computedOnRowClick,\n    computedOnCellMouseDown: computedOnCellMouseDown,\n    isGroup: isGroup,\n    computedActiveItem: computedActiveIndex !== -1 && computedProps.data ? computedProps.data[computedActiveIndex] : null,\n    lastMouseDownEventPropsRef: lastMouseDownEventPropsRef,\n    toggleActiveRowSelection: function toggleActiveRowSelection(event) {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var computedActiveIndex = computedProps.computedActiveIndex;\n\n      if (computedActiveIndex == -1) {\n        return;\n      }\n\n      setItemAtAsSelected(computedActiveIndex, event);\n    },\n    rowProps: _objectSpread(_objectSpread({}, computedProps.initialProps.rowProps), {}, {\n      onMouseDown: function onMouseDown(event) {\n        if (computedProps.initialProps.rowProps && computedProps.initialProps.rowProps.onMouseDown) {\n          computedProps.initialProps.rowProps.onMouseDown(event);\n        }\n\n        if (!computedProps.computedFocused && computedProps.enableKeyboardNavigation) {\n          computedProps.computedWillReceiveFocusRef.current = true;\n        }\n      }\n    })\n  };\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/hooks/useRow/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_react","_batchUpdate","_handleSelection","_handleRowNavigation","_handleCellNavigation","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","_default","props","computedProps","computedPropsRef","computedOnKeyDown","event","onKeyDown","current","nativeEvent","__handled_in_details","sameElement","getScrollingElement","handled","focus","computedHasRowNavigation","computedCellNavigationEnabled","activeItem","computedActiveItem","activeIndex","computedActiveIndex","isGroup","rowExpandEnabled","computedRowExpandEnabled","rowExpandable","isRowExpandableAt","rowExpanded","isRowExpanded","treeEnabled","computedTreeEnabled","nodeExpandable","isNodeExpandableAt","nodeExpanded","isNodeExpanded","rowSelectionEnabled","computedRowSelectionEnabled","keyShortcutArg","data","index","handle","editKeyPressed","isStartEditKeyPressed","expandKeyPressed","isExpandKeyPressed","collapseKeyPressed","isCollapseKeyPressed","setRowExpandedAt","expandGroup","setNodeExpandedAt","collapseGroup","visibleColumns","tryStartEdit","rowIndex","columnId","id","dir","toggleRowExpand","toggleGroup","toggleNodeExpand","preventDefault","onFullBlur","useCallback","item","__group","computedOnFocus","onFocus","preventParentFocus","computedWillReceiveFocusRef","computedFocused","computedSetFocused","onGroupRowClick","rowProps","_ref","queue","enableKeyboardNavigation","setActiveIndex","groupProps","commit","handleRowSelectionOnClick","skipSelect","shiftKey","metaKey","ctrlKey","multiSelectKey","autoCheckboxColumn","handleSelection","computedOnRowClick","preventRowSelectionOnClickWithMouseMove","initialProps","onRowClick","remoteRowIndex","empty","columns","dataSourceArray","lastMouseDownEventProps","lastMouseDownEventPropsRef","mouseDidNotMove","type","pageX","pageY","computedCellSelectionEnabled","checkboxOnlyRowSelect","onCellClickAction","cellProps","cellSelectable","hasCellSelection","cellMultiSelect","computedCellMultiSelectionEnabled","append","cellCoords","columnIndex","getCellSelectionKey","computedActiveCell","lastSelectedCell","cellSelection","getCellSelectionBetween","undefined","setLastCellInRange","pop","setCellSelection","cellSelectionMap","computedCellSelection","isSelected","newCellSelectionMap","assign","toggleCellSelectOnClick","setLastSelectedCell","shouldSetActiveCell","setActiveCell","setItemAtAsSelected","getItemAt","getItemId","itemId","selectionIndexRef","useRef","shiftKeyIndexRef","computedOnCellMouseDown","columnUserSelect","preventDefaultTextSelectionOnShiftMouseDown","onCellSelectionDraggerMouseDown","toggleActiveRowSelection","onMouseDown"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,gBAAgB,GAAGP,sBAAsB,CAACC,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIO,MAAM,GAAGP,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIQ,YAAY,GAAGT,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAzC;;AAEA,IAAIS,gBAAgB,GAAGT,OAAO,CAAC,mBAAD,CAA9B;;AAEA,IAAIU,oBAAoB,GAAGX,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAjD;;AAEA,IAAIW,qBAAqB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAAlD;;AAEA,SAASY,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGd,MAAM,CAACc,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIZ,MAAM,CAACe,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGhB,MAAM,CAACe,qBAAP,CAA6BH,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBG,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOlB,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCM,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GN,IAAAA,IAAI,CAACO,IAAL,CAAUC,KAAV,CAAgBR,IAAhB,EAAsBE,OAAtB;AAAiC;;AAAC,SAAOF,IAAP;AAAc;;AAErV,SAASS,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEd,MAAAA,OAAO,CAACX,MAAM,CAAC4B,MAAD,CAAP,EAAiB,IAAjB,CAAP,CAA8BC,OAA9B,CAAsC,UAAUC,GAAV,EAAe;AAAE,SAAC,GAAGzB,gBAAgB,CAACD,OAArB,EAA8BoB,MAA9B,EAAsCM,GAAtC,EAA2CF,MAAM,CAACE,GAAD,CAAjD;AAA0D,OAAjH;AAAqH,KAAlI,MAAwI,IAAI9B,MAAM,CAAC+B,yBAAX,EAAsC;AAAE/B,MAAAA,MAAM,CAACgC,gBAAP,CAAwBR,MAAxB,EAAgCxB,MAAM,CAAC+B,yBAAP,CAAiCH,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAEjB,MAAAA,OAAO,CAACX,MAAM,CAAC4B,MAAD,CAAP,CAAP,CAAwBC,OAAxB,CAAgC,UAAUC,GAAV,EAAe;AAAE9B,QAAAA,MAAM,CAACC,cAAP,CAAsBuB,MAAtB,EAA8BM,GAA9B,EAAmC9B,MAAM,CAACmB,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAApI;AAAwI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEpiB,IAAIS,QAAQ,GAAG,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,aAAzB,EAAwCC,gBAAxC,EAA0D;AACvE,MAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AACxD,QAAIJ,KAAK,CAACK,SAAV,EAAqB;AACnBL,MAAAA,KAAK,CAACK,SAAN,CAAgBD,KAAhB;AACD;;AAED,QAAIH,aAAa,GAAGC,gBAAgB,CAACI,OAArC;;AAEA,QAAI,CAACL,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIG,KAAK,CAACG,WAAN,IAAqBH,KAAK,CAACG,WAAN,CAAkBC,oBAA3C,EAAiE;AAC/D;AACD;;AAED,QAAIC,WAAW,GAAGL,KAAK,CAACd,MAAN,KAAiBW,aAAa,CAACS,mBAAd,EAAnC;AACA,QAAIC,OAAO,GAAG,KAAd;;AAEA,QAAIP,KAAK,CAACR,GAAN,KAAc,QAAd,IAA0B,CAACa,WAA/B,EAA4C;AAC1CE,MAAAA,OAAO,GAAG,IAAV;AACAV,MAAAA,aAAa,CAACW,KAAd;AACD;;AAED,QAAI,CAACH,WAAL,EAAkB;AAChB;AACD;;AAED,QAAIR,aAAa,CAACY,wBAAlB,EAA4C;AAC1CF,MAAAA,OAAO,GAAG,CAAC,GAAGpC,oBAAoB,CAACL,OAAzB,EAAkCkC,KAAlC,EAAyCH,aAAzC,CAAV;AACD,KAFD,MAEO,IAAIA,aAAa,CAACa,6BAAlB,EAAiD;AACtDH,MAAAA,OAAO,GAAG,CAAC,GAAGnC,qBAAqB,CAACN,OAA1B,EAAmCkC,KAAnC,EAA0CH,aAA1C,CAAV;AACD;;AAED,QAAIc,UAAU,GAAGd,aAAa,CAACe,kBAA/B;AACA,QAAIC,WAAW,GAAGhB,aAAa,CAACiB,mBAAhC;AACA,QAAIC,OAAO,GAAGlB,aAAa,CAACkB,OAAd,CAAsBJ,UAAtB,CAAd;AACA,QAAIK,gBAAgB,GAAGnB,aAAa,CAACoB,wBAArC;AACA,QAAIC,aAAa,GAAGP,UAAU,IAAId,aAAa,CAACsB,iBAA5B,GAAgDtB,aAAa,CAACsB,iBAAd,CAAgCN,WAAhC,CAAhD,GAA+F,KAAnH;AACA,QAAIO,WAAW,GAAGF,aAAa,IAAIP,UAAjB,GAA8Bd,aAAa,CAACwB,aAAd,CAA4BV,UAA5B,CAA9B,GAAwE,KAA1F;AACA,QAAIW,WAAW,GAAGzB,aAAa,CAAC0B,mBAAhC;AACA,QAAIC,cAAc,GAAGF,WAAW,IAAIX,UAAf,IAA6Bd,aAAa,CAAC4B,kBAA3C,GAAgE5B,aAAa,CAAC4B,kBAAd,CAAiCZ,WAAjC,CAAhE,GAAgH,KAArI;AACA,QAAIa,YAAY,GAAGJ,WAAW,IAAIX,UAAf,IAA6Bd,aAAa,CAAC8B,cAA3C,GAA4D9B,aAAa,CAAC8B,cAAd,CAA6BhB,UAA7B,CAA5D,GAAuG,KAA1H;AACA,QAAIiB,mBAAmB,GAAG/B,aAAa,CAACgC,2BAAxC;AACA,QAAIC,cAAc,GAAG;AACnB9B,MAAAA,KAAK,EAAEA,KADY;AAEnB+B,MAAAA,IAAI,EAAEpB,UAFa;AAGnBqB,MAAAA,KAAK,EAAEnB,WAHY;AAInBF,MAAAA,UAAU,EAAEA,UAJO;AAKnBE,MAAAA,WAAW,EAAEA,WALM;AAMnBoB,MAAAA,MAAM,EAAEnC,gBANW;AAOnBiB,MAAAA,OAAO,EAAEA,OAPU;AAQnBO,MAAAA,WAAW,EAAEA,WARM;AASnBM,MAAAA,mBAAmB,EAAEA,mBATF;AAUnBJ,MAAAA,cAAc,EAAEA,cAVG;AAWnBE,MAAAA,YAAY,EAAEA,YAXK;AAYnBV,MAAAA,gBAAgB,EAAEA,gBAZC;AAanBE,MAAAA,aAAa,EAAEA,aAbI;AAcnBE,MAAAA,WAAW,EAAEA;AAdM,KAArB;AAgBA,QAAIc,cAAc,GAAG,CAAC,CAACrC,aAAa,CAACsC,qBAAd,CAAoCL,cAApC,CAAvB;AACA,QAAIM,gBAAgB,GAAG,CAAC,CAACvC,aAAa,CAACwC,kBAAd,CAAiCP,cAAjC,CAAzB;AACA,QAAIQ,kBAAkB,GAAG,CAACF,gBAAD,GAAoBvC,aAAa,CAAC0C,oBAAd,CAAmCT,cAAnC,CAApB,GAAyE,KAAlG;;AAEA,QAAIM,gBAAJ,EAAsB;AACpB7B,MAAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAI6B,gBAAgB,IAAIzB,UAAxB,EAAoC;AAClC,UAAIK,gBAAgB,IAAIE,aAApB,IAAqC,CAACE,WAA1C,EAAuD;AACrDvB,QAAAA,aAAa,CAAC2C,gBAAd,CAA+B3B,WAA/B,EAA4C,IAA5C;AACD,OAFD,MAEO;AACL,YAAIE,OAAJ,EAAa;AACXlB,UAAAA,aAAa,CAAC4C,WAAd,CAA0B9B,UAA1B;AACD,SAFD,MAEO,IAAIW,WAAW,IAAIE,cAAf,IAAiC,CAACE,YAAtC,EAAoD;AACzD7B,UAAAA,aAAa,CAAC6C,iBAAd,CAAgC7B,WAAhC,EAA6C,IAA7C;AACD;AACF;AACF;;AAED,QAAIyB,kBAAJ,EAAwB;AACtB/B,MAAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAI+B,kBAAkB,IAAI3B,UAA1B,EAAsC;AACpC,UAAIK,gBAAgB,IAAIE,aAApB,IAAqCE,WAAzC,EAAsD;AACpDvB,QAAAA,aAAa,CAAC2C,gBAAd,CAA+B3B,WAA/B,EAA4C,KAA5C;AACD,OAFD,MAEO;AACL,YAAIE,OAAJ,EAAa;AACXlB,UAAAA,aAAa,CAAC8C,aAAd,CAA4BhC,UAA5B;AACD,SAFD,MAEO,IAAIW,WAAW,IAAIE,cAAf,IAAiCE,YAArC,EAAmD;AACxD7B,UAAAA,aAAa,CAAC6C,iBAAd,CAAgC7B,WAAhC,EAA6C,KAA7C;AACD;AACF;AACF;;AAED,QAAIqB,cAAJ,EAAoB;AAClB3B,MAAAA,OAAO,GAAG,IAAV;;AAEA,UAAIV,aAAa,CAAC+C,cAAd,IAAgC/C,aAAa,CAAC+C,cAAd,CAA6BvD,MAAjE,EAAyE;AACvEQ,QAAAA,aAAa,CAACgD,YAAd,CAA2B;AACzBC,UAAAA,QAAQ,EAAEnC,UAAU,GAAGE,WAAH,GAAiB,CADZ;AAEzBkC,UAAAA,QAAQ,EAAElD,aAAa,CAAC+C,cAAd,CAA6B,CAA7B,EAAgCI,EAFjB;AAGzBC,UAAAA,GAAG,EAAE;AAHoB,SAA3B;AAKD;AACF;;AAED,QAAItC,UAAU,IAAIX,KAAK,CAACR,GAAN,KAAc,OAAhC,EAAyC;AACvC,UAAIwB,gBAAgB,IAAIE,aAAxB,EAAuC;AACrC,YAAI,CAACU,mBAAL,EAA0B;AACxB/B,UAAAA,aAAa,CAACqD,eAAd,CAA8BrC,WAA9B;AACAN,UAAAA,OAAO,GAAG,IAAV;AACD;AACF,OALD,MAKO;AACL,YAAIQ,OAAJ,EAAa;AACXlB,UAAAA,aAAa,CAACsD,WAAd,CAA0BxC,UAA1B;AACAJ,UAAAA,OAAO,GAAG,IAAV;AACD,SAHD,MAGO,IAAIiB,cAAc,IAAI,CAACI,mBAAnB,IAA0C/B,aAAa,CAAC0B,mBAA5D,EAAiF;AACtF1B,UAAAA,aAAa,CAACuD,gBAAd,CAA+BzC,UAA/B;AACAJ,UAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF;;AAED,QAAIA,OAAJ,EAAa;AACXP,MAAAA,KAAK,CAACqD,cAAN;;AAEA,UAAIrD,KAAK,CAACG,WAAV,EAAuB;AACrBH,QAAAA,KAAK,CAACG,WAAN,CAAkBC,oBAAlB,GAAyC,IAAzC;AACD;AACF;AACF,GAnID;;AAqIA,MAAIkD,UAAU,GAAG,CAAC,GAAGtF,MAAM,CAACuF,WAAX,EAAwB,UAAUvD,KAAV,EAAiB,CAAE,CAA3C,EAA6C,EAA7C,CAAjB;AACA,MAAIe,OAAO,GAAG,CAAC,GAAG/C,MAAM,CAACuF,WAAX,EAAwB,UAAUC,IAAV,EAAgB;AACpD,WAAO,CAAC,CAACA,IAAF,IAAU,CAAC,CAACA,IAAI,CAACC,OAAxB;AACD,GAFa,EAEX,EAFW,CAAd;AAGA,MAAIC,eAAe,GAAG,CAAC,GAAG1F,MAAM,CAACuF,WAAX,EAAwB,UAAUvD,KAAV,EAAiB;AAC7D,QAAIH,aAAa,GAAGC,gBAAgB,CAACI,OAArC;;AAEA,QAAI,CAACL,aAAL,EAAoB;AAClB;AACD;;AAEDG,IAAAA,KAAK,CAACqD,cAAN;;AAEA,QAAIzD,KAAK,CAAC+D,OAAV,EAAmB;AACjB/D,MAAAA,KAAK,CAAC+D,OAAN,CAAc3D,KAAd;AACD;;AAED,QAAIA,KAAK,CAACG,WAAN,CAAkByD,kBAAtB,EAA0C;AACxCN,MAAAA,UAAU,CAACtD,KAAD,CAAV;AACA;AACD;;AAEDA,IAAAA,KAAK,CAACG,WAAN,CAAkByD,kBAAlB,GAAuC,IAAvC;;AAEA,QAAI/D,aAAa,CAACgE,2BAAd,CAA0C3D,OAA9C,EAAuD;AACrDL,MAAAA,aAAa,CAACgE,2BAAd,CAA0C3D,OAA1C,GAAoD,KAApD;AACA;AACD;;AAED,QAAI,CAACL,aAAa,CAACiE,eAAnB,EAAoC;AAClCjE,MAAAA,aAAa,CAACkE,kBAAd,CAAiC,IAAjC;AACD;AACF,GA5BqB,EA4BnB,EA5BmB,CAAtB;AA6BA,MAAIC,eAAe,GAAG,CAAC,GAAGhG,MAAM,CAACuF,WAAX,EAAwB,UAAUU,QAAV,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiC;AAC7E,QAAIC,wBAAwB,GAAGF,IAAI,CAACE,wBAApC;AAAA,QACIC,cAAc,GAAGH,IAAI,CAACG,cAD1B;;AAGA,QAAIJ,QAAQ,CAACK,UAAT,IAAuBL,QAAQ,CAAClC,IAAT,IAAiBkC,QAAQ,CAAClC,IAAT,CAAc0B,OAA1D,EAAmE;AACjE,UAAIW,wBAAJ,EAA8B;AAC5BD,QAAAA,KAAK,CAAC,YAAY;AAChBE,UAAAA,cAAc,CAACJ,QAAQ,CAACnB,QAAV,CAAd;AACD,SAFI,CAAL;AAGD;;AAEDqB,MAAAA,KAAK,CAACI,MAAN;AACA,aAAO,IAAP;AACD;;AAED,WAAO,KAAP;AACD,GAhBqB,EAgBnB,EAhBmB,CAAtB;;AAkBA,MAAIC,yBAAyB,GAAG,SAASA,yBAAT,CAAmCxE,KAAnC,EAA0CiE,QAA1C,EAAoDpE,aAApD,EAAmEsE,KAAnE,EAA0E;AACxG,QAAInE,KAAK,CAACG,WAAN,CAAkBsE,UAAtB,EAAkC;AAChC,UAAI5E,aAAa,CAACuE,wBAAlB,EAA4C;AAC1CD,QAAAA,KAAK,CAAC,YAAY;AAChBtE,UAAAA,aAAa,CAACwE,cAAd,CAA6BJ,QAAQ,CAACnB,QAAtC;AACD,SAFI,CAAL;AAGD;;AAEDqB,MAAAA,KAAK,CAACI,MAAN;AACA;AACD;;AAED,QAAIG,QAAQ,GAAG1E,KAAK,CAAC0E,QAArB;AAAA,QACIC,OAAO,GAAG3E,KAAK,CAAC2E,OADpB;AAAA,QAEIC,OAAO,GAAG5E,KAAK,CAAC4E,OAFpB;AAGA,QAAIC,cAAc,GAAGH,QAAQ,IAAIC,OAAZ,IAAuBC,OAA5C;AACA,QAAIE,kBAAkB,GAAGlF,KAAK,CAACkF,kBAA/B;;AAEA,QAAIA,kBAAkB,IAAID,cAA1B,EAA0C;AACxC;AACD;;AAED,QAAI,CAAC,GAAG3G,gBAAgB,CAAC6G,eAArB,EAAsCd,QAAtC,EAAgDpE,aAAhD,EAA+DG,KAA/D,EAAsEmE,KAAtE,MAAiF,KAArF,EAA4F;AAC1FA,MAAAA,KAAK,CAAC,YAAY;AAChBtE,QAAAA,aAAa,CAACwE,cAAd,CAA6BJ,QAAQ,CAACnB,QAAtC;AACD,OAFI,CAAL;AAGD;AACF,GA3BD;;AA6BA,MAAIkC,kBAAkB,GAAG,CAAC,GAAGhH,MAAM,CAACuF,WAAX,EAAwB,UAAUvD,KAAV,EAAiBiE,QAAjB,EAA2B;AAC1E,QAAIpE,aAAa,GAAGC,gBAAgB,CAACI,OAArC;;AAEA,QAAI,CAACL,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIoF,uCAAuC,GAAGpF,aAAa,CAACoF,uCAA5D;AAAA,QACIC,YAAY,GAAGrF,aAAa,CAACqF,YADjC;;AAGA,QAAIA,YAAY,CAACC,UAAjB,EAA6B;AAC3BD,MAAAA,YAAY,CAACC,UAAb,CAAwB;AACtBrC,QAAAA,QAAQ,EAAEmB,QAAQ,CAACnB,QADG;AAEtBsC,QAAAA,cAAc,EAAEnB,QAAQ,CAACmB,cAFH;AAGtBd,QAAAA,UAAU,EAAEL,QAAQ,CAACK,UAHC;AAItBe,QAAAA,KAAK,EAAEpB,QAAQ,CAACoB,KAJM;AAKtBC,QAAAA,OAAO,EAAErB,QAAQ,CAACqB,OALI;AAMtBC,QAAAA,eAAe,EAAEtB,QAAQ,CAACsB,eANJ;AAOtBxD,QAAAA,IAAI,EAAEkC,QAAQ,CAAClC;AAPO,OAAxB,EAQG/B,KARH;AASD;;AAED,QAAImE,KAAK,GAAG,CAAC,GAAGlG,YAAY,CAACH,OAAjB,GAAZ;AACA,QAAI0H,uBAAuB,GAAG3F,aAAa,CAAC4F,0BAAd,CAAyCvF,OAAvE;AACA,QAAIwF,eAAe,GAAG1F,KAAK,CAAC2F,IAAN,KAAe,OAArC;;AAEA,QAAIH,uBAAuB,IAAIxF,KAAK,CAAC2F,IAAN,KAAe,OAA9C,EAAuD;AACrD,UAAIC,KAAK,GAAGJ,uBAAuB,CAACI,KAApC;AAAA,UACIC,KAAK,GAAGL,uBAAuB,CAACK,KADpC;AAAA,UAEI/C,QAAQ,GAAG0C,uBAAuB,CAAC1C,QAFvC;AAGA4C,MAAAA,eAAe,GAAGE,KAAK,KAAK5F,KAAK,CAAC4F,KAAhB,IAAyBC,KAAK,KAAK7F,KAAK,CAAC6F,KAAzC,IAAkD/C,QAAQ,KAAKmB,QAAQ,CAACnB,QAA1F;AACD;;AAED,QAAI,CAACjD,aAAa,CAACiE,eAAnB,EAAoC;AAClCK,MAAAA,KAAK,CAAC,YAAY;AAChBtE,QAAAA,aAAa,CAACkE,kBAAd,CAAiC,IAAjC;AACD,OAFI,CAAL;AAGD;;AAED,QAAIlE,aAAa,CAACiG,4BAAlB,EAAgD;AAC9C3B,MAAAA,KAAK,CAACI,MAAN;AACA;AACD;;AAED,QAAIP,eAAe,CAACC,QAAD,EAAWpE,aAAX,EAA0BsE,KAA1B,CAAnB,EAAqD;AACnDA,MAAAA,KAAK,CAACI,MAAN;AACA;AACD;;AAED,QAAI,CAAC,CAAC3E,KAAK,CAACmG,qBAAP,IAAgC/F,KAAK,CAAC2F,IAAN,KAAe,OAAhD,MAA6DV,uCAAuC,GAAGS,eAAH,GAAqB,IAAzH,CAAJ,EAAoI;AAClIlB,MAAAA,yBAAyB,CAACxE,KAAD,EAAQiE,QAAR,EAAkBpE,aAAlB,EAAiCsE,KAAjC,CAAzB;AACD,KAFD,MAEO;AACL,UAAItE,aAAa,CAACuE,wBAAd,IAA0CvE,aAAa,CAACY,wBAA5D,EAAsF;AACpF0D,QAAAA,KAAK,CAAC,YAAY;AAChBtE,UAAAA,aAAa,CAACwE,cAAd,CAA6BJ,QAAQ,CAACnB,QAAtC;AACD,SAFI,CAAL;AAGD;AACF;;AAEDqB,IAAAA,KAAK,CAACI,MAAN;AACD,GA5DwB,EA4DtB,EA5DsB,CAAzB;AA6DA,MAAIyB,iBAAiB,GAAG,CAAC,GAAGhI,MAAM,CAACuF,WAAX,EAAwB,UAAUvD,KAAV,EAAiBiG,SAAjB,EAA4B;AAC1E,QAAIA,SAAS,CAAC3B,UAAV,IAAwB2B,SAAS,CAACC,cAAV,KAA6B,KAAzD,EAAgE;AAC9D;AACD;;AAED,QAAIrG,aAAa,GAAGC,gBAAgB,CAACI,OAArC;;AAEA,QAAI,CAACL,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIsG,gBAAgB,GAAGtG,aAAa,CAACiG,4BAArC;AACA,QAAIM,eAAe,GAAGvG,aAAa,CAACwG,iCAApC;AACA,QAAIlC,KAAK,GAAG,CAAC,GAAGlG,YAAY,CAACH,OAAjB,GAAZ;;AAEA,QAAIqI,gBAAJ,EAAsB;AACpB,UAAIvB,OAAO,GAAG5E,KAAK,CAAC4E,OAAN,IAAiB5E,KAAK,CAAC2E,OAArC;AACA,UAAI2B,MAAM,GAAGF,eAAe,IAAIxB,OAAhC;AACA,UAAI2B,UAAU,GAAG,CAACN,SAAS,CAACnD,QAAX,EAAqBmD,SAAS,CAACO,WAA/B,CAAjB;AACA,UAAIhH,GAAG,GAAGK,aAAa,CAAC4G,mBAAd,CAAkCR,SAAlC,CAAV;AACA,UAAIvB,QAAQ,GAAG1E,KAAK,CAAC0E,QAAN,KAAmB7E,aAAa,CAAC6G,kBAAd,IAAoC7G,aAAa,CAAC8G,gBAArE,CAAf;;AAEA,UAAIjC,QAAQ,IAAI0B,eAAhB,EAAiC;AAC/B,YAAIQ,aAAa,GAAG/G,aAAa,CAACgH,uBAAd,CAAsChH,aAAa,CAAC6G,kBAAd,IAAoC7G,aAAa,CAAC8G,gBAAlD,IAAsEG,SAA5G,EAAuHP,UAAvH,CAApB;AACApC,QAAAA,KAAK,CAAC,YAAY;AAChBtE,UAAAA,aAAa,CAACkH,kBAAd,CAAiCrJ,MAAM,CAACc,IAAP,CAAYoI,aAAZ,EAA2BI,GAA3B,MAAoC,EAArE;AACAnH,UAAAA,aAAa,CAACoH,gBAAd,CAA+BL,aAA/B;AACD,SAHI,CAAL;AAID,OAND,MAMO;AACL,YAAIM,gBAAgB,GAAGrH,aAAa,CAACsH,qBAArC;AACA,YAAIC,UAAU,GAAG,CAAC,CAACF,gBAAgB,CAAC1H,GAAD,CAAnC;AACA,YAAI6H,mBAAmB,GAAGf,MAAM,GAAG5I,MAAM,CAAC4J,MAAP,CAAc,EAAd,EAAkBJ,gBAAlB,CAAH,GAAyC,EAAzE;;AAEA,YAAIE,UAAU,KAAKhB,eAAe,IAAIvG,aAAa,CAACqF,YAAd,CAA2BqC,uBAA9C,IAAyE3C,OAA9E,CAAd,EAAsG;AACpG,iBAAOyC,mBAAmB,CAAC7H,GAAD,CAA1B;AACD,SAFD,MAEO;AACL,cAAI,CAACkF,QAAL,EAAe;AACbP,YAAAA,KAAK,CAAC,YAAY;AAChBtE,cAAAA,aAAa,CAAC2H,mBAAd,CAAkCjB,UAAlC;AACD,aAFI,CAAL;AAGD;;AAEDc,UAAAA,mBAAmB,CAAC7H,GAAD,CAAnB,GAA2B,IAA3B;AACD;;AAED2E,QAAAA,KAAK,CAAC,YAAY;AAChBtE,UAAAA,aAAa,CAACoH,gBAAd,CAA+BI,mBAA/B;AACD,SAFI,CAAL;AAGD;AACF;;AAED,QAAII,mBAAmB,GAAG5H,aAAa,CAACa,6BAAd,KAAgD,CAACV,KAAK,CAAC0E,QAAP,IAAmB,CAAC0B,eAApE,CAA1B;AACAjC,IAAAA,KAAK,CAAC,YAAY;AAChB,UAAIsD,mBAAJ,EAAyB;AACvB5H,QAAAA,aAAa,CAAC6H,aAAd,CAA4B,CAACzB,SAAS,CAACnD,QAAX,EAAqBmD,SAAS,CAACO,WAA/B,CAA5B;AACD;AACF,KAJI,CAAL;AAKArC,IAAAA,KAAK,CAACI,MAAN;AACD,GA1DuB,EA0DrB,EA1DqB,CAAxB;AA2DA,MAAIoD,mBAAmB,GAAG,CAAC,GAAG3J,MAAM,CAACuF,WAAX,EAAwB,UAAUvB,KAAV,EAAiBhC,KAAjB,EAAwB;AACxE,QAAIH,aAAa,GAAGC,gBAAgB,CAACI,OAArC;;AAEA,QAAI,CAACL,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIgC,2BAA2B,GAAGhC,aAAa,CAACgC,2BAAhD;AAAA,QACI+F,SAAS,GAAG/H,aAAa,CAAC+H,SAD9B;AAAA,QAEIC,SAAS,GAAGhI,aAAa,CAACgI,SAF9B;AAGA,QAAIrE,IAAI,GAAGoE,SAAS,CAAC5F,KAAD,CAApB;AACA,QAAI8F,MAAM,GAAGtE,IAAI,GAAGqE,SAAS,CAACrE,IAAD,CAAZ,GAAqBsD,SAAtC;;AAEA,QAAIgB,MAAM,KAAKhB,SAAf,EAA0B;AACxB;AACD;;AAED,QAAIjF,2BAAJ,EAAiC;AAC/B,OAAC,GAAG3D,gBAAgB,CAAC6G,eAArB,EAAsC;AACpCjC,QAAAA,QAAQ,EAAEd,KAD0B;AAEpCD,QAAAA,IAAI,EAAEyB;AAF8B,OAAtC,EAGG3D,aAHH,EAGkBG,KAAK,IAAI;AACzBG,QAAAA,WAAW,EAAE;AADY,OAH3B;AAMD;AACF,GAzByB,EAyBvB,EAzBuB,CAA1B;AA0BA,MAAI4H,iBAAiB,GAAG,CAAC,GAAG/J,MAAM,CAACgK,MAAX,EAAmB,IAAnB,CAAxB;AACA,MAAIC,gBAAgB,GAAG,CAAC,GAAGjK,MAAM,CAACgK,MAAX,EAAmB,IAAnB,CAAvB;AACA,MAAIvC,0BAA0B,GAAG,CAAC,GAAGzH,MAAM,CAACgK,MAAX,EAAmB;AAClDlF,IAAAA,QAAQ,EAAE,CAAC,CADuC;AAElD8C,IAAAA,KAAK,EAAE,CAAC,CAF0C;AAGlDC,IAAAA,KAAK,EAAE,CAAC;AAH0C,GAAnB,CAAjC;AAKA,MAAIqC,uBAAuB,GAAG,CAAC,GAAGlK,MAAM,CAACuF,WAAX,EAAwB,UAAUvD,KAAV,EAAiBiG,SAAjB,EAA4B;AAChFR,IAAAA,0BAA0B,CAACvF,OAA3B,GAAqC;AACnC4C,MAAAA,QAAQ,EAAEmD,SAAS,CAACnD,QADe;AAEnC8C,MAAAA,KAAK,EAAE5F,KAAK,CAAC4F,KAFsB;AAGnCC,MAAAA,KAAK,EAAE7F,KAAK,CAAC6F;AAHsB,KAArC;AAKA,QAAIhG,aAAa,GAAGC,gBAAgB,CAACI,OAArC;;AAEA,QAAI,CAACL,aAAL,EAAoB;AAClB;AACD;;AAED,QAAIA,aAAa,CAACsI,gBAAd,IAAkCnI,KAAK,CAAC0E,QAAxC,IAAoD7E,aAAa,CAACuI,2CAAtE,EAAmH;AACjHpI,MAAAA,KAAK,CAACqD,cAAN;AACD;;AAEDxD,IAAAA,aAAa,CAACmG,iBAAd,CAAgChG,KAAhC,EAAuCiG,SAAvC;;AAEA,QAAIpG,aAAa,CAACwI,+BAAlB,EAAmD;AACjDxI,MAAAA,aAAa,CAACwI,+BAAd,CAA8CrI,KAA9C,EAAqDiG,SAArD;AACD;AACF,GArB6B,EAqB3B,EArB2B,CAA9B;AAsBA,MAAInF,mBAAmB,GAAGjB,aAAa,CAACiB,mBAAxC;AACA,SAAO;AACLiH,IAAAA,iBAAiB,EAAEA,iBADd;AAELE,IAAAA,gBAAgB,EAAEA,gBAFb;AAGLjC,IAAAA,iBAAiB,EAAEA,iBAHd;AAILjG,IAAAA,iBAAiB,EAAEA,iBAJd;AAKL2D,IAAAA,eAAe,EAAEA,eALZ;AAMLsB,IAAAA,kBAAkB,EAAEA,kBANf;AAOLkD,IAAAA,uBAAuB,EAAEA,uBAPpB;AAQLnH,IAAAA,OAAO,EAAEA,OARJ;AASLH,IAAAA,kBAAkB,EAAEE,mBAAmB,KAAK,CAAC,CAAzB,IAA8BjB,aAAa,CAACkC,IAA5C,GAAmDlC,aAAa,CAACkC,IAAd,CAAmBjB,mBAAnB,CAAnD,GAA6F,IAT5G;AAUL2E,IAAAA,0BAA0B,EAAEA,0BAVvB;AAWL6C,IAAAA,wBAAwB,EAAE,SAASA,wBAAT,CAAkCtI,KAAlC,EAAyC;AACjE,UAAIH,aAAa,GAAGC,gBAAgB,CAACI,OAArC;;AAEA,UAAI,CAACL,aAAL,EAAoB;AAClB;AACD;;AAED,UAAIiB,mBAAmB,GAAGjB,aAAa,CAACiB,mBAAxC;;AAEA,UAAIA,mBAAmB,IAAI,CAAC,CAA5B,EAA+B;AAC7B;AACD;;AAED6G,MAAAA,mBAAmB,CAAC7G,mBAAD,EAAsBd,KAAtB,CAAnB;AACD,KAzBI;AA0BLiE,IAAAA,QAAQ,EAAEhF,aAAa,CAACA,aAAa,CAAC,EAAD,EAAKY,aAAa,CAACqF,YAAd,CAA2BjB,QAAhC,CAAd,EAAyD,EAAzD,EAA6D;AAClFsE,MAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBvI,KAArB,EAA4B;AACvC,YAAIH,aAAa,CAACqF,YAAd,CAA2BjB,QAA3B,IAAuCpE,aAAa,CAACqF,YAAd,CAA2BjB,QAA3B,CAAoCsE,WAA/E,EAA4F;AAC1F1I,UAAAA,aAAa,CAACqF,YAAd,CAA2BjB,QAA3B,CAAoCsE,WAApC,CAAgDvI,KAAhD;AACD;;AAED,YAAI,CAACH,aAAa,CAACiE,eAAf,IAAkCjE,aAAa,CAACuE,wBAApD,EAA8E;AAC5EvE,UAAAA,aAAa,CAACgE,2BAAd,CAA0C3D,OAA1C,GAAoD,IAApD;AACD;AACF;AATiF,KAA7D;AA1BlB,GAAP;AAsCD,CA5aD;;AA8aAtC,OAAO,CAACE,OAAR,GAAkB6B,QAAlB","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _batchUpdate = _interopRequireDefault(require(\"../../utils/batchUpdate\"));\n\nvar _handleSelection = require(\"./handleSelection\");\n\nvar _handleRowNavigation = _interopRequireDefault(require(\"./handleRowNavigation\"));\n\nvar _handleCellNavigation = _interopRequireDefault(require(\"./handleCellNavigation\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _default = function _default(props, computedProps, computedPropsRef) {\n  var computedOnKeyDown = function computedOnKeyDown(event) {\n    if (props.onKeyDown) {\n      props.onKeyDown(event);\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (event.nativeEvent && event.nativeEvent.__handled_in_details) {\n      return;\n    }\n\n    var sameElement = event.target === computedProps.getScrollingElement();\n    var handled = false;\n\n    if (event.key === 'Escape' && !sameElement) {\n      handled = true;\n      computedProps.focus();\n    }\n\n    if (!sameElement) {\n      return;\n    }\n\n    if (computedProps.computedHasRowNavigation) {\n      handled = (0, _handleRowNavigation.default)(event, computedProps);\n    } else if (computedProps.computedCellNavigationEnabled) {\n      handled = (0, _handleCellNavigation.default)(event, computedProps);\n    }\n\n    var activeItem = computedProps.computedActiveItem;\n    var activeIndex = computedProps.computedActiveIndex;\n    var isGroup = computedProps.isGroup(activeItem);\n    var rowExpandEnabled = computedProps.computedRowExpandEnabled;\n    var rowExpandable = activeItem && computedProps.isRowExpandableAt ? computedProps.isRowExpandableAt(activeIndex) : false;\n    var rowExpanded = rowExpandable && activeItem ? computedProps.isRowExpanded(activeItem) : false;\n    var treeEnabled = computedProps.computedTreeEnabled;\n    var nodeExpandable = treeEnabled && activeItem && computedProps.isNodeExpandableAt ? computedProps.isNodeExpandableAt(activeIndex) : false;\n    var nodeExpanded = treeEnabled && activeItem && computedProps.isNodeExpanded ? computedProps.isNodeExpanded(activeItem) : false;\n    var rowSelectionEnabled = computedProps.computedRowSelectionEnabled;\n    var keyShortcutArg = {\n      event: event,\n      data: activeItem,\n      index: activeIndex,\n      activeItem: activeItem,\n      activeIndex: activeIndex,\n      handle: computedPropsRef,\n      isGroup: isGroup,\n      treeEnabled: treeEnabled,\n      rowSelectionEnabled: rowSelectionEnabled,\n      nodeExpandable: nodeExpandable,\n      nodeExpanded: nodeExpanded,\n      rowExpandEnabled: rowExpandEnabled,\n      rowExpandable: rowExpandable,\n      rowExpanded: rowExpanded\n    };\n    var editKeyPressed = !!computedProps.isStartEditKeyPressed(keyShortcutArg);\n    var expandKeyPressed = !!computedProps.isExpandKeyPressed(keyShortcutArg);\n    var collapseKeyPressed = !expandKeyPressed ? computedProps.isCollapseKeyPressed(keyShortcutArg) : false;\n\n    if (expandKeyPressed) {\n      handled = true;\n    }\n\n    if (expandKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && !rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, true);\n      } else {\n        if (isGroup) {\n          computedProps.expandGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && !nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, true);\n        }\n      }\n    }\n\n    if (collapseKeyPressed) {\n      handled = true;\n    }\n\n    if (collapseKeyPressed && activeItem) {\n      if (rowExpandEnabled && rowExpandable && rowExpanded) {\n        computedProps.setRowExpandedAt(activeIndex, false);\n      } else {\n        if (isGroup) {\n          computedProps.collapseGroup(activeItem);\n        } else if (treeEnabled && nodeExpandable && nodeExpanded) {\n          computedProps.setNodeExpandedAt(activeIndex, false);\n        }\n      }\n    }\n\n    if (editKeyPressed) {\n      handled = true;\n\n      if (computedProps.visibleColumns && computedProps.visibleColumns.length) {\n        computedProps.tryStartEdit({\n          rowIndex: activeItem ? activeIndex : 0,\n          columnId: computedProps.visibleColumns[0].id,\n          dir: 1\n        });\n      }\n    }\n\n    if (activeItem && event.key === 'Enter') {\n      if (rowExpandEnabled && rowExpandable) {\n        if (!rowSelectionEnabled) {\n          computedProps.toggleRowExpand(activeIndex);\n          handled = true;\n        }\n      } else {\n        if (isGroup) {\n          computedProps.toggleGroup(activeItem);\n          handled = true;\n        } else if (nodeExpandable && !rowSelectionEnabled && computedProps.computedTreeEnabled) {\n          computedProps.toggleNodeExpand(activeItem);\n          handled = true;\n        }\n      }\n    }\n\n    if (handled) {\n      event.preventDefault();\n\n      if (event.nativeEvent) {\n        event.nativeEvent.__handled_in_details = true;\n      }\n    }\n  };\n\n  var onFullBlur = (0, _react.useCallback)(function (event) {}, []);\n  var isGroup = (0, _react.useCallback)(function (item) {\n    return !!item && !!item.__group;\n  }, []);\n  var computedOnFocus = (0, _react.useCallback)(function (event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (props.onFocus) {\n      props.onFocus(event);\n    }\n\n    if (event.nativeEvent.preventParentFocus) {\n      onFullBlur(event);\n      return;\n    }\n\n    event.nativeEvent.preventParentFocus = true;\n\n    if (computedProps.computedWillReceiveFocusRef.current) {\n      computedProps.computedWillReceiveFocusRef.current = false;\n      return;\n    }\n\n    if (!computedProps.computedFocused) {\n      computedProps.computedSetFocused(true);\n    }\n  }, []);\n  var onGroupRowClick = (0, _react.useCallback)(function (rowProps, _ref, queue) {\n    var enableKeyboardNavigation = _ref.enableKeyboardNavigation,\n        setActiveIndex = _ref.setActiveIndex;\n\n    if (rowProps.groupProps || rowProps.data && rowProps.data.__group) {\n      if (enableKeyboardNavigation) {\n        queue(function () {\n          setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return true;\n    }\n\n    return false;\n  }, []);\n\n  var handleRowSelectionOnClick = function handleRowSelectionOnClick(event, rowProps, computedProps, queue) {\n    if (event.nativeEvent.skipSelect) {\n      if (computedProps.enableKeyboardNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n\n      queue.commit();\n      return;\n    }\n\n    var shiftKey = event.shiftKey,\n        metaKey = event.metaKey,\n        ctrlKey = event.ctrlKey;\n    var multiSelectKey = shiftKey || metaKey || ctrlKey;\n    var autoCheckboxColumn = props.autoCheckboxColumn;\n\n    if (autoCheckboxColumn && multiSelectKey) {\n      return;\n    }\n\n    if ((0, _handleSelection.handleSelection)(rowProps, computedProps, event, queue) !== false) {\n      queue(function () {\n        computedProps.setActiveIndex(rowProps.rowIndex);\n      });\n    }\n  };\n\n  var computedOnRowClick = (0, _react.useCallback)(function (event, rowProps) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var preventRowSelectionOnClickWithMouseMove = computedProps.preventRowSelectionOnClickWithMouseMove,\n        initialProps = computedProps.initialProps;\n\n    if (initialProps.onRowClick) {\n      initialProps.onRowClick({\n        rowIndex: rowProps.rowIndex,\n        remoteRowIndex: rowProps.remoteRowIndex,\n        groupProps: rowProps.groupProps,\n        empty: rowProps.empty,\n        columns: rowProps.columns,\n        dataSourceArray: rowProps.dataSourceArray,\n        data: rowProps.data\n      }, event);\n    }\n\n    var queue = (0, _batchUpdate.default)();\n    var lastMouseDownEventProps = computedProps.lastMouseDownEventPropsRef.current;\n    var mouseDidNotMove = event.type !== 'click';\n\n    if (lastMouseDownEventProps && event.type === 'click') {\n      var pageX = lastMouseDownEventProps.pageX,\n          pageY = lastMouseDownEventProps.pageY,\n          rowIndex = lastMouseDownEventProps.rowIndex;\n      mouseDidNotMove = pageX === event.pageX && pageY === event.pageY && rowIndex === rowProps.rowIndex;\n    }\n\n    if (!computedProps.computedFocused) {\n      queue(function () {\n        computedProps.computedSetFocused(true);\n      });\n    }\n\n    if (computedProps.computedCellSelectionEnabled) {\n      queue.commit();\n      return;\n    }\n\n    if (onGroupRowClick(rowProps, computedProps, queue)) {\n      queue.commit();\n      return;\n    }\n\n    if ((!props.checkboxOnlyRowSelect || event.type !== 'click') && (preventRowSelectionOnClickWithMouseMove ? mouseDidNotMove : true)) {\n      handleRowSelectionOnClick(event, rowProps, computedProps, queue);\n    } else {\n      if (computedProps.enableKeyboardNavigation && computedProps.computedHasRowNavigation) {\n        queue(function () {\n          computedProps.setActiveIndex(rowProps.rowIndex);\n        });\n      }\n    }\n\n    queue.commit();\n  }, []);\n  var onCellClickAction = (0, _react.useCallback)(function (event, cellProps) {\n    if (cellProps.groupProps || cellProps.cellSelectable === false) {\n      return;\n    }\n\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var hasCellSelection = computedProps.computedCellSelectionEnabled;\n    var cellMultiSelect = computedProps.computedCellMultiSelectionEnabled;\n    var queue = (0, _batchUpdate.default)();\n\n    if (hasCellSelection) {\n      var ctrlKey = event.ctrlKey || event.metaKey;\n      var append = cellMultiSelect && ctrlKey;\n      var cellCoords = [cellProps.rowIndex, cellProps.columnIndex];\n      var key = computedProps.getCellSelectionKey(cellProps);\n      var shiftKey = event.shiftKey && (computedProps.computedActiveCell || computedProps.lastSelectedCell);\n\n      if (shiftKey && cellMultiSelect) {\n        var cellSelection = computedProps.getCellSelectionBetween(computedProps.computedActiveCell || computedProps.lastSelectedCell || undefined, cellCoords);\n        queue(function () {\n          computedProps.setLastCellInRange(Object.keys(cellSelection).pop() || '');\n          computedProps.setCellSelection(cellSelection);\n        });\n      } else {\n        var cellSelectionMap = computedProps.computedCellSelection;\n        var isSelected = !!cellSelectionMap[key];\n        var newCellSelectionMap = append ? Object.assign({}, cellSelectionMap) : {};\n\n        if (isSelected && (cellMultiSelect || computedProps.initialProps.toggleCellSelectOnClick || ctrlKey)) {\n          delete newCellSelectionMap[key];\n        } else {\n          if (!shiftKey) {\n            queue(function () {\n              computedProps.setLastSelectedCell(cellCoords);\n            });\n          }\n\n          newCellSelectionMap[key] = true;\n        }\n\n        queue(function () {\n          computedProps.setCellSelection(newCellSelectionMap);\n        });\n      }\n    }\n\n    var shouldSetActiveCell = computedProps.computedCellNavigationEnabled && (!event.shiftKey || !cellMultiSelect);\n    queue(function () {\n      if (shouldSetActiveCell) {\n        computedProps.setActiveCell([cellProps.rowIndex, cellProps.columnIndex]);\n      }\n    });\n    queue.commit();\n  }, []);\n  var setItemAtAsSelected = (0, _react.useCallback)(function (index, event) {\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    var computedRowSelectionEnabled = computedProps.computedRowSelectionEnabled,\n        getItemAt = computedProps.getItemAt,\n        getItemId = computedProps.getItemId;\n    var item = getItemAt(index);\n    var itemId = item ? getItemId(item) : undefined;\n\n    if (itemId === undefined) {\n      return;\n    }\n\n    if (computedRowSelectionEnabled) {\n      (0, _handleSelection.handleSelection)({\n        rowIndex: index,\n        data: item\n      }, computedProps, event || {\n        nativeEvent: null\n      });\n    }\n  }, []);\n  var selectionIndexRef = (0, _react.useRef)(null);\n  var shiftKeyIndexRef = (0, _react.useRef)(null);\n  var lastMouseDownEventPropsRef = (0, _react.useRef)({\n    rowIndex: -1,\n    pageX: -1,\n    pageY: -1\n  });\n  var computedOnCellMouseDown = (0, _react.useCallback)(function (event, cellProps) {\n    lastMouseDownEventPropsRef.current = {\n      rowIndex: cellProps.rowIndex,\n      pageX: event.pageX,\n      pageY: event.pageY\n    };\n    var computedProps = computedPropsRef.current;\n\n    if (!computedProps) {\n      return;\n    }\n\n    if (computedProps.columnUserSelect && event.shiftKey && computedProps.preventDefaultTextSelectionOnShiftMouseDown) {\n      event.preventDefault();\n    }\n\n    computedProps.onCellClickAction(event, cellProps);\n\n    if (computedProps.onCellSelectionDraggerMouseDown) {\n      computedProps.onCellSelectionDraggerMouseDown(event, cellProps);\n    }\n  }, []);\n  var computedActiveIndex = computedProps.computedActiveIndex;\n  return {\n    selectionIndexRef: selectionIndexRef,\n    shiftKeyIndexRef: shiftKeyIndexRef,\n    onCellClickAction: onCellClickAction,\n    computedOnKeyDown: computedOnKeyDown,\n    computedOnFocus: computedOnFocus,\n    computedOnRowClick: computedOnRowClick,\n    computedOnCellMouseDown: computedOnCellMouseDown,\n    isGroup: isGroup,\n    computedActiveItem: computedActiveIndex !== -1 && computedProps.data ? computedProps.data[computedActiveIndex] : null,\n    lastMouseDownEventPropsRef: lastMouseDownEventPropsRef,\n    toggleActiveRowSelection: function toggleActiveRowSelection(event) {\n      var computedProps = computedPropsRef.current;\n\n      if (!computedProps) {\n        return;\n      }\n\n      var computedActiveIndex = computedProps.computedActiveIndex;\n\n      if (computedActiveIndex == -1) {\n        return;\n      }\n\n      setItemAtAsSelected(computedActiveIndex, event);\n    },\n    rowProps: _objectSpread(_objectSpread({}, computedProps.initialProps.rowProps), {}, {\n      onMouseDown: function onMouseDown(event) {\n        if (computedProps.initialProps.rowProps && computedProps.initialProps.rowProps.onMouseDown) {\n          computedProps.initialProps.rowProps.onMouseDown(event);\n        }\n\n        if (!computedProps.computedFocused && computedProps.enableKeyboardNavigation) {\n          computedProps.computedWillReceiveFocusRef.current = true;\n        }\n      }\n    })\n  };\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}