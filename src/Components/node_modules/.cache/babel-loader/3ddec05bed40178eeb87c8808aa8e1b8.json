{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _CheckBox = _interopRequireDefault(require(\"../packages/CheckBox\"));\n\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n};\n\nvar emptyObject = {};\n\nvar _default = function _default(cellProps) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n      headerProps = _ref.headerProps;\n\n  var selectAll = cellProps.selectAll,\n      deselectAll = cellProps.deselectAll,\n      selectedCount = cellProps.selectedCount,\n      unselectedCount = cellProps.unselectedCount,\n      totalCount = cellProps.totalCount,\n      headerCell = cellProps.headerCell,\n      data = cellProps.data,\n      empty = cellProps.empty,\n      rowIndex = cellProps.rowIndex,\n      rowSelected = cellProps.rowSelected,\n      setRowSelected = cellProps.setRowSelected,\n      renderCheckbox = cellProps.renderCheckbox,\n      hideIntermediateState = cellProps.hideIntermediateState;\n\n  if (empty && !renderCheckbox) {\n    return null;\n  }\n\n  var checkboxProps = {\n    disabled: empty,\n    tabIndex: cellProps.checkboxTabIndex,\n    onClick: stopPropagation,\n    supportIndeterminate: false,\n    theme: cellProps.theme,\n    className: 'InovuaReactDataGrid__checkbox'\n  };\n\n  if (headerCell) {\n    var selected = headerProps.selected,\n        unselected = headerProps.unselected;\n    checkboxProps.supportIndeterminate = !hideIntermediateState;\n    var checked;\n\n    if (selected === true) {\n      checked = unselected && (0, _typeof2.default)(unselected) == 'object' && Object.keys(unselected).length != 0 ? checkboxProps.supportIndeterminate ? null : false : true;\n    } else {\n      checked = selectedCount == 0 || !totalCount ? false : totalCount <= selectedCount && unselectedCount === 0 ? true : checkboxProps.supportIndeterminate ? null : false;\n    }\n\n    checkboxProps.checked = checked;\n    checkboxProps.onChange = checked === false ? selectAll : deselectAll;\n  } else {\n    checkboxProps.onChange = setRowSelected ? setRowSelected.bind(null, rowIndex) : null;\n    checkboxProps.checked = rowSelected;\n  }\n\n  if (renderCheckbox) {\n    if (checkboxProps.checked === null && checkboxProps.supportIndeterminate) {\n      checkboxProps.isIndeterminate = true;\n    }\n\n    var result = renderCheckbox(checkboxProps, cellProps);\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n\n  delete checkboxProps.isIndeterminate;\n  return _react.default.createElement(_CheckBox.default, Object.assign({}, checkboxProps));\n};\n\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/normalizeColumns/renderCheckbox.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_typeof2","_react","_CheckBox","stopPropagation","e","emptyObject","_default","cellProps","_ref","arguments","length","undefined","headerProps","selectAll","deselectAll","selectedCount","unselectedCount","totalCount","headerCell","data","empty","rowIndex","rowSelected","setRowSelected","renderCheckbox","hideIntermediateState","checkboxProps","disabled","tabIndex","checkboxTabIndex","onClick","supportIndeterminate","theme","className","selected","unselected","checked","keys","onChange","bind","isIndeterminate","result","createElement","assign"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _CheckBox = _interopRequireDefault(require(\"../packages/CheckBox\"));\n\nvar stopPropagation = function stopPropagation(e) {\n  e.stopPropagation();\n};\n\nvar emptyObject = {};\n\nvar _default = function _default(cellProps) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : emptyObject,\n      headerProps = _ref.headerProps;\n\n  var selectAll = cellProps.selectAll,\n      deselectAll = cellProps.deselectAll,\n      selectedCount = cellProps.selectedCount,\n      unselectedCount = cellProps.unselectedCount,\n      totalCount = cellProps.totalCount,\n      headerCell = cellProps.headerCell,\n      data = cellProps.data,\n      empty = cellProps.empty,\n      rowIndex = cellProps.rowIndex,\n      rowSelected = cellProps.rowSelected,\n      setRowSelected = cellProps.setRowSelected,\n      renderCheckbox = cellProps.renderCheckbox,\n      hideIntermediateState = cellProps.hideIntermediateState;\n\n  if (empty && !renderCheckbox) {\n    return null;\n  }\n\n  var checkboxProps = {\n    disabled: empty,\n    tabIndex: cellProps.checkboxTabIndex,\n    onClick: stopPropagation,\n    supportIndeterminate: false,\n    theme: cellProps.theme,\n    className: 'InovuaReactDataGrid__checkbox'\n  };\n\n  if (headerCell) {\n    var selected = headerProps.selected,\n        unselected = headerProps.unselected;\n    checkboxProps.supportIndeterminate = !hideIntermediateState;\n    var checked;\n\n    if (selected === true) {\n      checked = unselected && (0, _typeof2.default)(unselected) == 'object' && Object.keys(unselected).length != 0 ? checkboxProps.supportIndeterminate ? null : false : true;\n    } else {\n      checked = selectedCount == 0 || !totalCount ? false : totalCount <= selectedCount && unselectedCount === 0 ? true : checkboxProps.supportIndeterminate ? null : false;\n    }\n\n    checkboxProps.checked = checked;\n    checkboxProps.onChange = checked === false ? selectAll : deselectAll;\n  } else {\n    checkboxProps.onChange = setRowSelected ? setRowSelected.bind(null, rowIndex) : null;\n    checkboxProps.checked = rowSelected;\n  }\n\n  if (renderCheckbox) {\n    if (checkboxProps.checked === null && checkboxProps.supportIndeterminate) {\n      checkboxProps.isIndeterminate = true;\n    }\n\n    var result = renderCheckbox(checkboxProps, cellProps);\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n\n  delete checkboxProps.isIndeterminate;\n  return _react.default.createElement(_CheckBox.default, Object.assign({}, checkboxProps));\n};\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}