{"ast":null,"code":"/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getFilterValueForColumns = function getFilterValueForColumns(filterValue, columnsMap) {\n  return (filterValue || []).map(function (filterValueObject) {\n    if (filterValueObject) {\n      var column = columnsMap[filterValueObject.name];\n\n      if (column) {\n        if (column.type && !filterValueObject.type) {\n          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {\n            type: column.filterType || column.type\n          });\n        }\n\n        if (typeof column.getFilterValue == 'function') {\n          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {\n            getFilterValue: column.getFilterValue\n          });\n        }\n\n        if (typeof column.filterName === 'string') {\n          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {\n            name: column.filterName\n          });\n        }\n      }\n    }\n\n    return filterValueObject;\n  });\n};\n\nvar _default = getFilterValueForColumns;\nexports.default = _default;","map":{"version":3,"sources":["/Users/kathiavargas/node_modules/@inovua/reactdatagrid-community/hooks/useDataSource/getFilterValueForColumns.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","getFilterValueForColumns","filterValue","columnsMap","map","filterValueObject","column","name","type","filterType","getFilterValue","filterName","_default"],"mappings":"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","sourcesContent":["/** \n * Copyright (c) INOVUA SOFTWARE TECHNOLOGIES.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar getFilterValueForColumns = function getFilterValueForColumns(filterValue, columnsMap) {\n  return (filterValue || []).map(function (filterValueObject) {\n    if (filterValueObject) {\n      var column = columnsMap[filterValueObject.name];\n\n      if (column) {\n        if (column.type && !filterValueObject.type) {\n          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {\n            type: column.filterType || column.type\n          });\n        }\n\n        if (typeof column.getFilterValue == 'function') {\n          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {\n            getFilterValue: column.getFilterValue\n          });\n        }\n\n        if (typeof column.filterName === 'string') {\n          filterValueObject = _objectSpread(_objectSpread({}, filterValueObject), {}, {\n            name: column.filterName\n          });\n        }\n      }\n    }\n\n    return filterValueObject;\n  });\n};\n\nvar _default = getFilterValueForColumns;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}